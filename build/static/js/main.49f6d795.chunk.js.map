{"version":3,"sources":["components/layout/Box.jsx","components/theme.js","components/patterns/Theme.jsx","components/primitives/Text.jsx","components/primitives/Input.jsx","components/primitives/Button.jsx","components/primitives/Badge.jsx","components/primitives/Dropdown.jsx","components/primitives/Modal.jsx","components/primitives/Option.jsx","components/primitives/Link.jsx","components/icons/iconlib.js","components/icons/Icon.jsx","components/icons/IEx.jsx","components/icons/IInfo.jsx","components/patterns/Infobox.jsx","components/patterns/Addbutton.jsx","components/patterns/FormDropdown.jsx","components/patterns/FormDropdownDouble.jsx","components/patterns/FormStandard.jsx","components/patterns/FormStandardDouble.jsx","components/patterns/FormStandardDropdown.jsx","components/patterns/FormStandardLabel.jsx","components/patterns/InvolvedParty.jsx","components/patterns/EditorSection.jsx","components/patterns/InputOutputRow.jsx","components/patterns/FormSlider.jsx","components/patterns/InputField.jsx","components/patterns/SentenceConstructor.jsx","components/patterns/SentenceEditor.jsx","components/patterns/ErrorMessage.jsx","components/patterns/IdDisplay.jsx","components/patterns/InfoRow.jsx","components/layout/Flex.jsx","components/layout/Stack.jsx","components/layout/Grid.jsx","components/patterns/Card.jsx","components/primitives/Rule.jsx","layouts/components/ScrollUp.jsx","layouts/Browse.jsx","layouts/components/Intro.jsx","layouts/Dashboard.jsx","layouts/editor-layouts/EditorLeft.jsx","components/patterns/ColumnLabel.jsx","layouts/editor-components/BlankRows.jsx","components/patterns/FormTextArea.jsx","layouts/editor-components/RuleNameSection.jsx","layouts/editor-components/MetadataManagementSection.jsx","layouts/editor-components/RuleManager.jsx","layouts/editor-components/NameDescription.jsx","layouts/editor-components/RuleAuthor.jsx","layouts/editor-components/RuleMaintainer.jsx","layouts/editor-components/InputSources.jsx","layouts/editor-components/DataSource.jsx","layouts/editor-components/Time.jsx","layouts/editor-components/StandardRoleName.jsx","layouts/editor-components/InvolvedProduct.jsx","layouts/editor-components/OutputPurpose.jsx","layouts/editor-components/QualitativeWeights.jsx","layouts/editor-components/Metadata.jsx","layouts/editor-components/Entity.jsx","components/patterns/TwoFieldModule.jsx","layouts/EditorV1.jsx","layouts/EditorV2.jsx","layouts/Landing.jsx","layouts/Login.jsx","layouts/editor-layouts/RuleName.jsx","layouts/NewRule.jsx","layouts/components/Navigation.jsx","components/patterns/Search.jsx","layouts/Query.jsx","layouts/components/Footer.jsx","layouts/Application.jsx","XalgoRM.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Box","styled","boxSizing","space","color","border","layout","flexbox","grid","propTypes","palette","black","white","grey","outline","blue","purple","yellow","red","green","theme","colors","background","text","textb","primary","secondary","accent","muted","error","bg","lgrey","oline","drafta","draftb","draftc","midblue","greyblue","purplea","purpleb","bluebg","grad","publish","fonts","heading","body","fontSizes","xl","lg","lmd","smd","md","sm","xs","fontWeights","light","normal","bold","lineHeights","borders","none","thin","radii","base","round","textStyles","fontFamily","lineHeight","fontSize","fontWeight","formtitle","sectiontitle","subtitle","subtitledesc","Theme","children","Text","p","css","margin","typography","variant","variants","as","PropTypes","oneOfType","element","string","oneOf","Object","keys","node","Input","input","display","width","padding","borderColor","borderRadius","backgroundColor","boxShadow","opacity","filter","search","WebkitAppearance","height","cursor","appearance","value","onChange","func","disabled","bool","focus","defaultProps","Button","button","px","py","textAlign","textDecoration","userSelect","wide","invisible","invisiblewide","Badge","div","lightblue","both","form","blank","suggestion","Dropdown","select","minWidth","overflow","MozAppearance","Modal","isOpen","Option","props","outlineColor","outlineOffset","option","additional","d","dash","download","edit","expand","link","list","logic","pin","status","user","trash","idropdown","info","ex","close","description","exclaim","copy","add","carrot","toggle","Icon","y","name","fill","size","size_y","viewbox_x","viewbox_y","paths","iconlib","viewbox","Error","xmlns","viewBox","map","pathContent","i","IEx","transform","IInfo","Infobox","content","m","alignItems","justifyContent","onClick","Addbutton","FormDropdown","label","errormessage","options","React","useState","setIsOpen","gap","index","message","FormDropdownDouble","nameTwo","descriptionTwo","labelTwo","valueTwo","optionsTwo","isOpena","setIsOpena","gridTemplateColumns","gridGap","FormStandard","onBlur","placeholder","longInput","type","FormStandardDouble","onChangeInputA","onChangeInputB","FormStandardDropdown","FormStandardLabel","InvolvedParty","Component","styleNavlink","littlePadding","helpAlign","marginTop","marginBottom","EditorSection","title","destination","to","style","ruleLeft","borderLeft","alignSelf","borderBottom","halfWidth","maxWidth","paddingTop","paddingBottom","center","standard","rotateValue","tfb","inputCondition","toLowerCase","InputOutputRow","rowData","rule","updateRule","editRow","columnState","context","participle","attribute","subject","operation","collapse","sentence","join","cases","rowValue","ruleCopy","deepCopy","input_conditions","output_assertions","isArray","length","console","log","splice","toast","FormSlider","labela","labelb","labelc","min","toString","max","x","target","step","textareaStyle","resize","InputField","ref","setColor","wrapperRef","useRef","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","SentenceConstructor","fillBox","marginLeft","marginRight","smallFillBox","SentenceConstructorField","contentField","small","SentenceEditor","active","modalEditingInput","setParticiple","setAttribute","setSubject","setOperation","setValue","modified","setModified","flexWrap","e","sentenceCopy","ErrorMessage","IdDisplay","InfoRow","Flex","Stack","system","property","scale","number","arrayOf","Grid","Card","uuid","editLink","downloadRule","deleteRule","csrfToken","Rule","hr","borderTop","ScrollUp","window","scrollTo","top","left","behavior","this","fixpos","position","modalhold","Browse","state","pageDescription","isToggleOn","handleModal","bind","closeModal","setState","borderRight","Intro","gridTemplateRows","rel","href","hold","zIndex","rule_name","Axios","get","headers","then","res","data","metadata","blob","Blob","JSON","stringify","FileSaver","saveAs","slugify","token","confirm","delete","getRules","Dashboard","rules","ready","sort","a","b","date_a","Date","parse","date_b","older","catch","err","response","email","id","alignitems","holdTop","right","holdModal","horizontalRule","linkhold","overflowX","overflowY","long","line","horizontalLine","EditorLeft","deleteFunction","resetFunction","saveFunction","isOpenb","setIsOpenb","isOpenc","setIsOpenc","paddingRight","paddingLeft","fillRule","className","path","navigator","clipboard","writeText","heightMatch","ColumnLabel","rowLabel","onMouseEnter","onMouseLeave","stretch","column","BlankRows","FormTextArea","RuleNameSection","sectionName","setTitle","desc","setDesc","RuleSchema","__title","__description","MetadataManagementSection","RuleManager","setName","setEmail","manager","__name","__email","NameDescription","newRule","RuleAuthor","authors","RuleMaintainer","maintainers","InputSources","DataSource","country","setCountry","subCountry","setSubCountry","input_context","jurisdiction","subcountry","__country","__subcountry","Time","section","__timezone","StandardRoleName","code","setCode","input_filters","standard_role_name","isic_industry_code","isic_industry_name","__isic_industry_code","__isic_industry_name","involved_product_service","unspsc_code","unspsc_name","__nspsc_code","__unspsc_name","OutputPurpose","actionVerb","setActionVerb","output_purpose","action_verb","__action_verb","QualitativeWeights","ruleGroup","setRuleGroup","character","setCharacter","enforcement","setEnforcement","consequences","setConsequences","output_weight","rule_group","character_of_obligation","enforcement_measures","parseInt","Metadata","url","setUrl","version","setVersion","criticality","setCriticality","content_uuid","__url","__version","warning","__criticality","Entity","TwoFieldModule","fielda","descriptiona","fieldb","descriptionb","fullheight","minHeight","overflowTable","ruleLeftalt","bottomLine","rowWidth","emptyRule","generateNewRule","EditorV1","sampleInvolvedParties","modalOpen","modalEditingIndex","getRuleFromStorage","resetRule","persistRuleToLocalStorage","editSentence","editInputCondition","editOutputAssertion","addCase","ruleUUID","primary_content","storedRule","localStorage","getItem","storedRuleContent","storedRuleEmpty","objectEmpty","newRuleContent","prettyJSON","addNewInputCondition","addNewOutputAssertion","case","charAt","navigate","setItem","key","inputConditions","addNewCase","val","parties","last","push","axiosRetry","retries","retryDelay","exponentialDelay","alphabet","constrainWidth","ruleLeftOnly","halfWidthOnly","heightAdjust","topguide","EditorV2","rule_loaded","primary_content_uuid","persistRuleToStorage","enforceRuleJSONSchema","handleCollapse","handleExpand","new_rule_body","warn","enforced_body","enforceSchemaWithTables","rule_data","content_data","ruleDownloadError","setTimeout","body_enforced","force","showmsg","patch","gridArea","InvolvedProduct","col","toUpperCase","msg","ic","Landing","inputHold","widthHold","Login","loginButtonOnClick","loggedIn","authenticated","toggleAuth","RuleName","saveAndRedirect","handleDescriptionChange","handleNameChange","post","NewRule","styleHold","svghold","Navigation","isToggleAccount","handleAccount","justifySelf","Search","Query","cc","smalltext","footer","Footer","baseBoxStyle","Application","userInfo","solidUsername","userRules","toggleLoggedin","username","refresh","basepath","XalgoRM","autoClose","transition","Slide","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","defaults","xsrfHeaderName","xsrfCookieName","process","HEROKU","App","setUsername","setUser","setToken","setReady","hasOwnProperty","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","registration","unregister"],"mappings":"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cAKxE,8BACE,eAAC,EAAD,CAAK5J,OAAO,YAAY4F,YAAY,QAAQC,aAAa,OAAOrB,EAAG,EAAG/C,GAAG,OAAzE,UACE,cAAC,EAAD,CAAMmD,QAAQ,YAAd,SAA2BkH,IAC3B,cAAC,EAAD,CAAKnG,QAAS,IACd,cAAC,GAAD,CAAcyE,KAAK,OAAOR,YAAa0R,cAAWrE,SAAS1H,KAAKiM,gBAChE,cAAC,EAAD,CAAK7V,QAAS,IACd,eAAC,GAAD,CAAM8F,WAAW,SAAjB,UACE,eAAC,EAAD,WACE,0CACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,2CAEF,cAAC,EAAD,CAAK9F,QAAS,IACd,eAAC,EAAD,WACE,4CACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,2CAEF,cAAC,EAAD,CAAKA,QAAS,IACd,eAAC,EAAD,WACE,4CACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCA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","file":"static/js/main.49f6d795.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { space, color, border, layout, flexbox, grid } from 'styled-system';\r\nimport propTypes from '@styled-system/prop-types';\r\n\r\nexport const Box = styled('div')(\r\n  {\r\n    boxSizing: 'border-box',\r\n  },\r\n  space,\r\n  color,\r\n  border,\r\n  layout,\r\n  flexbox,\r\n  grid\r\n);\r\n\r\nBox.propTypes = {\r\n  ...propTypes.space,\r\n  ...propTypes.color,\r\n  ...propTypes.border,\r\n  ...propTypes.layout,\r\n  ...propTypes.flexbox,\r\n  ...propTypes.grid,\r\n};\r\n\r\n/** @component */\r\nexport default Box;\r\n","const palette = {\r\n  black: ['#000000'],\r\n  white: ['#ffffff'],\r\n  grey: ['#696969', '#F4F4F4'],\r\n  outline: ['#E7E7E7'],\r\n  blue: ['#345FF9', '#DBEAFF', '#F9FBFE'],\r\n  purple: ['#372989', '#9487E2', '#DBD7F8'],\r\n  yellow: ['#BE8D2D', '#EDC069', '#FAF3E5'],\r\n  red: ['#B44C3E', '#ED9C91', '#FBE7E5'],\r\n  green: ['#439D72', '#A3D8BE', '#D0F3E2'],\r\n};\r\n\r\nconst textStyles = {\r\n  heading: {\r\n    fontFamily: 'heading',\r\n    lineHeight: 'heading',\r\n    fontSize: 'lg',\r\n    fontWeight: 'bold',\r\n  },\r\n  body: {\r\n    fontWeight: 'normal',\r\n    fontFamily: 'body',\r\n    fontSize: 'md',\r\n    lineHeight: 'body',\r\n    color: 'text',\r\n  },\r\n  formtitle: {\r\n    fontWeight: 'bold',\r\n    fontFamily: 'body',\r\n    fontSize: 'md',\r\n    lineHeight: 'body',\r\n  },\r\n  sectiontitle: {\r\n    fontWeight: 'bold',\r\n    fontFamily: 'body',\r\n    fontSize: 'smd',\r\n    lineHeight: 'body',\r\n    color: 'text',\r\n  },\r\n  subtitle: {\r\n    fontWeight: 'bold',\r\n    fontFamily: 'body',\r\n    fontSize: 'lmd',\r\n    lineHeight: 'body',\r\n    color: 'text',\r\n  },\r\n  subtitledesc: {\r\n    fontWeight: 'bold',\r\n    fontFamily: 'body',\r\n    fontSize: 'lmd',\r\n    lineHeight: 'body',\r\n    color: 'purplea',\r\n  },\r\n  error: {\r\n    fontWeight: 'normal',\r\n    lineHeight: 'body',\r\n    fontFamily: 'body',\r\n    fontSize: 'sm',\r\n    color: 'error',\r\n  },\r\n};\r\n\r\nconst theme = {\r\n  colors: {\r\n    ...palette,\r\n    background: palette.grey[6],\r\n    text: palette.black[0],\r\n    textb: palette.grey[0],\r\n    primary: palette.blue[0],\r\n    secondary: palette.grey[2],\r\n    accent: '#fa3653',\r\n    muted: palette.grey[4],\r\n    error: palette.red[1],\r\n    bg: palette.white[0],\r\n    lgrey: palette.grey[1],\r\n    oline: palette.outline[0],\r\n    drafta: palette.yellow[0],\r\n    draftb: palette.yellow[2],\r\n    draftc: palette.yellow[1],\r\n    midblue: palette.blue[1],\r\n    greyblue: palette.blue[2],\r\n    purplea: palette.purple[0],\r\n    purpleb: palette.purple[2],\r\n    bluebg: palette.blue[1],\r\n    grad: '#F1EEFC',\r\n    publish: palette.green[0],\r\n  },\r\n  space: [0, 8, 12, 24, 36],\r\n  fonts: {\r\n    heading: 'Public Sans, sans-serif',\r\n    body: 'Public Sans, sans-serif',\r\n    // monospace: `\"Mono Lisa\", Monaco, monospace` /* Check out https://monolisa.dev for Mono Lisa font */,\r\n  },\r\n  fontSizes: {\r\n    xl: '4rem',\r\n    lg: '2rem',\r\n    lmd: '1.6rem',\r\n    smd: '1.3rem',\r\n    md: '1rem',\r\n    sm: '0.9rem',\r\n    xs: '0.75rem',\r\n  },\r\n  fontWeights: {\r\n    light: 200,\r\n    normal: 400,\r\n    bold: 700,\r\n  },\r\n  lineHeights: {\r\n    body: 1.5,\r\n    heading: 1.1,\r\n  },\r\n  borders: {\r\n    none: 'none',\r\n    thin: '1.3px solid',\r\n  },\r\n  radii: {\r\n    none: 0,\r\n    base: '8px',\r\n    round: 99999,\r\n  },\r\n  textStyles,\r\n};\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from '../theme';\r\n\r\nconst Theme = ({ children }) => <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n\r\nexport default Theme;\r\n","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { color, typography, space, layout, variant } from 'styled-system';\r\nimport { css } from '@styled-system/css';\r\nimport theme from '../theme.js';\r\n\r\n/**\r\n * A component to render all text in the app.\r\n */\r\nconst Text = styled.p(\r\n  // Default styles\r\n  // css function provides access to our design tokens\r\n  css({\r\n    margin: 0,\r\n    fontFamily: 'body',\r\n    lineHeight: 'body',\r\n  }),\r\n  // APIs\r\n  color,\r\n  typography,\r\n  space,\r\n  layout,\r\n  variant({\r\n    variants: theme.textStyles,\r\n  })\r\n);\r\n\r\nText.propTypes = {\r\n  /** Custom component or HTML tag */\r\n  as: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  /** Variant */\r\n  variant: PropTypes.oneOf(Object.keys(theme.textStyles)),\r\n  children: PropTypes.node,\r\n};\r\n\r\n/** @component */\r\nexport default Text;\r\n","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { variant } from 'styled-system';\r\nimport { css } from '@styled-system/css';\r\n\r\n/**\r\n * Input field. Default is text input.\r\n * @param {String} value is the current text value of the input.\r\n * @param {Function} onChange will be fired when the value is updated by the user.\r\n */\r\nconst Input = styled.input(\r\n  css({\r\n    boxSizing: 'border-box',\r\n    display: 'block',\r\n    width: '100%',\r\n    margin: 0,\r\n    padding: '12px',\r\n    border: 'thin',\r\n    borderColor: 'oline',\r\n    borderRadius: 'base',\r\n    fontFamily: 'body',\r\n    fontSize: 'md',\r\n    color: 'textb',\r\n    backgroundColor: 'bg',\r\n    // Remove red outline on required input in Firefox\r\n    boxShadow: 'none',\r\n\r\n    // TODO: Any way to make the placeholder text a bit lighter?\r\n    '&::placeholder': {\r\n      color: 'secondary',\r\n    },\r\n\r\n    '&:focus': {\r\n      outline: 0,\r\n      borderColor: 'primary',\r\n    },\r\n\r\n    '&:disabled': {\r\n      opacity: 0.6,\r\n      filter: 'saturate(60%)',\r\n    },\r\n  }),\r\n  variant({\r\n    variants: {\r\n      search: {\r\n        WebkitAppearance: 'none',\r\n        width: '100%',\r\n        border: 'none',\r\n        height: 3,\r\n        padding: 1,\r\n        background: 'primary',\r\n        color: 'textb',\r\n        '&::placeholder': {\r\n          color: 'textb',\r\n        },\r\n\r\n        '&:focus': {\r\n          outline: 0,\r\n          borderColor: 'primary',\r\n        },\r\n\r\n        '&:disabled': {\r\n          opacity: 0.6,\r\n          filter: 'saturate(60%)',\r\n        },\r\n      },\r\n      secondary: {\r\n        WebkitAppearance: 'none',\r\n        width: '100%',\r\n        height: 12,\r\n        borderRadius: 8,\r\n        padding: 0,\r\n        background: '#fff',\r\n        border: 'thin',\r\n        borderColor: 'oline',\r\n        '&::-webkit-slider-thumb': {\r\n          WebkitAppearance: 'none',\r\n          width: 4,\r\n          height: 12,\r\n          borderRadius: 8,\r\n          backgroundColor: 'textb',\r\n          cursor: 'pointer',\r\n        },\r\n        '&::-moz-range-thumb': {\r\n          WebkitAppearance: 'none',\r\n          appearance: 'none',\r\n          border: 'none',\r\n          width: 4,\r\n          height: 12,\r\n          backgroundColor: 'textb',\r\n          cursor: 'pointer',\r\n        },\r\n      },\r\n      error: {\r\n        borderColor: 'error',\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nInput.propTypes = {\r\n  /** Button label */\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.node,\r\n  disabled: PropTypes.bool,\r\n  focus: PropTypes.bool,\r\n};\r\n\r\nInput.defaultProps = {\r\n  variant: 'primary',\r\n};\r\n\r\n/** @component */\r\nexport default Input;\r\n","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { variant } from 'styled-system';\r\nimport { css } from '@styled-system/css';\r\n\r\n/**\r\n * A button.\r\n */\r\nconst Button = styled.button(\r\n  css({\r\n    boxSizing: 'border-box',\r\n    display: 'inline-block',\r\n    px: 1,\r\n    py: '4px',\r\n    textAlign: 'left',\r\n    border: 'thin',\r\n    color: 'primary',\r\n    borderColor: 'primary',\r\n    backgroundColor: 'bg',\r\n    borderRadius: '3px',\r\n    fontFamily: 'body',\r\n    fontSize: 'md',\r\n    textDecoration: 'none',\r\n    userSelect: 'none',\r\n\r\n    // We can't use :enabled here because it doesn't work with <a>\r\n    '&:hover:not(:disabled), &:active:not(:disabled)': {\r\n      color: 'primary',\r\n      cursor: 'pointer',\r\n      outline: 'none',\r\n    },\r\n\r\n    '&:focus': {\r\n      color: 'primary',\r\n      borderColor: 'bg',\r\n      backgroundColor: 'bg',\r\n      outline: 'none',\r\n    },\r\n\r\n    '&:disabled': {\r\n      color: 'lgrey',\r\n      borderColor: 'oline',\r\n    },\r\n  }),\r\n  variant({\r\n    variants: {\r\n      primary: {\r\n        color: 'background',\r\n        backgroundColor: 'primary',\r\n      },\r\n      secondary: {\r\n        backgroundColor: 'bg',\r\n      },\r\n      wide: {\r\n        background: 'none',\r\n        width: '100%',\r\n      },\r\n      invisible: {\r\n        borderRadius: 'base',\r\n        background: 'none',\r\n        boxShadow: 'none',\r\n        border: 'none',\r\n        px: 0,\r\n        py: 0,\r\n        color: 'text',\r\n        '&:hover:not(:disabled), &:active:not(:disabled)': {\r\n          background: 'none',\r\n          cursor: 'pointer',\r\n          boxShadow: 'none',\r\n          color: 'text',\r\n          borderColor: 'none',\r\n        },\r\n      },\r\n      invisiblewide: {\r\n        borderRadius: 'base',\r\n        background: 'none',\r\n        boxShadow: 'none',\r\n        border: 'none',\r\n        px: 0,\r\n        py: 0,\r\n        width: '100%',\r\n        '&:hover:not(:disabled), &:active:not(:disabled)': {\r\n          cursor: 'pointer',\r\n          boxShadow: 'none',\r\n        },\r\n      },\r\n      error: {\r\n        backgroundColor: '#D0F3E2',\r\n        borderColor: '#D0F3E2',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#439D72',\r\n        '&:hover:not(:disabled), &:active:not(:disabled)': {\r\n          cursor: 'pointer',\r\n          boxShadow: 'none',\r\n          backgroundColor: '#A3D8BE',\r\n          color: '#439D72',\r\n        },\r\n      },\r\n      blue: {\r\n        backgroundColor: 'primary',\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        color: '#fff',\r\n        '&:hover:not(:disabled), &:active:not(:disabled)': {\r\n          cursor: 'pointer',\r\n          boxShadow: 'none',\r\n          color: '#DBEAFF',\r\n        },\r\n      }\r\n    },\r\n  })\r\n);\r\n\r\nButton.propTypes = {\r\n  /** Button label */\r\n  children: PropTypes.node,\r\n};\r\n\r\nButton.defaultProps = {\r\n  variant: 'secondary',\r\n};\r\n\r\n/** @component */\r\nexport default Button;\r\n","import styled from 'styled-components';\r\nimport { variant } from 'styled-system';\r\nimport { css } from '@styled-system/css';\r\n\r\nconst Badge = styled.div(\r\n  css({\r\n    boxSizing: 'border-box',\r\n    display: 'inline-block',\r\n    px: 2,\r\n    py: 1,\r\n    textAlign: 'center',\r\n    border: 'none',\r\n    color: 'drafta',\r\n    backgroundColor: 'draftb',\r\n    borderRadius: 'base',\r\n    fontFamily: 'body',\r\n    fontSize: 'md',\r\n    textDecoration: 'none',\r\n  }),\r\n  variant({\r\n    variants: {\r\n      blue: {\r\n        color: 'bg',\r\n        backgroundColor: 'primary',\r\n        width: '34px',\r\n      },\r\n      lightblue: {\r\n        color: 'primary',\r\n        backgroundColor: 'midblue',\r\n        width: '34px',\r\n      },\r\n      both: {\r\n        width: '34px',\r\n      },\r\n      form: {\r\n        color: 'textb',\r\n        borderColor: 'oline',\r\n        backgroundColor: 'bg',\r\n        width: '34px',\r\n      },\r\n      blank: {\r\n        backgroundColor: 'bg',\r\n        color: 'textb',\r\n        border: 'none',\r\n        width: '34px',\r\n      },\r\n      invisible: {\r\n        backgroundColor: 'bg',\r\n        color: 'bg',\r\n        border: 'none',\r\n        width: '34px',\r\n      },\r\n      suggestion: {\r\n        color: 'purplea',\r\n        backgroundColor: 'grad',\r\n        padding: 2,\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\n/** @component */\r\nexport default Badge;\r\n","import styled from 'styled-components';\r\nimport { css } from '@styled-system/css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Dropdown = styled.select(\r\n  css({\r\n    boxSizing: 'border-box',\r\n    display: 'block',\r\n    width: '100%',\r\n    minWidth: '80px',\r\n    margin: 0,\r\n    padding: '12px',\r\n    border: '1px solid #E7E7E7',\r\n    borderRadius: 8,\r\n    fontFamily: 'Public Sans, sans-serif',\r\n    fontSize: 'md',\r\n    color: 'textb',\r\n    backgroundColor: 'bg',\r\n    // Remove red outline on required input in Firefox\r\n    boxShadow: 'none',\r\n    overflow: 'hidden',\r\n    WebkitAppearance: 'none',\r\n    MozAppearance: 'none',\r\n    appearance: 'none' /* Remove default arrow */,\r\n    background:\r\n      'url(https://raw.githubusercontent.com/RyanFleck/Xalgo-System-Prototype/master/xalgo_system_frontend/public/dropdown.svg) no-repeat right center',\r\n    '&:focus': {\r\n      outline: 0,\r\n      borderColor: 'primary',\r\n    },\r\n  })\r\n);\r\n\r\nexport default Dropdown;\r\n\r\nDropdown.propTypes = {\r\n  /** Button label */\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.node,\r\n  disabled: PropTypes.bool,\r\n  focus: PropTypes.bool,\r\n};\r\n","/// use this space to style a div witha boolean for display property\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Modal({ children, isOpen = false }) {\r\n  return <div>{isOpen && <div>{children}</div>}</div>;\r\n}\r\n\r\nModal.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n};\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\nimport { css } from '@styled-system/css';\r\n\r\n/**\r\n * An option fo ruse with the dropdown class.\r\n * @param {Object} value takes the value for the option.\r\n */\r\nconst Option = styled.option(css({}));\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { css } from '@styled-system/css';\r\nimport { Text } from '../index.js';\r\n\r\n/**\r\n * A link is a `Text` rendered as `a` with additional styles.\r\n */\r\nconst Link = styled((props) => <Text as=\"a\" {...props} />)((props) =>\r\n  css({\r\n    cursor: 'pointer',\r\n    '&, &:link, &:visited': {\r\n      color: props.color || 'primary',\r\n    },\r\n    '&:hover, &:focus, &:active': {\r\n      color: 'accent',\r\n    },\r\n    '&:focus': {\r\n      outline: '1px dashed',\r\n      outlineColor: 'accent',\r\n      outlineOffset: 2,\r\n    },\r\n  })\r\n);\r\n\r\n/** @component */\r\nexport default Link;\r\n","export const additional = [\r\n  {\r\n    d:\r\n      'M23.38,31.33h-15a8,8,0,0,1-8-8v-15a8,8,0,0,1,8-8h15a8,8,0,0,1,8,8v15A8,8,0,0,1,23.38,31.33Zm-15-29.7a6.71,6.71,0,0,0-6.7,6.7v15A6.71,6.71,0,0,0,8.38,30h15a6.71,6.71,0,0,0,6.7-6.7v-15a6.7,6.7,0,0,0-6.7-6.7Z',\r\n  },\r\n  {\r\n    d:\r\n      'M23.38,15.18H17.45a.92.92,0,0,1-.92-.92V8.33h-1.3v5.93a.92.92,0,0,1-.92.92H8.38v1.3h5.93a.92.92,0,0,1,.92.92v5.93h1.3V17.4a.92.92,0,0,1,.92-.92h5.93Z',\r\n  },\r\n];\r\n\r\nexport const dash = [\r\n  {\r\n    d:\r\n      'M5.67,16.25H2.6a2,2,0,0,1-2-2V11.18a2,2,0,0,1,2-2H5.67a2,2,0,0,1,2,2v3.07A2,2,0,0,1,5.67,16.25ZM2.6,10.18a1,1,0,0,0-1,1v3.07a1,1,0,0,0,1,1H5.67a1,1,0,0,0,1-1V11.18a1,1,0,0,0-1-1Z',\r\n  },\r\n  {\r\n    d:\r\n      'M14.4,16.25H11.33a2,2,0,0,1-2-2V11.18a2,2,0,0,1,2-2H14.4a2,2,0,0,1,2,2v3.07A2,2,0,0,1,14.4,16.25Zm-3.07-6.07a1,1,0,0,0-1,1v3.07a1,1,0,0,0,1,1H14.4a1,1,0,0,0,1-1V11.18a1,1,0,0,0-1-1Z',\r\n  },\r\n  {\r\n    d:\r\n      'M5.67,7.82H2.6a2,2,0,0,1-2-2V2.75a2,2,0,0,1,2-2H5.67a2,2,0,0,1,2,2V5.82A2,2,0,0,1,5.67,7.82ZM2.6,1.75a1,1,0,0,0-1,1V5.82a1,1,0,0,0,1,1H5.67a1,1,0,0,0,1-1V2.75a1,1,0,0,0-1-1Z',\r\n  },\r\n  {\r\n    d:\r\n      'M14.4,7.82H11.33a2,2,0,0,1-2-2V2.75a2,2,0,0,1,2-2H14.4a2,2,0,0,1,2,2V5.82A2,2,0,0,1,14.4,7.82ZM11.33,1.75a1,1,0,0,0-1,1V5.82a1,1,0,0,0,1,1H14.4a1,1,0,0,0,1-1V2.75a1,1,0,0,0-1-1Z',\r\n  },\r\n];\r\n\r\nexport const download = [\r\n  {\r\n    d:\r\n      'M7.72,11.32a.59.59,0,0,1-.34-.1L1.14,6.92A.61.61,0,0,1,.9,6.25a.59.59,0,0,1,.58-.42H4.6V1.18a.6.6,0,0,1,.6-.6h5.25a.6.6,0,0,1,.6.6V5.83H14a.6.6,0,0,1,.57.42.59.59,0,0,1-.23.67l-6.24,4.3A.59.59,0,0,1,7.72,11.32Zm-5-4.49,5,3.41,5-3.41h-2a.6.6,0,0,1-.6-.6V1.58H5.6V6.23a.6.6,0,0,1-.6.6Zm11-.73Z',\r\n  },\r\n  {\r\n    d:\r\n      'M14.81,14.14H.62a.51.51,0,0,1-.5-.5.5.5,0,0,1,.5-.5H14.81a.5.5,0,0,1,.5.5A.5.5,0,0,1,14.81,14.14Z',\r\n  },\r\n];\r\n\r\nexport const edit = [\r\n  {\r\n    d:\r\n      'M14.52,7.87,10.35,3.71,11.86,2.2a2,2,0,0,1,1.41-.58h0a2,2,0,0,1,1.42.58L16,3.53a2,2,0,0,1,0,2.83ZM11.77,3.71l2.75,2.74.8-.79a1,1,0,0,0,0-1.42L14,2.91a1,1,0,0,0-.71-.29h0a1,1,0,0,0-.7.29Z',\r\n  },\r\n  {\r\n    d: 'M4.23,18.18H.1V14L9.73,4.38l4.15,4.15Zm-3.13-1H3.81l8.66-8.65L9.73,5.79,1.1,14.39Z',\r\n  },\r\n];\r\n\r\nexport const expand = [\r\n  {\r\n    d:\r\n      'M12.08,13.55H3.88a.55.55,0,0,1,0-1.1h8V1.62H1.32V11L7.73,4.53H3.88A.55.55,0,0,1,3.33,4a.54.54,0,0,1,.55-.55h5.2a.43.43,0,0,1,.19,0h0a.87.87,0,0,1,.18.11h0a.87.87,0,0,1,.11.18h0a.65.65,0,0,1,0,.19h0V9.53a.55.55,0,0,1-.55.55.55.55,0,0,1-.55-.55V5.31L1.67,12.15a.85.85,0,0,1-.93.18.83.83,0,0,1-.52-.78V1.38A.85.85,0,0,1,1.07.53h11a.85.85,0,0,1,.85.85V12.7A.85.85,0,0,1,12.08,13.55Z',\r\n  },\r\n];\r\n\r\nexport const filter = [\r\n  {\r\n    d: 'M8.36,10.94,5,7.55V5.16L.28.54H12.65L8.36,5.15ZM6,7.13l1.39,1.4V4.75l3-3.21H2.72L6,4.74Z',\r\n  },\r\n];\r\n\r\nexport const link = [\r\n  {\r\n    d:\r\n      'M8,4.58l2.27-2.27a.11.11,0,0,1,.15,0l2.44,2.44a.12.12,0,0,1,0,.14L8.3,9.42a.1.1,0,0,1-.14,0L6.28,7.54l-.85.84,1.88,1.89a1.3,1.3,0,0,0,1.84,0l4.53-4.53a1.3,1.3,0,0,0,0-1.84L11.24,1.46a1.29,1.29,0,0,0-1.83,0l-3,3h0a1.06,1.06,0,0,1,1.48,0ZM4.73,7.66a.43.43,0,0,1,0-.07',\r\n  },\r\n  {\r\n    d:\r\n      'M6.73,11,4.45,13.27a.1.1,0,0,1-.14,0L1.87,10.83a.1.1,0,0,1,0-.14L6.4,6.16a.1.1,0,0,1,.14,0L8.43,8l.85-.84L7.39,5.31a1.3,1.3,0,0,0-1.84,0L1,9.84a1.32,1.32,0,0,0,0,1.84l2.44,2.44a1.3,1.3,0,0,0,1.84,0l3-3h0a1.05,1.05,0,0,1-1.47,0Z',\r\n  },\r\n];\r\n\r\nexport const list = [\r\n  {\r\n    d:\r\n      'M10.34,1.73H4.84a.51.51,0,0,1-.5-.5.5.5,0,0,1,.5-.5h5.5a.5.5,0,0,1,.5.5A.5.5,0,0,1,10.34,1.73Z',\r\n  },\r\n  {\r\n    d:\r\n      'M10.34,5.73H4.84a.5.5,0,0,1-.5-.5.51.51,0,0,1,.5-.5h5.5a.5.5,0,0,1,.5.5A.5.5,0,0,1,10.34,5.73Z',\r\n  },\r\n  {\r\n    d:\r\n      'M10.34,9.29H4.84a.5.5,0,0,1-.5-.5.51.51,0,0,1,.5-.5h5.5a.5.5,0,0,1,.5.5A.5.5,0,0,1,10.34,9.29Z',\r\n  },\r\n  {\r\n    d:\r\n      'M1.6,3.11A1.44,1.44,0,1,1,3,1.67,1.44,1.44,0,0,1,1.6,3.11Zm0-1.88A.44.44,0,1,0,2,1.67.45.45,0,0,0,1.6,1.23Z',\r\n  },\r\n  {\r\n    d:\r\n      'M1.6,6.68A1.45,1.45,0,1,1,3,5.23,1.45,1.45,0,0,1,1.6,6.68Zm0-1.89A.45.45,0,1,0,2,5.23.45.45,0,0,0,1.6,4.79Z',\r\n  },\r\n  {\r\n    d:\r\n      'M1.6,10.24A1.45,1.45,0,1,1,3,8.79,1.45,1.45,0,0,1,1.6,10.24Zm0-1.89A.45.45,0,1,0,2,8.79.45.45,0,0,0,1.6,8.35Z',\r\n  },\r\n];\r\n\r\nexport const logic = [\r\n  {\r\n    d: 'M7,11H.37v-.85l3-4.2L.56,1.82V.88H6.78V2H2.35L5,5.83l-2.9,4H7Z',\r\n  },\r\n];\r\n\r\nexport const pin = [\r\n  {\r\n    d:\r\n      'M13.21,3.36C11.41,2,9.36,1.83,8.39,2.84l0,0L8.22,3h0L8,3.36,7.18,4.92A6.29,6.29,0,0,0,3.4,7.44h0a1.15,1.15,0,0,0-.14.92A3.68,3.68,0,0,0,3.8,9.6,10.45,10.45,0,0,0,6.06,12L4,14.74a.6.6,0,0,0,.13.84.56.56,0,0,0,.35.11A.6.6,0,0,0,5,15.45l2-2.73a10.8,10.8,0,0,0,3,1.48,4.34,4.34,0,0,0,1.1.17l.24,0a1.13,1.13,0,0,0,.84-.4h0a6.3,6.3,0,0,0,1.28-4.37L14.71,8.4l.4-.59h0C15.79,6.59,15,4.69,13.21,3.36ZM10.34,13a9.44,9.44,0,0,1-2.6-1.28l.31-.43a.6.6,0,0,0-.12-.84.6.6,0,0,0-.84.13L6.77,11A9.07,9.07,0,0,1,4.82,9a3,3,0,0,1-.36-.73,2.18,2.18,0,0,1,.8.12A10,10,0,0,1,8.34,10a9.85,9.85,0,0,1,2.45,2.48,2.93,2.93,0,0,1,.35.73A2.35,2.35,0,0,1,10.34,13Zm1.81-3.87.09.35A4.55,4.55,0,0,1,12,12.09a3,3,0,0,0-.16-.3A11,11,0,0,0,9.06,9,11.31,11.31,0,0,0,5.58,7.19L5.2,7.12a4.68,4.68,0,0,1,2.4-1H8L9,4l.24-.32c.41-.56,1.91-.42,3.3.61s2,2.42,1.55,3h0l-.19.26Z',\r\n  },\r\n];\r\n\r\nexport const search = [\r\n  {\r\n    d:\r\n      'M12.25,11.74l-3.5-3.5a1,1,0,0,0-.19-.12A4.36,4.36,0,1,0,5.19,9.74,4.26,4.26,0,0,0,7.6,9a.76.76,0,0,0,.15.23l3.5,3.5a.7.7,0,0,0,1-1ZM1.81,5.36A3.38,3.38,0,1,1,5.19,8.74,3.38,3.38,0,0,1,1.81,5.36Z',\r\n  },\r\n];\r\n\r\nexport const status = [\r\n  {\r\n    d: 'M8.15,4.15a4,4,0,0,1,2.25.68,4.12,4.12,0,0,1,1.28,1.41A4,4,0,1,1,8.15,4.15Z',\r\n  },\r\n];\r\n\r\nexport const user = [\r\n  {\r\n    d:\r\n      'M8,7.87A3.28,3.28,0,1,1,11.29,4.6,3.28,3.28,0,0,1,8,7.87ZM8,2.62a2,2,0,1,0,2,2A2,2,0,0,0,8,2.62Z',\r\n  },\r\n  {\r\n    d:\r\n      'M14,16.53a.65.65,0,0,1-.65-.65c0-.21-.09-5.36-5.37-5.36s-5.36,5.15-5.36,5.36a.65.65,0,0,1-.65.65H2a.65.65,0,0,1-.65-.65c0-.06.08-6.66,6.66-6.66s6.67,6.6,6.67,6.66a.65.65,0,0,1-.65.65Z',\r\n  },\r\n];\r\n\r\nexport const trash = [\r\n  {\r\n    d:\r\n      'M4,14.45A.5.5,0,0,1,3.53,14L3.06,8.24a.5.5,0,0,1,.46-.54.51.51,0,0,1,.54.46l.46,5.75a.49.49,0,0,1-.45.54Z',\r\n  },\r\n  {\r\n    d:\r\n      'M7.65,14.45h0a.51.51,0,0,1-.46-.54l.47-5.75a.5.5,0,0,1,1,.08L8.15,14A.5.5,0,0,1,7.65,14.45Z',\r\n  },\r\n  {\r\n    d: 'M9.84,16.19h-8L.84,6h10Zm-7.1-1H8.93L9.73,7H1.94Z',\r\n  },\r\n  {\r\n    d: 'M9.84,2.5H8.24v-2H3.62v2H1.84l-1,2.8h10Zm-5.22-1H7.24v1H4.62ZM2.26,4.3l.28-.8H9.13l.29.8Z',\r\n  },\r\n  {\r\n    d: 'M5.84,14.45a.5.5,0,0,1-.5-.5V8.2a.5.5,0,0,1,.5-.5.5.5,0,0,1,.5.5V14A.5.5,0,0,1,5.84,14.45Z',\r\n  },\r\n];\r\n\r\nexport const idropdown = [\r\n  {\r\n    d: 'M3.87.36,6.43,4.79H1.32Z',\r\n  },\r\n  {\r\n    d: 'M3.87,12.17,1.32,7.74H6.43Z',\r\n  },\r\n];\r\n\r\nexport const info = [\r\n  {\r\n    d:\r\n      'M9.78,11.3l-.06.25a4.51,4.51,0,0,1-.58.2,1.34,1.34,0,0,1-.36.06.61.61,0,0,1-.47-.16.54.54,0,0,1-.16-.4,1.23,1.23,0,0,1,0-.19c0-.07,0-.15.05-.25l.41-1.66.06-.29a1.39,1.39,0,0,0,0-.27c0-.14,0-.24-.07-.28a.42.42,0,0,0-.29-.08l-.24,0-.21.05L8,8.06a3.2,3.2,0,0,1,.55-.21,1.62,1.62,0,0,1,.38-.06.61.61,0,0,1,.46.15.56.56,0,0,1,.15.41,1.76,1.76,0,0,1,0,.19,2,2,0,0,1,0,.24L9,10.44c0,.1,0,.2-.07.3a1.29,1.29,0,0,0,0,.24.39.39,0,0,0,.1.31.54.54,0,0,0,.32.08l.21,0A.8.8,0,0,0,9.78,11.3Zm.27-5a.55.55,0,0,1-.14.39.46.46,0,0,1-.36.16.45.45,0,0,1-.34-.15.53.53,0,0,1,0-.74.43.43,0,0,1,.34-.16A.46.46,0,0,1,9.91,6,.47.47,0,0,1,10.05,6.31Z',\r\n  },\r\n  {\r\n    d:\r\n      'M9,13.93H9A4.93,4.93,0,0,1,9,4.07H9a4.93,4.93,0,0,1,0,9.86ZM9,4.57A4.42,4.42,0,0,0,4.56,9,4.44,4.44,0,0,0,9,13.43H9A4.43,4.43,0,0,0,9,4.57H9Z',\r\n  },\r\n];\r\n\r\nexport const ex = [\r\n  {\r\n    d:\r\n      'M15.82,14.88l-3-3,3-3a.75.75,0,0,0,0-1.06.77.77,0,0,0-1.07,0l-3,3-3-3A.75.75,0,1,0,7.7,8.89l3,3-3,3a.75.75,0,0,0,0,1.06.74.74,0,0,0,.53.22.73.73,0,0,0,.53-.22l3-3,3,3a.71.71,0,0,0,.53.22.74.74,0,0,0,.53-.22A.75.75,0,0,0,15.82,14.88Z',\r\n  },\r\n];\r\n\r\nexport const close = [\r\n  {\r\n    d:\r\n      'M3.14,7.69a12.73,12.73,0,0,1,1.51,2.5H3.73A10.85,10.85,0,0,0,.31,7.38V6.92A11,11,0,0,0,3.73,4.1h.92A12.44,12.44,0,0,1,3.14,6.6H15.69V7.69Z',\r\n  },\r\n];\r\n\r\nexport const description = [\r\n  {\r\n    d:\r\n      'M11.19,1.49H5.69a.5.5,0,0,1-.5-.5.5.5,0,0,1,.5-.5h5.5a.5.5,0,0,1,.5.5A.51.51,0,0,1,11.19,1.49Z',\r\n  },\r\n  {\r\n    d: 'M11.19,5.05H1a.5.5,0,0,1,0-1H11.19a.5.5,0,0,1,0,1Z',\r\n  },\r\n  {\r\n    d:\r\n      'M11.19,8.61H1a.5.5,0,0,1-.5-.5.5.5,0,0,1,.5-.5H11.19a.51.51,0,0,1,.5.5A.5.5,0,0,1,11.19,8.61Z',\r\n  },\r\n];\r\n\r\nexport const exclaim = [\r\n  {\r\n    d:\r\n      'M6.83,14a4.94,4.94,0,1,1,4.93-4.94A4.94,4.94,0,0,1,6.83,14Zm0-9.37a4.44,4.44,0,1,0,4.43,4.43A4.44,4.44,0,0,0,6.83,4.62Z',\r\n  },\r\n  {\r\n    d:\r\n      'M7.86,6.56a1.76,1.76,0,0,1,0,.19c0,.08,0,.17-.09.3-.12.37-.27.8-.45,1.31s-.38,1.11-.61,1.81h-.3c.08-.6.18-1.29.27-2.08s.16-1.25.19-1.39a.63.63,0,0,1,.22-.38.6.6,0,0,1,.4-.15.4.4,0,0,1,.29.11A.39.39,0,0,1,7.86,6.56Zm-1,4.85a.47.47,0,0,1-.16.37.51.51,0,0,1-.38.16.52.52,0,0,1-.38-.16.5.5,0,0,1-.15-.37A.54.54,0,0,1,5.94,11a.57.57,0,0,1,.38-.16A.55.55,0,0,1,6.7,11,.51.51,0,0,1,6.86,11.41Z',\r\n  },\r\n];\r\n\r\nexport const copy = [\r\n  {\r\n    d:\r\n      'M10.59.81H5.84A1.51,1.51,0,0,0,4.36,2.09h-.3a2,2,0,0,0-2,2v7.75a2,2,0,0,0,2,2H8.81a2,2,0,0,0,2-2v-.3a1.51,1.51,0,0,0,1.28-1.48V2.31A1.5,1.5,0,0,0,10.59.81Zm-1.78,12H4.06a1,1,0,0,1-1-1V4.09a1,1,0,0,1,1-1h.28v7a1.5,1.5,0,0,0,1.5,1.5h4v.28A1,1,0,0,1,8.81,12.84Zm2.28-2.78a.5.5,0,0,1-.5.5H5.84a.5.5,0,0,1-.5-.5V2.31a.5.5,0,0,1,.5-.5h4.75a.51.51,0,0,1,.5.5Z',\r\n  },\r\n];\r\n\r\nexport const add = [\r\n  {\r\n    d:\r\n      'M12,6H7.73V1.72a.75.75,0,0,0-1.5,0V6H2a.75.75,0,1,0,0,1.5H6.23v4.24a.75.75,0,1,0,1.5,0V7.45H12A.75.75,0,0,0,12,6Z',\r\n  },\r\n];\r\n\r\nexport const carrot = [\r\n  {\r\n    d:\r\n      'M7,10.27,1.5,4.77a.71.71,0,0,1,0-1,.72.72,0,0,1,1,0L7,8.29l4.5-4.51a.72.72,0,0,1,1,0,.71.71,0,0,1,0,1Z',\r\n  }\r\n];\r\n\r\nexport const toggle = [\r\n  {\r\n    d:\r\n      'M15,7.62a1.6,1.6,0,0,1,1.62,1.62A1.63,1.63,0,1,1,15,7.62Z',\r\n  },\r\n  {\r\n    d:\r\n      'M9.28,7.62A1.63,1.63,0,1,1,7.65,9.24,1.63,1.63,0,0,1,9.28,7.62Z',\r\n  },\r\n  {\r\n    d:\r\n      'M3.53,7.62a1.58,1.58,0,0,1,.91.28,1.63,1.63,0,0,1-.91,3,1.63,1.63,0,1,1,0-3.25Z',\r\n  }\r\n]\r\n","import React from 'react';\r\nimport * as iconlib from './iconlib';\r\n\r\nfunction getViewBox(x, y) {\r\n  /*\r\n  let x = 0;\r\n  let y = 0;\r\n  let lx = 0;\r\n  let ly = 0;\r\n  paths.forEach((path) => {\r\n    let pathVals = path.d;\r\n    console.log(pathVals);\r\n    pathVals = pathVals.replace(/[A-Z]/g, '\\n ').replace(/[-]/g, '');\r\n    console.log(pathVals);\r\n  });\r\n\r\n  */\r\n  return `0 0 ${x} ${y}`;\r\n}\r\n\r\nconst default_size = 18;\r\nconst default_viewbox = 18;\r\n\r\nconst Icon = ({\r\n  name,\r\n  fill = '#204EF0',\r\n  size = default_size,\r\n  size_y = default_size,\r\n  viewbox_x = default_viewbox,\r\n  viewbox_y = default_viewbox,\r\n}) => {\r\n  const paths = iconlib[name];\r\n  const viewbox = getViewBox(viewbox_x, viewbox_y); // Pass paths to this to finish the function.\r\n\r\n  if (!paths) {\r\n    throw new Error('No paths given to icon.');\r\n  }\r\n\r\n  // Use border for development:\r\n  // style={{ border: '1px solid #EEE', borderRadius: '4px' }}\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={`${size}px`}\r\n      height={`${size_y === default_size ? size : size_y}px`}\r\n      viewBox={viewbox}\r\n    >\r\n      <title>{`icon-${name}`}</title>\r\n      {paths.map((pathContent, i) => {\r\n        return <path key={i} d={pathContent.d} fill={fill} />;\r\n      })}\r\n    </svg>\r\n  );\r\n};\r\n\r\n/** @component */\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nexport default function IEx() {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"9px\" height=\"9px\" viewBox=\"0 0 9 9\"><title>i-ex</title><path d=\"M12.82,11.88l-3-3,3-3a.75.75,0,0,0,0-1.06.77.77,0,0,0-1.07,0l-3,3-3-3A.75.75,0,0,0,4.7,5.89l3,3-3,3a.75.75,0,0,0,0,1.06.74.74,0,0,0,.53.22.73.73,0,0,0,.53-.22l3-3,3,3a.71.71,0,0,0,.53.22.74.74,0,0,0,.53-.22A.75.75,0,0,0,12.82,11.88Z\" transform=\"translate(-4.48 -4.61)\" fill=\"#204ef0\"/></svg>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function IInfo() {\r\n  return (\r\n    <svg height=\"14px\" width=\"14px\" viewBox=\"0 0 12 12\">\r\n      <title>i-info-small</title>\r\n      <path\r\n        d=\"M9,13.93H9A4.93,4.93,0,0,1,9,4.07H9a4.93,4.93,0,0,1,0,9.86ZM9,4.57A4.42,4.42,0,0,0,4.56,9,4.44,4.44,0,0,0,9,13.43H9A4.43,4.43,0,0,0,9,4.57H9Z\"\r\n        transform=\"translate(-4.06 -4.07)\"\r\n        fill=\"#204ef0\"\r\n      />\r\n      <path\r\n        d=\"M9.84,11.33l-.06.25-.58.2a2.25,2.25,0,0,1-.36.06.67.67,0,0,1-.47-.16.57.57,0,0,1-.16-.4v-.19a.5.5,0,0,1,0-.25l.41-1.66.06-.29a1.22,1.22,0,0,0,0-.27c0-.14,0-.24-.07-.28a.34.34,0,0,0-.29-.08H8.13l-.21.05.14-.22a2.83,2.83,0,0,1,.55-.21A1.21,1.21,0,0,1,9,7.82.56.56,0,0,1,9.45,8a.55.55,0,0,1,.15.41V8.8l-.54,1.66a.46.46,0,0,1-.07.3A1,1,0,0,0,9,11a.41.41,0,0,0,.1.32.6.6,0,0,0,.32.07h.21A.79.79,0,0,0,9.84,11.33Zm.27-5a.52.52,0,0,1-.14.39.48.48,0,0,1-.36.16.46.46,0,0,1-.34-.16.52.52,0,0,1,0-.73.39.39,0,0,1,.34-.16A.45.45,0,0,1,10,6a.5.5,0,0,1,.14.31Z\"\r\n        transform=\"translate(-4.06 -4.07)\"\r\n        fill=\"#204ef0\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Text, Box, Button, Flex, IEx, IInfo } from '..';\r\n\r\nfunction Infobox(props) {\r\n  const { content } = props;\r\n\r\n  return (\r\n    <Box p={2} m={0} width={1} bg=\"bluebg\" borderRadius=\"base\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Flex alignItems=\"center\">\r\n          <IInfo />\r\n          <Box p={1} />\r\n          <Text color=\"primary\">{content}</Text>\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <Button variant=\"invisible\" onClick={props.onClick}>\r\n            <IEx />\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Infobox;\r\n","import React from 'react';\r\nimport { Flex, Button, Text, Box, Icon } from '..';\r\n\r\nexport default function Addbutton(props) {\r\n  const { onClick, content } = props;\r\n  return (\r\n    <div>\r\n      <Box padding={1} />\r\n      <Button variant=\"invisiblewide\" onClick={onClick}>\r\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <Text color=\"text\">{content || 'New Field'}</Text>\r\n          <Box padding={1} />\r\n          <Icon name=\"add\" fill=\"#A3D8BE\"/>\r\n        </Flex>\r\n      </Button>\r\n      <Box padding={1} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Stack, Dropdown, Box, Button, Text, Flex, Modal, Infobox, IInfo, ErrorMessage } from '..';\r\n\r\nfunction FormDropdown({ name, description, label, value, errormessage, options = [], onChange }) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const renderOptions = () => {\r\n    return options.map(({ value, label, disabled }, index) => (\r\n      <option value={value} key={index}>\r\n        {label}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Stack gap={4}>\r\n      <Modal isOpen={isOpen}>\r\n        <Infobox content={description} onClick={() => setIsOpen(false)} />\r\n        <Box padding={1} />\r\n      </Modal>\r\n      <Flex alignItems=\"center\">\r\n        <Text color=\"textb\">{name}</Text>\r\n        <Button variant=\"invisible\" onClick={() => setIsOpen(true)}>\r\n          <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n            <IInfo />\r\n          </Flex>\r\n        </Button>\r\n      </Flex>\r\n      <Box padding={1} />\r\n      <Dropdown value={value} onChange={onChange}>\r\n        {renderOptions()}\r\n      </Dropdown>\r\n\r\n      {errormessage ? (\r\n        <div>\r\n          <Box padding={1} />\r\n          <ErrorMessage message={errormessage} />\r\n        </div>\r\n      ) : (\r\n        <Modal />\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default FormDropdown;\r\n","import React from 'react';\r\nimport { Stack, Dropdown, Box, IInfo, Button, Grid, Text, Flex, Modal, Infobox } from '..';\r\n\r\nfunction FormDropdownDouble({\r\n  name,\r\n  nameTwo,\r\n  description,\r\n  descriptionTwo,\r\n  label,\r\n  labelTwo,\r\n  value,\r\n  valueTwo,\r\n  options = [],\r\n  optionsTwo = [],\r\n}) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const [isOpena, setIsOpena] = React.useState(false);\r\n\r\n  const renderOptions = () => {\r\n    return options.map(({ value, label }, index) => (\r\n      <option value={value} key={index}>\r\n        {label}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const renderOptionsTwo = () => {\r\n    return optionsTwo.map(({ valueTwo, labelTwo }, index) => (\r\n      <option value={valueTwo} key={index}>\r\n        {labelTwo}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Stack gap={4}>\r\n      {/* first modal */}\r\n      <Modal isOpen={isOpen}>\r\n        <Infobox content={description} onClick={() => setIsOpen(false)} />\r\n      </Modal>\r\n      {/* second modal */}\r\n      <Modal isOpen={isOpena}>\r\n        <Infobox content={descriptionTwo} onClick={() => setIsOpena(false)} />\r\n      </Modal>\r\n      <Box padding={1} />\r\n      <Grid gridTemplateColumns=\"48.75% 48.75%\" gridGap=\"2.5%\">\r\n        <Box>\r\n          {/* first input field */}\r\n          <Flex alignItems=\"center\">\r\n            <Text>{name}</Text>\r\n            <Button variant=\"invisible\" onClick={() => setIsOpen(true)}>\r\n              <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n                <IInfo />\r\n              </Flex>\r\n            </Button>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <Dropdown>{renderOptions()}</Dropdown>\r\n        </Box>\r\n        <Box>\r\n          {/* second input field */}\r\n          <Flex alignItems=\"center\">\r\n            <Text>{nameTwo}</Text>\r\n            <Button variant=\"invisible\" onClick={() => setIsOpena(true)}>\r\n              <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n                <IInfo />\r\n              </Flex>\r\n            </Button>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <Dropdown>{renderOptionsTwo()}</Dropdown>\r\n        </Box>\r\n      </Grid>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default FormDropdownDouble;\r\n","import React from 'react';\r\nimport {\r\n  Input,\r\n  Stack,\r\n  Box,\r\n  Button,\r\n  Text,\r\n  Flex,\r\n  Modal,\r\n  Infobox,\r\n  IInfo,\r\n  ErrorMessage,\r\n  InputField,\r\n} from '..';\r\n\r\nfunction FormStandard({\r\n  name,\r\n  description,\r\n  value,\r\n  onChange,\r\n  onBlur,\r\n  placeholder,\r\n  errormessage,\r\n  longInput = false,\r\n  type = 'text',\r\n}) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <Stack gap={4}>\r\n      <Modal isOpen={isOpen}>\r\n        <div>\r\n          <Infobox content={description} onClick={() => setIsOpen(false)} />\r\n          <Box p={1} />\r\n        </div>\r\n      </Modal>\r\n      <Flex alignItems=\"center\">\r\n        <Text color=\"textb\">{name}</Text>\r\n        <Button variant=\"invisible\" onClick={() => setIsOpen(true)}>\r\n          <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n            <IInfo />\r\n          </Flex>\r\n        </Button>\r\n      </Flex>\r\n      <Box padding={1} />\r\n      {!longInput ? (\r\n        <div>\r\n          {errormessage ? (\r\n            <Input\r\n              value={value}\r\n              onChange={onChange}\r\n              onBlur={onBlur}\r\n              placeholder={placeholder}\r\n              variant=\"error\"\r\n              type={type}\r\n            />\r\n          ) : (\r\n            <Input\r\n              value={value}\r\n              onChange={onChange}\r\n              onBlur={onBlur}\r\n              placeholder={placeholder}\r\n              type={type}\r\n            />\r\n          )}\r\n          {errormessage ? <ErrorMessage message={errormessage} /> : null}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {errormessage ? (\r\n            <InputField\r\n              value={value}\r\n              onChange={onChange}\r\n              onBlur={onBlur}\r\n              placeholder={placeholder}\r\n              variant=\"error\"\r\n              type={type}\r\n            />\r\n          ) : (\r\n            <InputField\r\n              value={value}\r\n              onChange={onChange}\r\n              onBlur={onBlur}\r\n              placeholder={placeholder}\r\n              type={type}\r\n            />\r\n          )}\r\n          {errormessage ? <ErrorMessage message={errormessage} /> : null}\r\n        </div>\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default FormStandard;\r\n","import React from 'react';\r\nimport { Input, Stack, Infobox, Box, Button, Grid, Text, Flex, Modal, IInfo } from '..';\r\n\r\nfunction FormStandardDouble(props) {\r\n  // Extract some props.\r\n  const { name, nameTwo, description, descriptionTwo } = props;\r\n\r\n  // Use state for information boxes.\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isOpena, setIsOpena] = React.useState(false);\r\n\r\n  return (\r\n    <Stack gap={4}>\r\n      {/* first modal */}\r\n      <Modal isOpen={isOpen}>\r\n        <Infobox content={description} onClick={() => setIsOpen(false)} />\r\n      </Modal>\r\n      {/* second modal */}\r\n      <Modal isOpen={isOpena}>\r\n        <Infobox content={descriptionTwo} onClick={() => setIsOpena(false)} />\r\n      </Modal>\r\n      <Box padding={1} />\r\n      <Grid gridTemplateColumns=\"48.75% 48.75%\" gridGap=\"2.5%\">\r\n        <Box>\r\n          {/* first input field */}\r\n          <Flex alignItems=\"center\">\r\n            <Text>{name}</Text>\r\n            <Button\r\n              variant=\"invisible\"\r\n              onClick={() => {\r\n                setIsOpen(true);\r\n                setIsOpena(false);\r\n              }}\r\n            >\r\n              <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n                <IInfo />\r\n              </Flex>\r\n            </Button>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <Input onChange={props.onChangeInputA} />\r\n        </Box>\r\n        <Box>\r\n          {/* second input field */}\r\n          <Flex alignItems=\"center\">\r\n            <Text>{nameTwo}</Text>\r\n            <Button\r\n              variant=\"invisible\"\r\n              onClick={() => {\r\n                setIsOpena(true);\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n                <IInfo />\r\n              </Flex>\r\n            </Button>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <Input onChange={props.onChangeInputB} />\r\n        </Box>\r\n      </Grid>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default FormStandardDouble;\r\n","import React from 'react';\r\nimport { Infobox, Input, Stack, Dropdown, Box, Button, Grid, Text, Flex, Modal, IInfo } from '..';\r\n\r\nfunction FormStandardDropdown({\r\n  name,\r\n  nameTwo,\r\n  description,\r\n  descriptionTwo,\r\n  placeholder,\r\n  label,\r\n  value,\r\n  options = [],\r\n}) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const [isOpena, setIsOpena] = React.useState(false);\r\n\r\n  const renderOptions = () => {\r\n    return options.map(({ value, label, disabled }, index) => (\r\n      <option value={value} key={index}>\r\n        {label}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Stack gap={4}>\r\n      {/* first modal */}\r\n      <Modal isOpen={isOpen}>\r\n        <Infobox content={description} onClick={() => setIsOpen(false)} />\r\n      </Modal>\r\n      {/* second modal */}\r\n      <Modal isOpen={isOpena}>\r\n        <Infobox content={descriptionTwo} onClick={() => setIsOpena(false)} />\r\n      </Modal>\r\n      <Box padding={1} />\r\n      <Grid gridTemplateColumns=\"48.75% 48.75%\" gridGap=\"2.5%\">\r\n        <Box>\r\n          {/* first input field */}\r\n          <Flex alignItems=\"center\">\r\n            <Text>{name}</Text>\r\n            <Button\r\n              variant=\"invisible\"\r\n              onClick={() => {\r\n                setIsOpena(false);\r\n                setIsOpen(true);\r\n              }}\r\n            >\r\n              <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n                <IInfo />\r\n              </Flex>\r\n            </Button>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <Input placeholder={placeholder} />\r\n        </Box>\r\n        <Box>\r\n          {/* second input field */}\r\n          <Flex alignItems=\"center\">\r\n            <Text>{nameTwo}</Text>\r\n            <Button\r\n              variant=\"invisible\"\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n                setIsOpena(true);\r\n              }}\r\n            >\r\n              <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n                <IInfo />\r\n              </Flex>\r\n            </Button>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <Dropdown>{renderOptions()}</Dropdown>\r\n        </Box>\r\n      </Grid>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default FormStandardDropdown;\r\n","import React from 'react';\r\nimport { Input, Stack, Infobox, Box, IInfo, Button, Grid, Text, Flex, Modal } from '..';\r\n\r\nfunction FormStandardLabel({ name, nameTwo, description, descriptionTwo, value }) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const [isOpena, setIsOpena] = React.useState(false);\r\n\r\n  return (\r\n    <Stack gap={4}>\r\n      {/* first modal */}\r\n      <Modal isOpen={isOpen}>\r\n        <Infobox content={description} onClick={() => setIsOpen(false)} />\r\n      </Modal>\r\n      {/* second modal */}\r\n      <Modal isOpen={isOpena}>\r\n        <Infobox content={descriptionTwo} onClick={() => setIsOpena(false)} />\r\n      </Modal>\r\n      <Box padding={1} />\r\n      <Grid gridTemplateColumns=\"48.75% 48.75%\" gridGap=\"2.5%\">\r\n        <Box>\r\n          {/* first input field */}\r\n          <Flex alignItems=\"center\">\r\n            <Text>{name}</Text>\r\n            <Button variant=\"invisible\" onClick={() => setIsOpen(true)}>\r\n              <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n                <IInfo />\r\n              </Flex>\r\n            </Button>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <Input />\r\n        </Box>\r\n        <Box>\r\n          {/* second input field */}\r\n          <Flex alignItems=\"center\">\r\n            <Text>{nameTwo}</Text>\r\n            <Button variant=\"invisible\" onClick={() => setIsOpena(true)}>\r\n              <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n                <IInfo />\r\n              </Flex>\r\n            </Button>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <Box padding={1}>\r\n            <Text>{value}</Text>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default FormStandardLabel;\r\n","import React from 'react';\r\nimport { Stack, Box, FormStandardDouble, FormStandard, Text } from '..';\r\n\r\nexport default class InvolvedParty extends React.Component {\r\n  render() {\r\n    return (\r\n      <Stack gap={4}>\r\n        <Box\r\n          p={2}\r\n          m={0}\r\n          width={1}\r\n          bg=\"bg\"\r\n          border=\"1px solid\"\r\n          borderColor=\"oline\"\r\n          borderRadius=\"base\"\r\n        >\r\n          <Text variant=\"formtitle\">Standard Role Name</Text>\r\n            <Box padding={1} />\r\n          <FormStandard\r\n            name=\"Standard Industry Name\"\r\n            description=\"hello world is asking the following things\"\r\n          />\r\n          <Box padding={1} />\r\n          <FormStandardDouble\r\n            name=\"ISIC Industry Code\"\r\n            description=\"Detail for standard role name field.\"\r\n            nameTwo=\"ISIC Industry Name \"\r\n            descriptionTwo=\"Detail for industry code field.\"\r\n          />\r\n        </Box>\r\n        <Box padding={1} />\r\n      </Stack>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from '@reach/router';\r\nimport { Box, Flex, Text, Button, Icon } from '..';\r\n\r\nconst styleNavlink = {\r\n  fontSize: '1.05em',\r\n  textDecoration: 'none',\r\n  color: '#000',\r\n};\r\n\r\nconst littlePadding = {\r\n  padding: '2px',\r\n};\r\n\r\nconst helpAlign = {\r\n  marginTop: '6px',\r\n  marginBottom: '6px',\r\n};\r\n\r\nEditorSection.defaultProps = {\r\n  destination: '/',\r\n};\r\n\r\nfunction EditorSection({ title, destination }) {\r\n  return (\r\n    <Button variant=\"invisiblewide\">\r\n      <Link to={destination} style={styleNavlink}>\r\n        <div style={helpAlign}>\r\n          <div style={littlePadding} />\r\n          <Flex alignItems=\"center\">\r\n            <Icon name=\"edit\" />\r\n            <Box p={1}/>\r\n            <Text color=\"textb\">{title}</Text>\r\n          </Flex>\r\n          <div style={littlePadding} />\r\n        </div>\r\n      </Link>\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default EditorSection;\r\n","import React from 'react';\r\nimport { deepCopy } from 'xalgo-rule-processor';\r\nimport { isArray } from 'xalgo-rule-processor/dist/types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Text, Box, Flex, Button, Icon, Badge } from '..';\r\n\r\nconst ruleLeft = {\r\n  borderLeft: '1px solid #E7E7E7',\r\n  padding: '1em',\r\n  alignSelf: 'stretch',\r\n  borderBottom: '1px solid #E7E7E7',\r\n};\r\n\r\nconst halfWidth = {\r\n  minWidth: '500px',\r\n  maxWidth: '500px',\r\n  paddingTop: '1em',\r\n  paddingBottom: '1em',\r\n  borderBottom: '1px solid #E7E7E7',\r\n};\r\n\r\nconst center = {\r\n  alignSelf: 'center',\r\n  width: '126px',\r\n};\r\n\r\nconst standard = {\r\n  width: '0px',\r\n  height: '45px',\r\n};\r\n\r\n//row collapsed\r\n\r\nfunction rotateValue(tfb, inputCondition = true) {\r\n  let retval = '';\r\n  if (tfb.toLowerCase() === 't') {\r\n    retval = 'F';\r\n  } else if (tfb.toLowerCase() === 'f') {\r\n    retval = inputCondition ? 'B' : 'T';\r\n  } else {\r\n    retval = 'T';\r\n  }\r\n  return retval;\r\n}\r\n\r\nfunction InputOutputRow({\r\n  rowData,\r\n  rule,\r\n  updateRule,\r\n  editRow,\r\n  index,\r\n  inputCondition,\r\n  columnState,\r\n}) {\r\n  const { participle, attribute, subject, operation, value } = rowData.context;\r\n  const collapse = columnState;\r\n  const sentence = [\r\n    'The',\r\n    participle || 'participle',\r\n    attribute || 'attribute',\r\n    'of the',\r\n    subject || 'subject',\r\n    'is',\r\n    operation || '==',\r\n    value || 'value',\r\n  ].join(' ');\r\n\r\n  return (\r\n    <div>\r\n      <Flex alignItems=\"stretch\">\r\n        <div style={halfWidth}>\r\n          <Flex alignItems=\"flex-start\">\r\n            <Text color=\"textb\">{sentence}</Text>\r\n            <Box padding={2} />\r\n            <Button\r\n              variant=\"invisible\"\r\n              onClick={() => {\r\n                editRow(index);\r\n              }}\r\n            >\r\n              <Icon name=\"edit\" fill=\"textb\" size={14} />\r\n            </Button>\r\n            <Box padding={2} />\r\n          </Flex>\r\n        </div>\r\n\r\n        {rowData.cases.map((rowValue, i) => {\r\n          let variant = inputCondition ? 'both' : 'lightblue';\r\n          let text = inputCondition ? 'Both' : 'False';\r\n          if (rowValue.value.toLowerCase() === 't') {\r\n            variant = 'blue';\r\n            text = 'True';\r\n          } else if (rowValue.value.toLowerCase() === 'f') {\r\n            variant = 'lightblue';\r\n            text = 'False';\r\n          } else if (rowValue.value.toLowerCase() === 'b') {\r\n            variant = 'both';\r\n            text = 'Both';\r\n          }\r\n\r\n          return (\r\n            <div style={ruleLeft} key={i}>\r\n              <Flex>\r\n                <Button\r\n                  variant=\"invisible\"\r\n                  onClick={() => {\r\n                    // Updates the case.\r\n                    const ruleCopy = deepCopy(rule);\r\n                    if (inputCondition) {\r\n                      ruleCopy.input_conditions[index].cases[i].value = rotateValue(\r\n                        ruleCopy.input_conditions[index].cases[i].value,\r\n                        inputCondition\r\n                      );\r\n                    } else {\r\n                      // Output assertion\r\n                      ruleCopy.output_assertions[index].cases[i].value = rotateValue(\r\n                        ruleCopy.output_assertions[index].cases[i].value,\r\n                        inputCondition\r\n                      );\r\n                    }\r\n                    updateRule(ruleCopy);\r\n                  }}\r\n                >\r\n                  {inputCondition ? (\r\n                    <Badge variant={variant}>{rowValue.value || 'B'}</Badge>\r\n                  ) : (\r\n                    <Badge variant={variant}>{rowValue.value || 'F'}</Badge>\r\n                  )}\r\n                </Button>\r\n                <div style={collapse ? center : standard}>\r\n                  <Flex alignItems=\"center\">\r\n                    {collapse ? (\r\n                      <Flex>\r\n                        <Box p={2} />\r\n                        <Text>{text}</Text>\r\n                        {/*\r\n                        <Dropdown>\r\n                          <option>True</option>\r\n                          <option>False</option>\r\n                          <option>Both</option>\r\n                        </Dropdown>\r\n                        */}\r\n                      </Flex>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </Flex>\r\n                </div>\r\n              </Flex>\r\n            </div>\r\n          );\r\n        })}\r\n        <div style={ruleLeft}>\r\n          <Button\r\n            variant=\"invisible\"\r\n            onClick={() => {\r\n              const ruleCopy = deepCopy(rule);\r\n              if (\r\n                inputCondition &&\r\n                isArray(ruleCopy.input_conditions) &&\r\n                ruleCopy.input_conditions.length > 1\r\n              ) {\r\n                console.log('Removing input condition...');\r\n                ruleCopy.input_conditions.splice(index, 1);\r\n                updateRule(ruleCopy);\r\n              } else if (\r\n                isArray(ruleCopy.output_assertions) &&\r\n                ruleCopy.output_assertions.length > 1\r\n              ) {\r\n                console.log('Removing output assertion...');\r\n                ruleCopy.output_assertions.splice(index, 1);\r\n                updateRule(ruleCopy);\r\n              } else {\r\n                toast.error('A rule must have at least one input condition and output assertion.');\r\n              }\r\n            }}\r\n          >\r\n            <Icon name=\"ex\" fill=\"#ED9C91\" />\r\n          </Button>\r\n        </div>\r\n      </Flex>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputOutputRow;\r\n","import React from 'react';\r\nimport { Input, Stack, Box, Button, Text, Flex, Modal, Infobox } from '..';\r\nimport { IInfo } from '../icons';\r\n\r\nfunction FormSlider({ name, description, labela, labelb, labelc, value, onChange }) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <Stack gap={4}>\r\n      <Modal isOpen={isOpen}>\r\n        <Infobox content={description} onClick={() => setIsOpen(false)} />\r\n      </Modal>\r\n      <Box padding={1} />\r\n      <Flex alignItems=\"center\">\r\n        <Text>{name}</Text>\r\n        <Button variant=\"invisible\" onClick={() => setIsOpen(true)}>\r\n          <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n            <IInfo />\r\n          </Flex>\r\n        </Button>\r\n      </Flex>\r\n      <Box padding={1} />\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text color=\"textb\">{labela}</Text>\r\n        <Text color=\"textb\">{labelb}</Text>\r\n        <Text color=\"textb\">{labelc}</Text>\r\n      </Flex>\r\n      <Box padding={1} />\r\n      <Input\r\n        variant=\"secondary\"\r\n        type=\"range\"\r\n        min={(0).toString()}\r\n        max={(99).toString()}\r\n        value={value ? value.toString() : '0'}\r\n        onChange={(x) => {\r\n          console.log(`Value is now ${x.target.value}`);\r\n          onChange(x.target.value);\r\n        }}\r\n        step={1}\r\n      />\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default FormSlider;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { Box } from '..';\r\n\r\n// style\r\nconst textareaStyle = {\r\n  width: '100%',\r\n  resize: 'none',\r\n  outline: 'none',\r\n  border: 'none',\r\n  height: '80px',\r\n  fontFamily: 'Public Sans, sans-serif',\r\n  fontSize: '1rem',\r\n  color: '#696969',\r\n};\r\n\r\nfunction InputField({ children, value, placeholder, onChange }) {\r\n  const [color, setColor] = React.useState('oline');\r\n\r\n  function useOutsideAlerter(ref) {\r\n    useEffect(() => {\r\n      /**\r\n       * Alert if clicked on outside of element\r\n       */\r\n      function handleClickOutside(event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          setColor('oline');\r\n        }\r\n      }\r\n\r\n      // Bind the event listener\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => {\r\n        // Unbind the event listener on clean up\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }, [ref]);\r\n  }\r\n\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef);\r\n\r\n  return (\r\n    <div ref={wrapperRef}>\r\n      <Box p={2} m={0} width={1} bg=\"bg\" border=\"1px solid\" borderColor={color} borderRadius=\"base\">\r\n        <textarea\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n          style={textareaStyle}\r\n          onClick={() => setColor('primary')}\r\n        />\r\n        <div>{children}</div>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport { Box, Text, Flex, Button, Dropdown, Option, Input, Infobox, Modal, InputField } from '..';\r\nimport { IEdit, ITrash, IEx } from '../icons';\r\n\r\n// style\r\n\r\nconst fillBox = {\r\n  borderBottom: '1px solid #696969',\r\n  minWidth: 80,\r\n  marginLeft: 4,\r\n  marginRight: 4,\r\n  marginTop: 4,\r\n  height: 18,\r\n};\r\n\r\nconst smallFillBox = {\r\n  borderBottom: '1px solid #696969',\r\n  minWidth: 20,\r\n  marginLeft: 4,\r\n  marginRight: 4,\r\n  marginTop: 4,\r\n  height: 18,\r\n};\r\n\r\nconst heightcomp = {\r\n  height: '18px',\r\n  width: '12px',\r\n  background: 'red',\r\n}\r\n\r\n/**\r\n * Displays content parameters in the condensed sentence/view of the component.\r\n * @param {String} contentField the text content of a field.\r\n */\r\nfunction SentenceConstructorField({ contentField, small }) {\r\n  if (!contentField) {\r\n    return <div style={small ? smallFillBox : fillBox} />;\r\n  }\r\n  return (\r\n    <div style={small ? smallFillBox : fillBox}>\r\n      <Flex>\r\n        <div style={heightcomp}></div>\r\n        <Text>{contentField}</Text>\r\n      </Flex>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * Ensures the incoming content has all the correct parameters.\r\n * @deprecated will be replaced by a method from the xrp libary.\r\n * @param {JSON} content the json object containing the content for the object.\r\n * @param {Function} updateContent the function called to update the object.\r\n */\r\nfunction enforceContentSchema(content, updateContent) {\r\n  if (\r\n    !content.context.participle ||\r\n    !content.context.attribute ||\r\n    !content.subject ||\r\n    !content.operation ||\r\n    !content.value\r\n  )\r\n    console.error('SentenceConstructor is missing parameters.');\r\n\r\n  if (!content) {\r\n    updateContent({\r\n      participle: '',\r\n      attribute: '',\r\n      subject: '',\r\n      operation: '',\r\n      value: '',\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Requires content and updateContent props to function correctly.\r\n * @param {JSON} content contains a schema-constrained blob of content for use in the component fields.\r\n * @param {Function} updateContent method for passing an updated version of the internal content to the parent.\r\n */\r\nfunction SentenceConstructor({ content, updateContent }) {\r\n  const [isOpen, setIsOpen] = React.useState(true);\r\n\r\n  enforceContentSchema(content, updateContent);\r\n\r\n  return (\r\n    <Box>\r\n      <Box>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Flex>\r\n            <Text color=\"primary\">A</Text>\r\n            <Box padding={1} />\r\n            <Text>The</Text>\r\n            <SentenceConstructorField contentField={content.context.particple} />\r\n            <SentenceConstructorField contentField={content.context.attribute} />\r\n            <Text>of the</Text>\r\n            <SentenceConstructorField contentField={content.context.subject} />\r\n            <Text>is</Text>\r\n            <SentenceConstructorField contentField={content.context.operation} small />\r\n            <SentenceConstructorField contentField={content.context.value} />\r\n          </Flex>\r\n          <Flex>\r\n            <Modal isOpen={isOpen}>\r\n              <Button variant=\"invisible\" onClick={() => setIsOpen(false)}>\r\n                <IEx />\r\n              </Button>\r\n            </Modal>\r\n            <Modal isOpen={!isOpen}>\r\n              <Button variant=\"invisible\" onClick={() => setIsOpen(true)}>\r\n                <IEdit />\r\n              </Button>\r\n            </Modal>\r\n            <Box p={1} />\r\n            <Button variant=\"invisible\">\r\n              <ITrash />\r\n            </Button>\r\n          </Flex>\r\n        </Flex>\r\n        <Modal isOpen={isOpen}>\r\n          <Box padding={1} />\r\n          <Infobox content=\"lorem ipsum\" />\r\n          <Box padding={1} />\r\n          <Flex alignItems=\"center\">\r\n            <Text>The</Text>\r\n            <Box padding={1} />\r\n            <Box>\r\n              <Input value={content.a} onChange={updateContent} />\r\n            </Box>\r\n            <Box padding={1} />\r\n            <Box>\r\n              <Input value={content.b} onChange={updateContent} />\r\n            </Box>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <Flex alignItems=\"center\">\r\n            <Text>Of the</Text>\r\n            <Box padding={1} />\r\n            <Box>\r\n              <Input value={content.c} onChange={updateContent} />\r\n            </Box>\r\n            <Box padding={1} />\r\n            <Box>\r\n              <Dropdown>\r\n                <Option value=\"==\">==</Option>\r\n                <Option value=\"!=\">!=</Option>\r\n                <Option value=\">\">&gt;</Option>\r\n                <Option value=\"<\">&lt;</Option>\r\n                <Option value=\">=\">&gt;=</Option>\r\n                <Option value=\"<=\">&lt;=</Option>\r\n              </Dropdown>\r\n            </Box>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <InputField\r\n            value={content.e}\r\n            onChange={updateContent}\r\n            message=\"Adjective, Arithmetic expression, or Boolean Number\"\r\n          />\r\n          {/*\r\n            <Rule />\r\n            <Flex alignItems=\"center\">\r\n              <Text color=\"primary\">Sum</Text>\r\n              <Box padding={1} />\r\n              <Text color=\"primary\">Filter</Text>\r\n              <Box padding={1} />\r\n              <Text color=\"primary\">Source</Text>\r\n            </Flex>\r\n            */}\r\n        </Modal>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SentenceConstructor;\r\n","import React, { useState } from 'react';\r\nimport { deepCopy } from 'xalgo-rule-processor';\r\nimport { Box, Text, Flex, Button, Dropdown, Option, Input, Modal, InputField } from '..';\r\n\r\nconst fillBox = {\r\n  borderBottom: '1px solid #696969',\r\n  minWidth: 80,\r\n  marginLeft: 4,\r\n  marginRight: 4,\r\n  height: 18,\r\n};\r\n\r\nconst smallFillBox = {\r\n  borderBottom: '1px solid #696969',\r\n  minWidth: 20,\r\n  marginLeft: 4,\r\n  marginRight: 4,\r\n  height: 18,\r\n};\r\n\r\nfunction SentenceConstructorField({ contentField, small }) {\r\n  if (!contentField) {\r\n    return <div style={small ? smallFillBox : fillBox} />;\r\n  }\r\n  return (\r\n    <div style={small ? smallFillBox : fillBox}>\r\n      <Text>{contentField}</Text>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function SentenceEditor(props) {\r\n  const { rule, index, active, modalEditingInput, updateRule } = props;\r\n\r\n  // participle,\r\n  const [participle, setParticiple] = useState('');\r\n  // attribute,\r\n  const [attribute, setAttribute] = useState('');\r\n  // subject,\r\n  const [subject, setSubject] = useState('');\r\n  // operation,\r\n  const [operation, setOperation] = useState('==');\r\n  // value,\r\n  const [value, setValue] = useState('');\r\n\r\n  const [modified, setModified] = useState(false);\r\n\r\n  const sentence = modalEditingInput ? rule.input_conditions[index] : rule.output_assertions[index];\r\n\r\n  if (active && !modified) {\r\n    console.log(`Editing ${modalEditingInput ? 'input' : 'output'} sentence ${index}`);\r\n    if (participle !== sentence.context.participle) setParticiple(sentence.context.participle);\r\n    if (attribute !== sentence.context.attribute) setAttribute(sentence.context.attribute);\r\n    if (subject !== sentence.context.subject) setSubject(sentence.context.subject);\r\n    if (operation !== sentence.context.operation) setOperation(sentence.context.operation);\r\n    if (value !== sentence.context.value) setValue(sentence.context.value);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      {modalEditingInput ? (\r\n        <Text variant=\"formtitle\">Modify Input Condition</Text>\r\n      ) : (\r\n        <Text variant=\"formtitle\">Modify Output Assertion</Text>\r\n      )}\r\n      <Box padding={2} />\r\n      <Box>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Flex flexWrap=\"wrap\">\r\n            <Text>The</Text>\r\n            <SentenceConstructorField contentField={participle} />\r\n            <SentenceConstructorField contentField={attribute} />\r\n            <Text>of the</Text>\r\n            <SentenceConstructorField contentField={subject} />\r\n            <Text>is</Text>\r\n            <SentenceConstructorField contentField={operation} small />\r\n            <SentenceConstructorField contentField={value} />\r\n          </Flex>\r\n        </Flex>\r\n        <Modal isOpen>\r\n          <Box padding={1} />\r\n          <Flex alignItems=\"center\">\r\n            <Text>The</Text>\r\n            <Box padding={1} />\r\n            <Box>\r\n              <Input\r\n                value={participle}\r\n                placeholder=\"participle\"\r\n                onChange={(e) => {\r\n                  setParticiple(e.target.value);\r\n                  setModified(true);\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box padding={1} />\r\n            <Box>\r\n              <Input\r\n                value={attribute}\r\n                placeholder=\"attribute\"\r\n                onChange={(e) => {\r\n                  setAttribute(e.target.value);\r\n                  setModified(true);\r\n                }}\r\n              />\r\n            </Box>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <Flex alignItems=\"center\">\r\n            <Text>Of the</Text>\r\n            <Box padding={1} />\r\n            <Box>\r\n              <Input\r\n                value={subject}\r\n                placeholder=\"subject\"\r\n                onChange={(e) => {\r\n                  setSubject(e.target.value);\r\n                  setModified(true);\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box padding={1} />\r\n            <Box>\r\n              <Dropdown\r\n                value={operation}\r\n                onChange={(e) => {\r\n                  setOperation(e.target.value);\r\n                  setModified(true);\r\n                }}\r\n              >\r\n                <Option value=\"==\">==</Option>\r\n                <Option value=\"!=\">!=</Option>\r\n                <Option value=\">\">&gt;</Option>\r\n                <Option value=\"<\">&lt;</Option>\r\n                <Option value=\">=\">&gt;=</Option>\r\n                <Option value=\"<=\">&lt;=</Option>\r\n              </Dropdown>\r\n            </Box>\r\n          </Flex>\r\n          <Box padding={1} />\r\n          <InputField\r\n            value={value}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n              setModified(true);\r\n            }}\r\n            message=\"Adjective, Arithmetic expression, or Boolean Number\"\r\n          />\r\n          {/*\r\n            <Rule />\r\n            <Flex alignItems=\"center\">\r\n              <Text color=\"primary\">Sum</Text>\r\n              <Box padding={1} />\r\n              <Text color=\"primary\">Filter</Text>\r\n              <Box padding={1} />\r\n              <Text color=\"primary\">Source</Text>\r\n            </Flex>\r\n            */}\r\n        </Modal>\r\n      </Box>\r\n\r\n      <Box padding={2} />\r\n      <Button\r\n        variant=\"blue\"\r\n        onClick={() => {\r\n          const ruleCopy = deepCopy(rule);\r\n\r\n          const sentenceCopy = modalEditingInput\r\n            ? ruleCopy.input_conditions[index]\r\n            : ruleCopy.output_assertions[index];\r\n          // participle,\r\n          sentenceCopy.context.participle = participle;\r\n          // attribute,\r\n          sentenceCopy.context.attribute = attribute;\r\n          // subject,\r\n          sentenceCopy.context.subject = subject;\r\n          // operation,\r\n          sentenceCopy.context.operation = operation;\r\n          // value,\r\n          sentenceCopy.context.value = value;\r\n\r\n          updateRule(ruleCopy);\r\n        }}\r\n      >\r\n        Save and Close\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Text, Flex, Icon, Box } from '..';\r\n\r\nfunction ErrorMessage({ message }) {\r\n  return (\r\n    <div>\r\n      <Box padding={1} />\r\n      <Flex alignItems=\"center\">\r\n        <Icon name=\"exclaim\" fill=\"#ED9C91\" />\r\n        <Text variant=\"error\">{message}</Text>\r\n      </Flex>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nimport { Text, Flex, Icon, Box } from '..';\r\n\r\nfunction IdDisplay({ message }) {\r\n  return (\r\n    <div>\r\n      <Flex alignItems=\"center\">\r\n        <Text color='textb'>ID</Text>\r\n        <Box padding={1} />\r\n        <Text color='textb'>{message}</Text>\r\n        <Icon name=\"copy\" fill=\"#696969\" />\r\n      </Flex>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IdDisplay;\r\n","import React from 'react';\r\nimport {  Box, Grid, Text } from '..';\r\n\r\nfunction InfoRow({ color, label, content}) {\r\n\r\n    return (\r\n    <Box p={2} backgroundColor={color} borderRadius=\"base\">\r\n              <Grid gridTemplateColumns=\"160px auto\" gridGap=\"1em\">\r\n                <div>\r\n                  <Text color=\"textb\" textAlign=\"right\">\r\n                    {label}\r\n                  </Text>\r\n                </div>\r\n                <div>\r\n                  <Text>\r\n                    {content}\r\n                  </Text>\r\n                </div>\r\n              </Grid>\r\n            </Box>\r\n    );\r\n}\r\n\r\nexport default InfoRow;\r\n","import styled from 'styled-components';\r\nimport { Box } from '..';\r\n\r\nexport const Flex = styled(Box)({\r\n  display: 'flex',\r\n});\r\n\r\nFlex.propTypes = Box.propTypes;\r\n\r\nexport default Flex;\r\n","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { system } from 'styled-system';\r\nimport { Box } from '..';\r\n\r\n// We need this export here to fix something\r\nexport const Stack = styled(Box)(\r\n  /*\r\n   * We are using a \"lobotomized owl\" CSS selector to add margin between children\r\n   * More information: https://every-layout.dev/layouts/stack/#the-solution\r\n   *  */\r\n  system({\r\n    gap: {\r\n      property: '& > * + *', // Here, instead of the CSS property we generate the selector\r\n      scale: 'space',\r\n      // And here instead of the value for the property we return an object\r\n      // We need to add important since we set margin: 0 in our components\r\n      // and we need to override it\r\n      transform: (value, scale) => ({ marginTop: `${scale[value]}!important` }),\r\n    },\r\n  })\r\n);\r\n\r\nStack.propTypes = {\r\n  ...Box.propTypes,\r\n  /** Spacing between items */\r\n  gap: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\r\n};\r\n\r\n/** @component */\r\nexport default Stack;\r\n","import styled from 'styled-components';\r\nimport { Box } from '..';\r\n\r\nexport const Grid = styled(Box)({\r\n  display: 'grid',\r\n});\r\n\r\nGrid.propTypes = Box.propTypes;\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\nimport { Text, Flex, Icon, Box, Button } from '..';\r\nimport { Link } from '@reach/router';\r\n\r\nexport default function Card({ name, uuid, editLink, downloadRule, deleteRule, csrfToken }) {\r\n  return (\r\n    <Box p={2} bg=\"bg\" border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" marginBottom={3}>\r\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\r\n        <Flex>\r\n          <Text>{name || 'Rule Name'}</Text>\r\n          <Box p={2} />\r\n          <Text color=\"textb\">\r\n            <code>\r\n              <small>{uuid || '0000-0000-0000-0000'}</small>\r\n            </code>\r\n          </Text>\r\n        </Flex>\r\n        <Button\r\n          variant=\"invisible\"\r\n          onClick={() => {\r\n            deleteRule(uuid, csrfToken);\r\n          }}\r\n        >\r\n          <Flex alignItems=\"center\">\r\n            <Icon name=\"trash\" fill=\"#ED9C91\" size={14} />\r\n            <Text color=\"error\">Delete</Text>\r\n          </Flex>\r\n        </Button>\r\n      </Flex>\r\n      <Box padding={1} />\r\n      <Flex>\r\n        <Button\r\n          variant=\"invisible\"\r\n          onClick={() => {\r\n            downloadRule(uuid, csrfToken);\r\n          }}\r\n        >\r\n          <Flex alignItems=\"center\">\r\n            <Icon name=\"download\" size={14} />\r\n            <Text color=\"primary\">Download</Text>\r\n          </Flex>\r\n        </Button>\r\n        <Box p={2} />\r\n        <Button variant=\"invisible\">\r\n          <Link to={editLink || ''}>\r\n            <Flex alignItems=\"center\">\r\n              <Icon name=\"edit\" size={14} />\r\n              <Text color=\"primary\">Edit</Text>\r\n            </Flex>\r\n          </Link>\r\n        </Button>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { css } from '@styled-system/css';\r\n\r\nconst Rule = styled.hr(\r\n    css({\r\n        borderTop: '1px solid #E7E7E7',\r\n        borderBottom: '0px',\r\n        padding: '0px',\r\n        margin:'0px',\r\n    })\r\n);\r\n\r\n/** @component */\r\nexport default Rule;\r\n","import React from 'react';\r\n\r\nexport default class ScrollUp extends React.Component {\r\n  componentDidMount() {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return children || null;\r\n  }\r\n}\r\n","// libraries\r\nimport React from 'react';\r\nimport Box from '../components/layout/Box';\r\nimport Grid from '../components/layout/Grid';\r\nimport Card from '../components/patterns/Card';\r\nimport Rule from '../components/primitives/Rule';\r\nimport Flex from '../components/layout/Flex';\r\nimport Icon from '../components/icons/Icon';\r\nimport Button from '../components/primitives/Button';\r\nimport Modal from '../components/primitives/Modal';\r\n\r\n// rm-components\r\nimport Text from '../components/primitives/Text';\r\nimport ScrollUp from './components/ScrollUp';\r\n\r\nconst fixpos = {\r\n  position: 'sticky',\r\n  top: '98px',\r\n  width: '100%',\r\n};\r\n\r\nconst modalhold = {\r\n  position: 'sticky',\r\n  height: '90vh',\r\n  background: 'rgba(255, 255, 255, .8)',\r\n  marginBottom: '-90vh',\r\n};\r\n\r\n// Primary Component\r\nexport default class Browse extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pageDescription: 'Browse Rules',\r\n      isToggleOn: false,\r\n    };\r\n    this.handleModal = this.handleModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  handleModal() {\r\n    this.setState((state) => ({\r\n      isToggleOn: !false,\r\n    }));\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState((state) => ({\r\n      isToggleOn: false,\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <ScrollUp>\r\n        <div style={fixpos}>\r\n          <Box p={4} bg=\"#fff\">\r\n            <Flex>\r\n              <Button variant=\"invisible\" onClick={this.handleModal}>Upload Table</Button>\r\n            </Flex>\r\n          </Box>\r\n          <Rule />\r\n          <Modal isOpen={!!this.state.isToggleOn}>\r\n            <div style={modalhold}>\r\n              <Flex alignItems=\"center\" justifyContent=\"center\">\r\n                <Box height=\"70vh\" />\r\n                <Box\r\n                  p={2}\r\n                  m={0}\r\n                  width=\"600px\"\r\n                  bg=\"bg\"\r\n                  border=\"1px solid\"\r\n                  borderColor=\"oline\"\r\n                  borderRadius=\"base\"\r\n                >\r\n                  <Flex justifyContent=\"space-between\">\r\n                    <Text variant=\"sectiontitle\">Upload Table</Text>\r\n                    <Button variant=\"invisible\" onClick={this.closeModal}>\r\n                      <Icon name=\"ex\"/>\r\n                    </Button>\r\n                  </Flex>\r\n                  <Box p={1} />\r\n                  <Flex>\r\n                    <Box width=\"50%\" height=\"20px\" marginRight={1}>\r\n                      <Text color=\"textb\">\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris non dui\r\n                        sollicitudin, semper tortor in, vestibulum felis.\r\n                      </Text>\r\n                      <Box p={1} />\r\n                      <Button>Or Create Table</Button>\r\n                    </Box>\r\n                    <Box\r\n                      width=\"50%\"\r\n                      marginLeft={1}\r\n                      border=\"1px solid\"\r\n                      borderColor=\"oline\"\r\n                      borderRadius=\"base\"\r\n                    >\r\n                      <Flex alignItems=\"center\" justifyContent=\"center\">\r\n                        <Box height=\"250px\" />\r\n                        <Box>\r\n                          <Text>Drag Table Here</Text>\r\n                        </Box>\r\n                      </Flex>\r\n                    </Box>\r\n                  </Flex>\r\n                </Box>\r\n              </Flex>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <Grid height=\"80vh\" gridTemplateColumns=\"400px auto\">\r\n          <Box borderRight=\"1px solid #efefef\">\r\n            <Box p={4}>\r\n              <Card />\r\n              <Card />\r\n              <Card />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </ScrollUp>\r\n    );\r\n  }\r\n}\r\n","// libraries\r\nimport React from 'react';\r\nimport Box from '../../components/layout/Box';\r\nimport Grid from '../../components/layout/Grid';\r\n//import { Link } from '@reach/router';\r\n\r\n\r\n// rm-components\r\nimport Text from '../../components/primitives/Text';\r\nimport Button from '../../components/primitives/Button';\r\n\r\n// Primary Component\r\nfunction Intro({name}) {\r\n\r\n    return (\r\n          <Box backgroundColor=\"#F6F5F2\" p={4}>\r\n            <Grid gridTemplateRows=\"auto auto auto\" height=\"85vh\">\r\n                <Box>\r\n                    <Text variant=\"formtitle\">Welcome, {name}</Text>\r\n                    <Box p={2} />\r\n                    <Text color=\"textb\">\r\n                        Use the XRM interface to construct rules using the Oughtomation method. Click on the Editor tab to create a rule, or browse rules you have already written using the dashboard tab.\r\n                    </Text>\r\n                </Box>\r\n                <Box />\r\n                <Box alignSelf=\"end\">\r\n                    <Text color=\"publish\">\r\n                        This prototype is under construction. Please post any bugs or\r\n                        issues on the repository for this system.\r\n                    </Text>\r\n                    <Box p={2} />\r\n                    <Text color=\"error\">\r\n\r\n                        <a\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://github.com/RyanFleck/Xalgo-System-Prototype/issues\"\r\n                        >\r\n                        <Button variant=\"error\">\r\n                            Provide feedback, or report a bug\r\n                        </Button>\r\n                        </a>\r\n                    </Text>\r\n                </Box>\r\n            </Grid>\r\n          </Box>\r\n    );\r\n}\r\n\r\nexport default Intro;\r\n","// libraries\r\nimport React from 'react';\r\nimport Box from '../components/layout/Box';\r\nimport Grid from '../components/layout/Grid';\r\nimport Card from '../components/patterns/Card';\r\nimport Flex from '../components/layout/Flex';\r\n\r\nimport Intro from './components/Intro';\r\n\r\n// rm-components\r\nimport Text from '../components/primitives/Text';\r\nimport ScrollUp from './components/ScrollUp';\r\n//import { Link } from '@reach/router';\r\nimport Axios from 'axios';\r\nimport BarLoader from 'react-spinners/BarLoader';\r\nimport FileSaver from 'file-saver';\r\nimport slugify from 'slugify';\r\n\r\nconst hold = {\r\n  zIndex: '5',\r\n};\r\n\r\nexport function downloadRule(uuid, csrfToken) {\r\n  let rule_name = 'rule';\r\n  console.log(`Downloading ${uuid}`);\r\n  Axios.get(`/rules/json/${uuid}/`, {\r\n    headers: {\r\n      'X-CSRFToken': csrfToken,\r\n    },\r\n  }).then((res) => {\r\n    if (res && res.status && res.status === 200) {\r\n      const data = res.data;\r\n      console.log(data);\r\n      rule_name = data.metadata.rule.title;\r\n      const blob = new Blob([JSON.stringify(data, null, 2)], {\r\n        type: 'text/plain;charset=utf-8',\r\n      });\r\n      FileSaver.saveAs(blob, `${slugify(rule_name.toLowerCase())}.xa.json`);\r\n    }\r\n  });\r\n}\r\n\r\nexport function deleteRule(uuid, csrfToken) {\r\n  console.log(`Deleting ${uuid} token ${this.props.token}`);\r\n  if (window.confirm(`Delete rule ${uuid}?`)) {\r\n    Axios.delete(`/rules/rule/${uuid}/`, {\r\n      headers: {\r\n        'X-CSRFToken': csrfToken,\r\n      },\r\n    }).then((res) => {\r\n      if (res && res.status && res.status === 204) {\r\n        console.log('Rule Deleted.');\r\n        this.getRules();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Primary Component\r\nexport default class Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pageDescription: 'Rule Maker Dashboard',\r\n      rules: [],\r\n      ready: false,\r\n    };\r\n\r\n    this.getRules = this.getRules.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRules();\r\n  }\r\n\r\n  getRules() {\r\n    Axios.get('/rules/rule')\r\n      .then((res) => {\r\n        const rules = res.data.sort((a, b) => {\r\n          let date_a = Date.parse(a.modified);\r\n          let date_b = Date.parse(b.modified);\r\n          const older = date_b - date_a;\r\n          console.log(`Comparing ${date_a} to ${date_b}, is older: ${older}`);\r\n          return older;\r\n        });\r\n        console.log('Sorted rules:');\r\n        console.log(rules);\r\n\r\n        this.setState({ rules: rules, ready: true });\r\n      })\r\n      .catch((err) => {\r\n        const status = err.response.status;\r\n        if (status === 403) {\r\n          console.log(`Failed to authenticate user: ${status}`);\r\n        } else {\r\n          console.log(`Error while getting user info: ${status}`);\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <ScrollUp>\r\n        <div style={hold}>\r\n          <Grid gridTemplateRows=\"auto\" height=\"100vh\">\r\n            <Box>\r\n              <Grid gridTemplateColumns=\"500px auto\" height=\"100%\">\r\n                <Intro name={user.email} />\r\n                <Box p={4} height=\"auto\">\r\n                  <Text variant=\"formtitle\">My Rules</Text>\r\n                  <Box p={2} />\r\n                  {this.state.ready ? (\r\n                    <div>\r\n                      {this.state.rules.map((e, i) => {\r\n                        return (\r\n                          <Card\r\n                            key={i}\r\n                            uuid={e.id}\r\n                            name={e.name}\r\n                            editLink={`/apps/rm/editor/${e.id}`}\r\n                            deleteRule={deleteRule}\r\n                            downloadRule={downloadRule}\r\n                            csrfToken={this.props.token}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <Flex alignitems=\"center\">\r\n                        <BarLoader width={320} />\r\n                      </Flex>\r\n                    </div>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n        </div>\r\n      </ScrollUp>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\n// rm-components\r\nimport Box from '../../components/layout/Box';\r\nimport Text from '../../components/primitives/Text';\r\nimport Button from '../../components/primitives/Button';\r\nimport Flex from '../../components/layout/Flex';\r\nimport Modal from '../../components/primitives/Modal';\r\nimport Icon from '../../components/icons/Icon';\r\n\r\nconst littlePadding = {\r\n  padding: '2px',\r\n};\r\n\r\nconst helpAlign = {\r\n  marginTop: '6px',\r\n  marginBottom: '6px',\r\n};\r\n\r\nconst holdTop = {\r\n  position: 'fixed',\r\n  top: '75px',\r\n  right: '0px',\r\n  height: '100vh',\r\n  zIndex: '5',\r\n};\r\n\r\nconst holdModal = {\r\n  position: 'fixed',\r\n  top: '120px',\r\n  right: '72px',\r\n  background: '#1E2033',\r\n  borderRadius: '8px',\r\n  border: '1px solid #E7E7E7',\r\n  boxShadow: '4px 4px 4px rgba(0, 0, 0, 0.25)',\r\n};\r\n\r\nconst horizontalRule = {\r\n  position: 'sticky',\r\n  borderLeft: '1px solid #E7E7E7',\r\n  zIndex: '-1',\r\n  top: '90px',\r\n};\r\n\r\nconst linkhold = {\r\n  width: '220px',\r\n  display: 'block',\r\n  overflowX: 'scroll',\r\n  overflowY: 'none',\r\n};\r\n\r\nconst long = {\r\n  width: '650px',\r\n};\r\n\r\nconst line = {\r\n  height: '18px',\r\n  borderLeft: '1px solid #E7E7E7',\r\n  marginLeft: '1em',\r\n  marginRight: '1em',\r\n};\r\n\r\nconst horizontalLine = {\r\n  width: '100%',\r\n  borderBottom: '1px solid #494D59',\r\n};\r\n\r\n// Primary Component\r\nfunction EditorLeft({\r\n  description,\r\n  deleteFunction,\r\n  resetFunction,\r\n  saveFunction,\r\n  rule,\r\n  downloadRule,\r\n  csrfToken,\r\n}) {\r\n  // To set one of these panels as open by default, start with the state true.\r\n  const [isOpen, setIsOpen] = React.useState(false); // Settings\r\n  const [isOpenb, setIsOpenb] = React.useState(false); // Guide\r\n  const [isOpenc, setIsOpenc] = React.useState(false); // Description\r\n\r\n  return (\r\n    <div style={holdTop}>\r\n      <div>\r\n        <div>\r\n          <Box>\r\n            <Box paddingRight={4} paddingLeft={4} paddingTop={4}>\r\n              <Button variant=\"invisible\" onClick={saveFunction}>\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"14.5\"\r\n                  height=\"15\"\r\n                  viewBox=\"0 0 14.5 15\"\r\n                >\r\n                  <title>save</title>\r\n                  <path\r\n                    d=\"M1.5,1.5A.5.5,0,0,1,2,1H4.78V4.78a1,1,0,0,0,1,1h3.5a1,1,0,0,0,1-1V1h.77a.5.5,0,0,1,.38.17l2.44,2.72a.51.51,0,0,1,.13.34V13a.5.5,0,0,1-.5.5H12.25V9.75a1,1,0,0,0-1-1h-7a1,1,0,0,0-1,1V13.5H2a.5.5,0,0,1-.5-.5ZM7.38,4.78h1.9V1H7.38ZM6.38,1h-.6V4.78h.6Zm2.9-1H2A1.5,1.5,0,0,0,.5,1.5V13A1.5,1.5,0,0,0,2,14.5H3.38a1,1,0,0,0,.87.5h7a1,1,0,0,0,.87-.5H13.5A1.5,1.5,0,0,0,15,13V4.23a1.56,1.56,0,0,0-.38-1L12.17.5A1.49,1.49,0,0,0,11.05,0Zm-5,9.75h7V14h-7Z\"\r\n                    transform=\"translate(-0.5)\"\r\n                    fillRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </Button>\r\n            </Box>\r\n            <Box paddingRight={4} paddingLeft={4} paddingTop={4}>\r\n              <Button variant=\"invisible\" onClick={() => setIsOpen(!isOpen)}>\r\n                <Box width=\"18px\" height=\"16px\">\r\n                  <svg viewBox=\"0 0 16 14\">\r\n                    <path d=\"M7.69,10A2.75,2.75,0,1,1,10.44,7.2,2.75,2.75,0,0,1,7.69,10Zm0-4.5A1.75,1.75,0,1,0,9.44,7.2,1.75,1.75,0,0,0,7.69,5.45Z\" />\r\n                    <path d=\"M14.84,9.22a3.59,3.59,0,0,1,0-4L15,5l-.51-1.47,0,0h0a3.58,3.58,0,0,1-3-2.64L11.36.65,9.93.05,9.81.12h0a3.59,3.59,0,0,1-4,0L5.61,0,4.14.5h0l-.2.07a3.56,3.56,0,0,1-2.63,3l-.25.06L.46,5.06l.08.12h0a3.56,3.56,0,0,1,0,4l-.14.21.5,1.47h0l0,0a3.56,3.56,0,0,1,3,2.64l.06.24,1.44.6h0l.11-.07a3.58,3.58,0,0,1,4,0l.21.15,1.47-.51h0l.2-.07a3.58,3.58,0,0,1,2.64-3l.24-.06.6-1.43-.07-.12Zm-4.27,3.86-.66.22a4.6,4.6,0,0,0-4.54-.06L4.85,13a4.58,4.58,0,0,0-3.17-3l-.17-.48A4.58,4.58,0,0,0,1.58,5l.21-.52a4.59,4.59,0,0,0,3-3.14l.66-.23a4.93,4.93,0,0,0,2.41.65A4.28,4.28,0,0,0,10,1.17l.51.21a4.62,4.62,0,0,0,3.18,3l.16.48a4.58,4.58,0,0,0-.06,4.53l-.22.52A4.6,4.6,0,0,0,10.57,13.08Z\" />\r\n                  </svg>\r\n                </Box>\r\n              </Button>\r\n            </Box>\r\n            <Box paddingRight={4} paddingLeft={4} paddingTop={4}>\r\n              <Button variant=\"invisible\" onClick={() => setIsOpenb(!isOpenb)}>\r\n                <Box width=\"18px\" height=\"16px\">\r\n                  <svg viewBox=\"0 0 9.86 9.86\">\r\n                    <title>i-info-small</title>\r\n                    <path\r\n                      d=\"M9,13.93H9A4.93,4.93,0,0,1,9,4.07H9a4.93,4.93,0,0,1,0,9.86ZM9,4.57A4.42,4.42,0,0,0,4.56,9,4.44,4.44,0,0,0,9,13.43H9A4.43,4.43,0,0,0,9,4.57H9Z\"\r\n                      transform=\"translate(-4.06 -4.07)\"\r\n                    />\r\n                    <path\r\n                      d=\"M9.84,11.33l-.06.25-.58.2a2.25,2.25,0,0,1-.36.06.67.67,0,0,1-.47-.16.57.57,0,0,1-.16-.4v-.19a.5.5,0,0,1,0-.25l.41-1.66.06-.29a1.22,1.22,0,0,0,0-.27c0-.14,0-.24-.07-.28a.34.34,0,0,0-.29-.08H8.13l-.21.05.14-.22a2.83,2.83,0,0,1,.55-.21A1.21,1.21,0,0,1,9,7.82.56.56,0,0,1,9.45,8a.55.55,0,0,1,.15.41V8.8l-.54,1.66a.46.46,0,0,1-.07.3A1,1,0,0,0,9,11a.41.41,0,0,0,.1.32.6.6,0,0,0,.32.07h.21A.79.79,0,0,0,9.84,11.33Zm.27-5a.52.52,0,0,1-.14.39.48.48,0,0,1-.36.16.46.46,0,0,1-.34-.16.52.52,0,0,1,0-.73.39.39,0,0,1,.34-.16A.45.45,0,0,1,10,6a.5.5,0,0,1,.14.31Z\"\r\n                      transform=\"translate(-4.06 -4.07)\"\r\n                    />\r\n                  </svg>\r\n                </Box>\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div style={horizontalRule} />\r\n      </div>\r\n      <div>\r\n        <div style={holdModal}>\r\n          <Modal isOpen={isOpen}>\r\n            <Box width=\"450px\">\r\n              <Box p={3}>\r\n                <Flex justifyContent=\"space-between\">\r\n                  <Text color=\"#fff\" variant=\"formtitle\">\r\n                    Settings\r\n                  </Text>\r\n                  <Button variant=\"invisible\" onClick={() => setIsOpen(!isOpen)}>\r\n                    <Icon name=\"ex\" fill=\"#fff\" />\r\n                  </Button>\r\n                </Flex>\r\n                <Box p={1} />\r\n                <Button\r\n                  variant=\"invisiblewide\"\r\n                  onClick={() => {\r\n                    downloadRule(rule.uuid, csrfToken);\r\n                  }}\r\n                >\r\n                  <div style={helpAlign}>\r\n                    <div style={littlePadding} />\r\n                    <Flex justifyContent=\"space-between\">\r\n                      <Text color=\"oline\">Download Rule as JSON</Text>\r\n                      <Icon name=\"download\" fill=\"#E7E7E7\" />\r\n                    </Flex>\r\n                    <div style={littlePadding} />\r\n                  </div>\r\n                </Button>\r\n                <Box p={2} />\r\n                <div style={horizontalLine} />\r\n                <Box p={2} />\r\n                <Flex alignItems=\"center\">\r\n                  <Text color=\"oline\">Share Rule</Text>\r\n                  <Box p={2} />\r\n                  <Box bg=\"#fff\" border=\"1px sollid\" borderColor=\"oline\" borderRadius=\"base\" p={2}>\r\n                    <Flex>\r\n                      <div style={linkhold}>\r\n                        <div className=\"noscrollbar\" style={long}>\r\n                          <Text>{`https://xalgo-system.herokuapp.com/rule/${rule.path}`}</Text>\r\n                        </div>\r\n                      </div>\r\n                      <div style={line}></div>\r\n                      <Button\r\n                        variant=\"invisible\"\r\n                        onClick={() => {\r\n                          navigator.clipboard.writeText(\r\n                            `https://xalgo-system.herokuapp.com/rule/${rule.path}`\r\n                          );\r\n                          toast('Coppied to your clipboard! 📎');\r\n                        }}\r\n                      >\r\n                        <Icon name=\"copy\" fill=\"#494D59\" />\r\n                      </Button>\r\n                    </Flex>\r\n                  </Box>\r\n                </Flex>\r\n                <Box p={2} />\r\n                <div style={horizontalLine} />\r\n                <Box p={2} />\r\n                <Button variant=\"invisiblewide\" onClick={resetFunction}>\r\n                  <div style={helpAlign}>\r\n                    <div style={littlePadding} />\r\n                    <Flex justifyContent=\"space-between\">\r\n                      <Flex alignItems=\"center\">\r\n                        <Text color=\"error\">Reset Rule</Text>\r\n                      </Flex>\r\n                      <Box />\r\n                      <Flex alignItems=\"center\" />\r\n                    </Flex>\r\n                    <div style={littlePadding} />\r\n                  </div>\r\n                </Button>\r\n                <Button variant=\"invisiblewide\" onClick={deleteFunction}>\r\n                  <div style={helpAlign}>\r\n                    <div style={littlePadding} />\r\n                    <Flex justifyContent=\"space-between\">\r\n                      <Text color=\"error\">Delete Rule</Text>\r\n                      <Icon name=\"trash\" fill=\"#ED9C91\" />\r\n                    </Flex>\r\n                    <div style={littlePadding} />\r\n                  </div>\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n      <div />\r\n      <div>\r\n        <div style={holdModal}>\r\n          <Modal isOpen={isOpenb}>\r\n            <Box width=\"450px\">\r\n              <Box p={3}>\r\n                <Flex justifyContent=\"space-between\">\r\n                  <Text color=\"#fff\" variant=\"formtitle\">\r\n                    Guide\r\n                  </Text>\r\n                  <Button variant=\"invisible\" onClick={() => setIsOpenb(!isOpenb)}>\r\n                    <Icon name=\"ex\" fill=\"#fff\" />\r\n                  </Button>\r\n                </Flex>\r\n                <Box p={2} />\r\n                <Text color=\"oline\">\r\n                  Any rule can be expressed in terms of its input conditions, and its output\r\n                  assertions. Please state each condition of this rule, and each assertion of this\r\n                  rule, as a simple factual sentence. Each sentence should be phrased in a manner\r\n                  that, in some particular circumstance, the sentence would logically be ‘true’ or\r\n                  ‘false’.\r\n                </Text>\r\n              </Box>\r\n            </Box>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div style={holdTop}>\r\n          <Modal isOpen={isOpenc}>\r\n            <Box width=\"450px\">\r\n              <Box p={4}>\r\n                <Flex justifyContent=\"space-between\">\r\n                  <Text variant=\"formtitle\">Description</Text>\r\n                  <Button variant=\"invisible\" onClick={() => setIsOpenc(!isOpenc)}>\r\n                    <Icon name=\"close\" />\r\n                  </Button>\r\n                </Flex>\r\n                <Box p={2} />\r\n                <Text>{description}</Text>\r\n              </Box>\r\n            </Box>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditorLeft;\r\n","import React from 'react';\r\nimport { Badge, Icon, Modal, Text } from '..';\r\n\r\nconst heightMatch ={\r\n    height: '22px',\r\n}\r\n\r\nfunction ColumnLabel({ rowLabel }) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <div onMouseEnter={() => setIsOpen(true)} onMouseLeave={() => setIsOpen(false)}>\r\n      <Modal isOpen={!isOpen}>\r\n        <Badge variant=\"blank\"><div style={heightMatch}><Text variant=\"formtitle\">{rowLabel}</Text></div></Badge>\r\n      </Modal>\r\n      <Modal isOpen={isOpen}>\r\n      <Badge variant=\"blank\"><Icon name=\"trash\" size={18}/></Badge>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColumnLabel;\r\n","import React from 'react';\r\nimport { Flex } from '../../components';\r\n\r\nconst small = {\r\n  width: '34px',\r\n  height: '24px',\r\n};\r\n\r\nconst stretch = {\r\n  alignSelf: 'stretch',\r\n};\r\n\r\nconst column = {\r\n  width: '160px',\r\n  height: '24px',\r\n};\r\n\r\nexport default function BlankRows({ rule, ruleLeft, columnState }) {\r\n  const collapse = columnState;\r\n\r\n  return (\r\n    <div style={stretch}>\r\n      <Flex>\r\n        {rule.input_conditions[0].cases.map((rowValue, i) => (\r\n          <div style={ruleLeft} key={i}>\r\n            {collapse ? <div style={column} /> : <div style={small} />}\r\n          </div>\r\n        ))}\r\n        <div style={ruleLeft} />\r\n      </Flex>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Stack, Box, Button, Text, Flex, Modal, Infobox, IInfo, InputField } from '..';\r\n\r\nfunction FormTextArea({ name, description, value, onChange, onBlur, placeholder }) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <Stack gap={4}>\r\n      <Modal isOpen={isOpen}>\r\n        <Infobox content={description} onClick={() => setIsOpen(false)} />\r\n      </Modal>\r\n      <Box padding={1} />\r\n      <Flex alignItems=\"center\">\r\n        <Text>{name}</Text>\r\n        <Button variant=\"invisible\" onClick={() => setIsOpen(true)}>\r\n          <Flex alignItems=\"flex-bottom\" m=\"4px\">\r\n            <IInfo />\r\n          </Flex>\r\n        </Button>\r\n      </Flex>\r\n      <Box padding={1} />\r\n      <InputField value={value} onChange={onChange} onBlur={onBlur} placeholder={placeholder} />\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default FormTextArea;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { deepCopy, RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, Text, Button, FormStandard } from '../../components';\r\nimport FormTextArea from '../../components/patterns/FormTextArea';\r\n\r\nexport default function RuleNameSection({ rule, updateRule, active }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Rule Information';\r\n  const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [title, setTitle] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (title !== rule.metadata.rule.title) setTitle(rule.metadata.rule.title);\r\n    if (desc !== rule.metadata.rule.description) setDesc(rule.metadata.rule.description);\r\n  }\r\n\r\n  // 3. Return a rendering of the component.\r\n  return (\r\n    <Box>\r\n      <Box padding={2} />\r\n      <Text variant=\"heading\">{sectionName}</Text>\r\n      <Box padding={1} />\r\n      <Text>{sectionDesc}</Text>\r\n      <Box padding={2} />\r\n      <Box>\r\n        <FormStandard\r\n          name=\"Rule Name (max 120 char)\"\r\n          description={RuleSchema.metadata.rule.__title}\r\n          placeholder={RuleSchema.metadata.rule.title}\r\n          value={title}\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n        <Box m={1} />\r\n        <FormTextArea\r\n          name=\"Short Description (max 240 char)\"\r\n          description={RuleSchema.metadata.rule.__description}\r\n          placeholder={RuleSchema.metadata.rule.description}\r\n          value={desc}\r\n          onChange={(e) => {\r\n            setDesc(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n        <Box padding={2} />\r\n\r\n        {/* SAVE BUTTON */}\r\n        {/* 4. In the save method, update the rule state. */}\r\n        <Button\r\n          disabled={!modified}\r\n          onClick={() => {\r\n            const ruleCopy = deepCopy(rule);\r\n\r\n            // Modify all necessary fields in the rule.\r\n            ruleCopy.metadata.rule.title = title;\r\n            ruleCopy.metadata.rule.description = desc;\r\n\r\n            // Call the updateRule function with the new content.\r\n            updateRule(ruleCopy);\r\n\r\n            // Cleanup and notifications.\r\n            toast(`Saved ${sectionName}`);\r\n            setModified(false);\r\n          }}\r\n        >\r\n          {`Save ${sectionName}`}\r\n        </Button>\r\n        <Box padding={4} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { deepCopy } from 'xalgo-rule-processor';\r\nimport {\r\n  Box,\r\n  Text,\r\n  Button,\r\n  FormStandard,\r\n  FormStandardLabel,\r\n  FormStandardDropdown,\r\n  Flex,\r\n} from '../../components';\r\n\r\nexport default function MetadataManagementSection({ rule, updateRule, active }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Rule Metadata';\r\n  const sectionDesc = 'Provide additional information about the authors and entities associated with this rule.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [title, setTitle] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (title !== rule.metadata.rule.title) setTitle(rule.metadata.rule.title);\r\n    if (desc !== rule.metadata.rule.description) setDesc(rule.metadata.rule.description);\r\n  }\r\n\r\n  /**\r\n   \"metadata\": {\r\n    \"rule\": {\r\n      \"title\": \"Test\",\r\n      \"description\": \"\",\r\n      \"version\": \"\",\r\n      \"criticality\": \"\",\r\n      \"entity\": [\r\n        {\r\n          \"name\": \"\",\r\n          \"url\": \"\",\r\n          \"id\": \"\"\r\n        }\r\n      ],\r\n    */\r\n\r\n  /**\r\n      \"authors\": [\r\n        {\r\n          \"name\": \"\",\r\n          \"email\": \"\",\r\n          \"solid_profile\": \"\",\r\n          \"role\": \"\"\r\n        }\r\n      ],\r\n    }\r\n  },\r\n  */\r\n\r\n  // 3. Return a rendering of the component.\r\n  return (\r\n    <Box>\r\n      <Box padding={2} />\r\n      <Text variant=\"heading\">{sectionName}</Text>\r\n      <Box padding={1} />\r\n      <Text>{sectionDesc}</Text>\r\n      <Box padding={2} />\r\n\r\n      <Box>\r\n        <div>\r\n          <FormStandardDropdown\r\n            name=\"Rule Version\"\r\n            description=\"Each rule author or maintainer is responsible for version management based on the 'Semver' industry convention.\"\r\n            placeholder=\"1.0.0\"\r\n            nameTwo=\"Xalgo Version\"\r\n            descriptionTwo=\"Which version of Interlibr and Xalgo is this rule expression designed to operate with?\"\r\n            options={[{ value: 'last stable', label: 'Last Stable' }]}\r\n          />\r\n          <Box padding={1} />\r\n          <FormStandardDropdown\r\n            name=\"Rule URL\"\r\n            description=\"Please supply a Web link directly to documentation about this rule.\"\r\n            placeholder=\"www.your.organization.org\"\r\n            nameTwo=\"Rule Criticality\"\r\n            descriptionTwo=\"Choose: experimental, in effect or archived\"\r\n            options={[\r\n              { value: 'experimental', label: 'Experimental' },\r\n              { value: 'in effect', label: 'in effect' },\r\n              { value: 'archived', label: 'archived' },\r\n            ]}\r\n          />\r\n          <Box padding={1} />\r\n          <Flex justifyContent=\"flex-end\">{/* the modal button will go here */}</Flex>\r\n        </div>\r\n      </Box>\r\n      <Box padding={2} />\r\n\r\n      {/* Managment, Authorship and Maintainence */}\r\n\r\n      <Box>\r\n        <div>\r\n          <FormStandardLabel\r\n            name=\"RuleMaker Entity Name\"\r\n            description=\"hello world is asking the following things\"\r\n            nameTwo=\"RuleMaker ID\"\r\n            descriptionTwo=\"hello world is asking the following things\"\r\n            value=\"Vqp4nv8eGprI\"\r\n          />\r\n          <Box padding={1} />\r\n          <FormStandard\r\n            name=\"RuleMaker URL\"\r\n            description=\"hello world is asking the following things\"\r\n          />\r\n          <Box padding={1} />\r\n          <FormStandardLabel\r\n            name=\"Rule Manager Name\"\r\n            description=\"hello world is asking the following things\"\r\n            nameTwo=\"Rule Manager ID\"\r\n            descriptionTwo=\"hello world is asking the following things\"\r\n            value=\"Vqp4nv8eGprI\"\r\n          />\r\n          <Box padding={1} />\r\n          <FormStandard\r\n            name=\"Rule Manager Email\"\r\n            description=\"hello world is asking the following things\"\r\n          />\r\n          <Box padding={1} />\r\n          <FormStandardLabel\r\n            name=\"Rule Author Name\"\r\n            description=\"hello world is asking the following things\"\r\n            nameTwo=\"Rule Author ID\"\r\n            descriptionTwo=\"hello world is asking the following things\"\r\n            value=\"Vqp4nv8eGprI\"\r\n          />\r\n          <Box padding={1} />\r\n          <FormStandard\r\n            name=\"Rule Author Email\"\r\n            description=\"hello world is asking the following things\"\r\n          />\r\n          <Box padding={1} />\r\n          <FormStandardLabel\r\n            name=\"Rule Maintainer Name\"\r\n            description=\"hello world is asking the following things\"\r\n            nameTwo=\"Rule Maintainer ID\"\r\n            descriptionTwo=\"hello world is asking the following things\"\r\n            value=\"Vqp4nv8eGprI\"\r\n          />\r\n          <Box padding={1} />\r\n          <FormStandard\r\n            name=\"Rule Maintainer Email\"\r\n            description=\"hello world is asking the following things\"\r\n          />\r\n          <Box padding={1} />\r\n          <Flex justifyContent=\"flex-end\">\r\n            <Box />\r\n            {/* the modal button will go here */}\r\n          </Flex>\r\n        </div>\r\n      </Box>\r\n\r\n      <Box padding={2} />\r\n\r\n      {/* SAVE BUTTON */}\r\n      {/* 4. In the save method, update the rule state. */}\r\n      <Button\r\n        disabled={!modified}\r\n        onClick={() => {\r\n          const ruleCopy = deepCopy(rule);\r\n\r\n          // Modify all necessary fields in the rule.\r\n          //ruleCopy.metadata.rule.title = title;\r\n\r\n          // Call the updateRule function with the new content.\r\n          updateRule(ruleCopy);\r\n\r\n          // Cleanup and notifications.\r\n          toast(`Saved ${sectionName}`);\r\n          setModified(false);\r\n        }}\r\n      >\r\n        {`Save ${sectionName}`}\r\n      </Button>\r\n      <Box padding={4} />\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormStandard, IdDisplay, Text } from '../../components';\r\n\r\nfunction RuleManager({ rule, updateRule, active }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Rule Manager';\r\n  //const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (name !== rule.metadata.rule.manager[0].name) setName(rule.metadata.rule.manager[0].name);\r\n    if (email !== rule.metadata.rule.manager[0].email) setEmail(rule.metadata.rule.manager[0].email);\r\n  }\r\n\r\n\r\n  function saveContent() {\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    rule.metadata.rule.manager[0].name = name;\r\n    rule.metadata.rule.manager[0].email = email;\r\n    updateRule(rule);\r\n    setModified(false);\r\n  }\r\n\r\n  return (\r\n    <div onMouseLeave={saveContent}>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Rule Manager</Text>\r\n        <Box p={1} />\r\n          <IdDisplay message=\"Vqp4nv8eGprI\" />\r\n              <Box padding={1} />\r\n              <FormStandard\r\n                name=\"Name\"\r\n                description={RuleSchema.metadata.rule.manager[0].__name}\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                  setModified(true);\r\n                }}\r\n              />\r\n              <Box padding={1} />\r\n              <FormStandard name=\"Email\"\r\n                description={RuleSchema.metadata.rule.manager[0].__email}\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                  setModified(true);\r\n                }}\r\n              />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RuleManager;\r\n","import React, { useState } from 'react';\r\nimport { Box, FormStandard, Text } from '../../components';\r\nimport { deepCopy, RuleSchema } from 'xalgo-rule-processor';\r\n\r\nfunction NameDescription({ rule, updateRule, active }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Rule Information';\r\n  //const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [title, setTitle] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (title !== rule.metadata.rule.title) setTitle(rule.metadata.rule.title);\r\n    if (desc !== rule.metadata.rule.description) setDesc(rule.metadata.rule.description);\r\n  }\r\n\r\n  function saveContent() {\r\n    const newRule = deepCopy(rule);\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    newRule.metadata.rule.title = title;\r\n    newRule.metadata.rule.description = desc;\r\n    updateRule(newRule);\r\n    setModified(false);\r\n  }\r\n\r\n  // 3. Return a rendering of the component.\r\n  return (\r\n    <div onMouseLeave={saveContent}>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Name & Description</Text>\r\n        <Box padding={1} />\r\n          <FormStandard\r\n            name=\"Rule Name\"\r\n            description={RuleSchema.metadata.rule.__title}\r\n            value={title}\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n              setModified(true);\r\n            }}\r\n          />\r\n          <Box padding={1} />\r\n          <FormStandard\r\n            name=\"Rule Description\"\r\n            description={RuleSchema.metadata.rule.__description}\r\n            value={desc}\r\n            onChange={(e) => {\r\n              setDesc(e.target.value);\r\n              setModified(true);\r\n            }}\r\n            longInput\r\n          />\r\n          {/*\r\n          <Box padding={1} />\r\n          <Text>\r\n            <b>Rule UUID:</b> {rule.path}\r\n          </Text>\r\n          <Text>\r\n            <b>Public Link:</b>\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n              href={`https://xalgo-system.herokuapp.com/rule/${rule.path}`}\r\n            >{`https://xalgo-system.herokuapp.com/rule/${rule.path}`}</a>\r\n          </Text>\r\n          */}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NameDescription;\r\n","import React, { useState } from 'react';\r\nimport { RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormStandard, IdDisplay, Text} from '../../components';\r\n\r\nfunction RuleAuthor({ rule, updateRule, active }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Rule Maintainer';\r\n  //const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (name !== rule.metadata.rule.authors[0].name) setName(rule.metadata.rule.authors[0].name);\r\n    if (email !== rule.metadata.rule.authors[0].email) setEmail(rule.metadata.rule.authors[0].email);\r\n  }\r\n\r\n\r\n  function saveContent() {\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    rule.metadata.rule.authors[0].name = name;\r\n    rule.metadata.rule.authors[0].email = email;\r\n    updateRule(rule);\r\n    setModified(false);\r\n  }\r\n\r\n  return (\r\n    <div onMouseLeave={saveContent}>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Rule Author</Text>\r\n        <Box p={1} />\r\n        <IdDisplay message=\"Vqp4nv8eGprI\" />\r\n        <Box padding={1} />\r\n        <FormStandard\r\n          name=\"Name\"\r\n          description={RuleSchema.metadata.rule.authors[0].__name}\r\n          value={name}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n        <Box padding={1} />\r\n        <FormStandard name=\"Email\"\r\n          description={RuleSchema.metadata.rule.authors[0].__email}\r\n          value={email}\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default RuleAuthor;\r\n","import React, { useState } from 'react';\r\nimport { RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormStandard, IdDisplay, Text } from '../../components';\r\n\r\nfunction RuleMaintainer({ rule, updateRule, active }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Rule Maintainer';\r\n  //const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (name !== rule.metadata.rule.maintainers[0].name) setName(rule.metadata.rule.maintainers[0].name);\r\n    if (email !== rule.metadata.rule.maintainers[0].email) setEmail(rule.metadata.rule.maintainers[0].email);\r\n  }\r\n\r\n\r\n  /*function saveContent() {\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    rule.metadata.rule.maintainers[0].name = name;\r\n    rule.metadata.rule.maintainers[0].email = email;\r\n    updateRule(rule);\r\n    setModified(false);\r\n  }*/\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Rule Maintainer</Text>\r\n        <Box p={1} />\r\n        <IdDisplay message=\"Vqp4nv8eGprI\" />\r\n              <Box padding={1} />\r\n              <FormStandard\r\n                name=\"Name\"\r\n                description={RuleSchema.metadata.rule.maintainers[0].__name}\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                  setModified(true);\r\n                }}\r\n              />\r\n              <Box padding={1} />\r\n              <FormStandard name=\"Email\"\r\n                description={RuleSchema.metadata.rule.maintainers[0].__email}\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                  setModified(true);\r\n                }}\r\n              />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RuleMaintainer;\r\n","import React, { useState } from 'react';\r\nimport { RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormStandard, FormDropdown, Text } from '../../components';\r\n\r\nfunction InputSources({ rule, updateRule, active }) {\r\n    // 0. Fill out the section name.\r\n  const sectionName = 'Rule Information';\r\n  //const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [title, setTitle] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (title !== rule.metadata.rule.title) setTitle(rule.metadata.rule.title);\r\n    if (desc !== rule.metadata.rule.description) setDesc(rule.metadata.rule.description);\r\n  }\r\n\r\n  // 3. Return a rendering of the component.\r\n  return (\r\n    <div>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Input Source</Text>\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n          name=\"Document Type\"\r\n          description=\"Not in Schema\"\r\n          options={[\r\n            { value: 'is.xalgo', label: 'is.xalgo' },\r\n            { value: 'lookup.xalgo', label: 'lookup.xalgo' }\r\n          ]}\r\n        />\r\n        <Box padding={1} />\r\n        <FormStandard name=\"Unique Identifier\" description={RuleSchema.metadata.rule.__description} />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputSources;\r\n","import React, { useState } from 'react';\r\nimport { RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormStandard, Text } from '../../components';\r\n\r\nfunction DataSource({ rule, updateRule, active }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Rule Maintainer';\r\n  //const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [country, setCountry] = useState('');\r\n  const [subCountry, setSubCountry] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (country !== rule.input_context.jurisdiction[0].country) setCountry(rule.input_context.jurisdiction[0].country);\r\n    if (subCountry !== rule.input_context.jurisdiction[0].subcountry) setSubCountry(rule.input_context.jurisdiction[0].subcountry);\r\n  }\r\n\r\n\r\n  function saveContent() {\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    rule.input_context.jurisdiction[0].country = country;\r\n    rule.input_context.jurisdiction[0].subcountry = subCountry;\r\n    updateRule(rule);\r\n    setModified(false);\r\n  }\r\n\r\n  return (\r\n    <div onMouseLeave={saveContent}>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Jurisdiction</Text>\r\n        <Box p={1} />\r\n        <FormStandard\r\n          name=\"Country Jurisdiction\"\r\n          description={RuleSchema.input_context.jurisdiction[0].__country}\r\n          value={country}\r\n          onChange={(e) => {\r\n            setCountry(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n        <Box padding={1} />\r\n        <FormStandard name=\"Sub-country Jurisdiction\"\r\n          description={RuleSchema.input_context.jurisdiction[0].__subcountry}\r\n          value={subCountry}\r\n          onChange={(e) => {\r\n            setSubCountry(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataSource;\r\n","import React, { useState } from 'react';\r\nimport { RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormStandard, Flex, Dropdown, Text, FormDropdown } from '../../components';\r\n\r\nfunction Time({ rule, updateRule, active, section, label }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Rule Information';\r\n  // const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [title, setTitle] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (title !== rule.metadata.rule.title) setTitle(rule.metadata.rule.title);\r\n    if (desc !== rule.metadata.rule.description) setDesc(rule.metadata.rule.description);\r\n  }\r\n\r\n  // 3. Return a rendering of the component.\r\n  return (\r\n    <div>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">{label}</Text>\r\n        <Box padding={1} />\r\n        <FormStandard name=\"Date\" description={RuleSchema.metadata.rule.__description} />\r\n        <Box padding={1} />\r\n        <Flex alignItems=\"center\">\r\n          <Dropdown>\r\n            <option>Hour</option>\r\n            <option>00</option>\r\n            <option>01</option>\r\n            <option>02</option>\r\n            <option>03</option>\r\n            <option>04</option>\r\n            <option>05</option>\r\n            <option>06</option>\r\n            <option>07</option>\r\n            <option>08</option>\r\n            <option>09</option>\r\n            <option>10</option>\r\n            <option>11</option>\r\n            <option>12</option>\r\n            <option>13</option>\r\n            <option>14</option>\r\n            <option>15</option>\r\n            <option>16</option>\r\n            <option>17</option>\r\n            <option>18</option>\r\n            <option>19</option>\r\n            <option>20</option>\r\n            <option>21</option>\r\n            <option>22</option>\r\n            <option>23</option>\r\n          </Dropdown>\r\n          <Box padding={1} />\r\n          <Dropdown>\r\n            <option>Minute</option>\r\n            <option>00</option>\r\n            <option>01</option>\r\n            <option>02</option>\r\n            <option>03</option>\r\n            <option>04</option>\r\n            <option>05</option>\r\n            <option>06</option>\r\n            <option>07</option>\r\n            <option>08</option>\r\n            <option>09</option>\r\n            <option>10</option>\r\n            <option>11</option>\r\n            <option>12</option>\r\n            <option>13</option>\r\n            <option>14</option>\r\n            <option>15</option>\r\n            <option>16</option>\r\n            <option>17</option>\r\n            <option>18</option>\r\n            <option>19</option>\r\n            <option>20</option>\r\n            <option>21</option>\r\n            <option>22</option>\r\n            <option>23</option>\r\n            <option>24</option>\r\n            <option>25</option>\r\n            <option>26</option>\r\n            <option>27</option>\r\n            <option>28</option>\r\n            <option>29</option>\r\n            <option>30</option>\r\n            <option>31</option>\r\n            <option>32</option>\r\n            <option>33</option>\r\n            <option>34</option>\r\n            <option>35</option>\r\n            <option>36</option>\r\n            <option>37</option>\r\n            <option>38</option>\r\n            <option>39</option>\r\n            <option>40</option>\r\n            <option>41</option>\r\n            <option>42</option>\r\n            <option>43</option>\r\n            <option>44</option>\r\n            <option>45</option>\r\n            <option>46</option>\r\n            <option>47</option>\r\n            <option>48</option>\r\n            <option>49</option>\r\n            <option>50</option>\r\n            <option>51</option>\r\n            <option>52</option>\r\n            <option>53</option>\r\n            <option>54</option>\r\n            <option>55</option>\r\n            <option>56</option>\r\n            <option>57</option>\r\n            <option>58</option>\r\n            <option>59</option>\r\n          </Dropdown>\r\n          <Box padding={1} />\r\n          <Dropdown>\r\n            <option>Second</option>\r\n            <option>00</option>\r\n            <option>01</option>\r\n            <option>02</option>\r\n            <option>03</option>\r\n            <option>04</option>\r\n            <option>05</option>\r\n            <option>06</option>\r\n            <option>07</option>\r\n            <option>08</option>\r\n            <option>09</option>\r\n            <option>10</option>\r\n            <option>11</option>\r\n            <option>12</option>\r\n            <option>13</option>\r\n            <option>14</option>\r\n            <option>15</option>\r\n            <option>16</option>\r\n            <option>17</option>\r\n            <option>18</option>\r\n            <option>19</option>\r\n            <option>20</option>\r\n            <option>21</option>\r\n            <option>22</option>\r\n            <option>23</option>\r\n            <option>24</option>\r\n            <option>25</option>\r\n            <option>26</option>\r\n            <option>27</option>\r\n            <option>28</option>\r\n            <option>29</option>\r\n            <option>30</option>\r\n            <option>31</option>\r\n            <option>32</option>\r\n            <option>33</option>\r\n            <option>34</option>\r\n            <option>35</option>\r\n            <option>36</option>\r\n            <option>37</option>\r\n            <option>38</option>\r\n            <option>39</option>\r\n            <option>40</option>\r\n            <option>41</option>\r\n            <option>42</option>\r\n            <option>43</option>\r\n            <option>44</option>\r\n            <option>45</option>\r\n            <option>46</option>\r\n            <option>47</option>\r\n            <option>48</option>\r\n            <option>49</option>\r\n            <option>50</option>\r\n            <option>51</option>\r\n            <option>52</option>\r\n            <option>53</option>\r\n            <option>54</option>\r\n            <option>55</option>\r\n            <option>56</option>\r\n            <option>57</option>\r\n            <option>58</option>\r\n            <option>59</option>\r\n          </Dropdown>\r\n        </Flex>\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n                    name=\"Time Zone\"\r\n                    description={RuleSchema.input_context.__timezone}\r\n                    options={[\r\n                      { value: 'UTC−12:00', label: 'UTC−12:00' },\r\n                      { value: 'UTC−11:00', label: 'UTC−11:00' },\r\n                      { value: 'UTC−10:00', label: 'UTC−10:00' },\r\n                      { value: 'UTC−09:30', label: 'UTC−09:30' },\r\n                      { value: 'UTC−09:00', label: 'UTC−09:00' },\r\n                      { value: 'UTC−08:00', label: 'UTC−08:00' },\r\n                      { value: 'UTC−07:00', label: 'UTC−07:00' },\r\n                      { value: 'UTC−06:00', label: 'UTC−06:00' },\r\n                      { value: 'UTC−05:00', label: 'UTC−05:00' },\r\n                      { value: 'UTC−04:00', label: 'UTC−04:00' },\r\n                      { value: 'UTC−03:30', label: 'UTC−03:30' },\r\n                      { value: 'UTC−03:00', label: 'UTC−03:00' },\r\n                      { value: 'UTC−02:00', label: 'UTC−02:00' },\r\n                      { value: 'UTC−01:00', label: 'UTC−01:00' },\r\n                      { value: 'UTC±00:00', label: 'UTC±00:00' },\r\n                      { value: 'UTC+01:00', label: 'UTC+01:00' },\r\n                      { value: 'UTC+02:00', label: 'UTC+02:00' },\r\n                      { value: 'UTC+03:00', label: 'UTC+03:00' },\r\n                      { value: 'UTC+03:30', label: 'UTC+03:30' },\r\n                      { value: 'UTC+04:00', label: 'UTC+04:00' },\r\n                      { value: 'UTC+04:30', label: 'UTC+04:30' },\r\n                      { value: 'UTC+05:00', label: 'UTC+05:00' },\r\n                      { value: 'UTC+05:30', label: 'UTC+05:30' },\r\n                      { value: 'UTC+05:45', label: 'UTC+05:45' },\r\n                      { value: 'UTC+06:00', label: 'UTC+06:00' },\r\n                      { value: 'UTC+06:30', label: 'UTC+06:30' },\r\n                      { value: 'UTC+07:00', label: 'UTC+07:00' },\r\n                      { value: 'UTC+08:00', label: 'UTC+08:00' },\r\n                      { value: 'UTC+08:45', label: 'UTC+08:45' },\r\n                      { value: 'UTC+09:00', label: 'UTC+09:00' },\r\n                      { value: 'UTC+09:30', label: 'UTC+09:30' },\r\n                      { value: 'UTC+10:00', label: 'UTC+10:00' },\r\n                      { value: 'UTC+10:30', label: 'UTC+10:30' },\r\n                      { value: 'UTC+11:00', label: 'UTC+11:00' },\r\n                      { value: 'UTC+12:00', label: 'UTC+12:00' },\r\n                      { value: 'UTC+12:45', label: 'UTC+12:45' },\r\n                      { value: 'UTC+13:00', label: 'UTC+13:00' },\r\n                      { value: 'UTC+14:00', label: 'UTC+14:00' },\r\n                    ]}\r\n                  />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Time;\r\n","import React, { useState } from 'react';\r\nimport { RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormStandard, Text } from '../../components';\r\n\r\nfunction StandardRoleName({ rule, updateRule, active }) {\r\n    // 0. Fill out the section name.\r\n  const sectionName = 'Standard Role Name';\r\n  //const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [code, setCode] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (code !== rule.input_filters.standard_role_name[0].isic_industry_code) setCode(rule.input_filters.standard_role_name[0].isic_industry_code);\r\n    if (name !== rule.input_filters.standard_role_name[0].isic_industry_name) setName(rule.input_filters.standard_role_name[0].isic_industry_name);\r\n  }\r\n\r\n  /*\r\n  function saveContent() {\r\n    const newRule = deepCopy(rule);\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    newRule.input_filters.standard_role_name[0].isic_industry_code = code;\r\n    newRule.input_filters.standard_role_name[0].isic_industry_name = name;\r\n    updateRule(newRule);\r\n    setModified(false);\r\n  }\r\n  */\r\n\r\n  // 3. Return a rendering of the component.\r\n  return (\r\n    <div /*onMouseLeave={saveContent}*/>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Standard Role Name</Text>\r\n        <Box padding={1} />\r\n        <FormStandard\r\n          name=\"ISIC Industry Code\"\r\n          description={RuleSchema.input_filters.standard_role_name[0].__isic_industry_code}\r\n          value={code}\r\n          onChange={(e) => {\r\n            setCode(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n        <Box padding={1} />\r\n        <FormStandard\r\n          name=\"ISIC Industry Name\"\r\n          description={RuleSchema.input_filters.standard_role_name[0].__isic_industry_name}\r\n          value={name}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StandardRoleName;\r\n","import React, { useState } from 'react';\r\nimport { RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormStandard, Text } from '../../components';\r\n\r\nfunction StandardRoleName({ rule, updateRule, active }) {\r\n    // 0. Fill out the section name.\r\n  const sectionName = 'Involved Product or Service';\r\n  //const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, /*setModified*/] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [code, setCode] = useState('');\r\n  const [name, setName] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (code !== rule.input_filters.involved_product_service[0].unspsc_code) setCode(rule.input_filters.involved_product_service[0].unspsc_code);\r\n    if (name !== rule.input_filters.involved_product_service[0].unspsc_name) setName(rule.input_filters.involved_product_service[0].unspsc_name);\r\n  }\r\n\r\n  /*\r\n  function saveContent() {\r\n    const newRule = deepCopy(rule);\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    newRule.input_filters.involved_product_service[0].unspsc_code = code;\r\n    newRule.input_filters.involved_product_service[0].unspsc_name = name;\r\n    updateRule(newRule);\r\n    setModified(false);\r\n  }\r\n  */\r\n\r\n  // 3. Return a rendering of the component.\r\n  return (\r\n    <div /*onMouseLeave={saveContent}*/>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Involved Product or Service</Text>\r\n        <Box padding={1} />\r\n        <FormStandard\r\n          name=\"UNSPSC Product or Service Code\"\r\n          description={RuleSchema.input_filters.involved_product_service[0].__nspsc_code}\r\n        />\r\n        <Box padding={1} />\r\n        <FormStandard\r\n          name=\"UNSPSC Product or Service Name\"\r\n          description={RuleSchema.input_filters.involved_product_service[0].__unspsc_name}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StandardRoleName;\r\n","import React, { useState } from 'react';\r\nimport { deepCopy, RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormDropdown, Text } from '../../components';\r\n\r\nfunction OutputPurpose({ rule, updateRule, active, section, }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Output Purpose';\r\n  // const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  /*\r\n  const [conformance, setConformance] = useState('');\r\n  const [primaryVerb, setPrimaryVerb] = useState('');\r\n  */\r\n  const [actionVerb, setActionVerb] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (actionVerb !== rule.output_purpose.action_verb) setActionVerb(rule.output_purpose.action_verb);\r\n  }\r\n\r\n  function saveContent() {\r\n    const newRule = deepCopy(rule);\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    newRule.output_purpose.action_verb = actionVerb;\r\n    updateRule(newRule);\r\n    setModified(false);\r\n  }\r\n\r\n  // 3. Return a rendering of the component.\r\n  return (\r\n    <div onMouseLeave={saveContent}>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Purpose</Text>\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n          name=\"Who has responsibility for conformance?\"\r\n          description=\"Who has responsibility for conformance?\"\r\n          options={[\r\n            { value: 'rule-maker', label: 'rule-maker' },\r\n            { value: 'rule-taker', label: 'rule-taker' },\r\n            { value: 'third-party', label: 'third-party' },\r\n          ]}\r\n        />\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n          name=\"What is the primary verb?\"\r\n          description=\"What is the primary normative (deontic; modal) verb?\"\r\n          options={[\r\n            { value: 'must', label: 'must' },\r\n            { value: 'may', label: 'may' },\r\n            { value: 'should', label: 'should' },\r\n          ]}\r\n        />\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n          name=\"What is the nature of the primary verb\"\r\n          description=\"Is the primary modal verb stated in the affirmative; negative or as a question?\"\r\n          options={[\r\n            { value: 'affirmative', label: 'affirmative' },\r\n            { value: 'negative', label: 'negative' },\r\n            { value: 'interrogative', label: 'interrogative' },\r\n          ]}\r\n        />\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n          name=\"What is the primary action verb?\"\r\n          description={RuleSchema.output_purpose.__action_verb}\r\n          options={[\r\n            { value: 'be', label: 'be' },\r\n            { value: 'do', label: 'do' },\r\n            { value: 'have', label: 'have' },\r\n          ]}\r\n          value={actionVerb}\r\n          onChange={(e) => {\r\n            setActionVerb(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n          name=\"What is the type of philosophical rationale?\"\r\n          description=\"What is the principal type of philosophical rationale for this rule?\"\r\n          options={[\r\n            { value: 'logical', label: 'logical' },\r\n            { value: 'practical', label: 'practical' },\r\n            { value: 'ethical', label: 'ethical' },\r\n          ]}\r\n        />\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n          name=\"What is the nature of this rule?\"\r\n          description=\"Is this a directly implemented rule, a desription of a rule to be conformed with, or an empirical\r\n            fact about a rule?\"\r\n          options={[\r\n            { value: 'imperative', label: 'imperative' },\r\n            { value: 'declarative', label: 'declarative' },\r\n            { value: 'empirical', label: 'empirical' },\r\n          ]}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OutputPurpose;\r\n","import React, { useState } from 'react';\r\n//import { RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormSlider, FormDropdown, Text } from '../../components';\r\nimport {\r\n  deepCopy,\r\n  //RuleSchema\r\n} from 'xalgo-rule-processor';\r\n\r\nfunction QualitativeWeights({ rule, updateRule, active, section }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Qualitative Weights';\r\n  // const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  // const [title, setTitle] = useState('');\r\n\r\n  const [ruleGroup, setRuleGroup] = useState('');\r\n  const [character, setCharacter] = useState(0);\r\n  const [enforcement, setEnforcement] = useState(0);\r\n  const [consequences, setConsequences] = useState(0);\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    // if (title !== rule.metadata.rule.title) setTitle(rule.metadata.rule.title);\r\n    if (ruleGroup !== rule.output_weight.rule_group) {\r\n      console.log(`Setting character to ${rule.output_weight.rule_group}`);\r\n      setRuleGroup(rule.output_weight.rule_group);\r\n    }\r\n    if (character !== rule.output_weight.character_of_obligation) {\r\n      console.log(`Setting character to ${rule.output_weight.character_of_obligation}`);\r\n      setCharacter(rule.output_weight.character_of_obligation);\r\n    }\r\n    if (enforcement !== rule.output_weight.enforcement_measures) {\r\n      console.log(`Setting enforcement to ${rule.output_weight.character_of_obligation}`);\r\n      setEnforcement(rule.output_weight.enforcement_measures);\r\n    }\r\n    if (consequences !== rule.output_weight.consequences) {\r\n      console.log(`Setting consequences to ${rule.output_weight.consequences}`);\r\n      setConsequences(rule.output_weight.consequences);\r\n    }\r\n  }\r\n\r\n  function saveContent() {\r\n    const newRule = deepCopy(rule);\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    // rule.metadata.rule.title = title;\r\n    console.log(\r\n      `Saving weights => group: ${ruleGroup} character: ${character} enforcement: ${enforcement} consequences: ${consequences}`\r\n    );\r\n    newRule.output_weight.rule_group = ruleGroup;\r\n    newRule.output_weight.character_of_obligation = character;\r\n    newRule.output_weight.enforcement_measures = enforcement;\r\n    newRule.output_weight.consequences = consequences;\r\n    updateRule(newRule);\r\n    setModified(false);\r\n  }\r\n\r\n  // 3. Return a rendering of the component.\r\n  return (\r\n    <div onMouseLeave={saveContent}>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Qualitative Weights</Text>\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n          name=\"Select the rule group that most applies.\"\r\n          description=\"hello world is asking the following things\"\r\n          options={[\r\n            {\r\n              value: 'Informal Custom or Preference',\r\n              label: 'Informal Custom or Preference',\r\n            },\r\n            { value: 'Operational Pattern', label: 'Operational Pattern' },\r\n            {\r\n              value: 'Formal Custom Without Legal Standing',\r\n              label: 'Formal Custom Without Legal Standing',\r\n            },\r\n            {\r\n              value: 'Guideline, Instruction, or Policy',\r\n              label: 'Guideline, Instruction, or Policy',\r\n            },\r\n            { value: 'Code of Conduct', label: 'Code of Conduct' },\r\n            { value: 'Regulation or Directive', label: 'Regulation or Directive' },\r\n            { value: 'Common Law or Case Law', label: 'Common Law or Case Law' },\r\n            { value: 'Statute or Legislation', label: 'Statute or Legislation' },\r\n            { value: 'International Law', label: 'International Law' },\r\n          ]}\r\n          value={ruleGroup}\r\n          onChange={(e) => {\r\n            setModified(true);\r\n            console.log(`Setting rule group to ${e.target.value}`);\r\n            console.log(e);\r\n            setRuleGroup(e.target.value);\r\n          }}\r\n        />\r\n        <Box padding={2} />\r\n        <FormSlider\r\n          name=\"Character of this Obligation\"\r\n          description=\"lorem ipsum\"\r\n          labela=\"Basic Coherence\"\r\n          labelb=\"Strongly Beneficial\"\r\n          labelc=\"Absolutely Essential\"\r\n          value={character}\r\n          onChange={(e) => {\r\n            setModified(true);\r\n            setCharacter(parseInt(e));\r\n          }}\r\n        />\r\n        <Box padding={2} />\r\n        <FormSlider\r\n          name=\"Enforcement Measures in Place\"\r\n          description=\"lorem ipsum\"\r\n          labela=\"Minor Penalties\"\r\n          labelb=\"Significant Penalties\"\r\n          labelc=\"Major Penalties\"\r\n          value={enforcement}\r\n          onChange={(e) => {\r\n            setModified(true);\r\n            setEnforcement(parseInt(e));\r\n          }}\r\n        />\r\n        <Box padding={2} />\r\n        <FormSlider\r\n          name=\"Consequences of Non-Conformance \"\r\n          description=\"lorem ipsum\"\r\n          labela=\"Preference Only\"\r\n          labelb=\"Significant Effects\"\r\n          labelc=\"Enormous Impacts\"\r\n          value={consequences}\r\n          onChange={(e) => {\r\n            setModified(true);\r\n            setConsequences(parseInt(e));\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QualitativeWeights;\r\n","import React, { useState } from 'react';\r\nimport { Box, FormStandard, Text, FormDropdown } from '../../components';\r\nimport { deepCopy, RuleSchema } from 'xalgo-rule-processor';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Metadata({ rule, updateRule, active }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Rule Metadata';\r\n  // const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [url, setUrl] = useState('');\r\n  const [version, setVersion] = useState('');\r\n  const [criticality, setCriticality] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (url !== rule.metadata.rule.url) setUrl(rule.metadata.rule.url);\r\n    if (version !== rule.metadata.rule.content_uuid) setVersion(rule.metadata.rule.content_uuid);\r\n    if (criticality !== rule.metadata.rule.criticality)\r\n      setCriticality(rule.metadata.rule.criticality);\r\n  }\r\n\r\n  function saveContent() {\r\n    // Remember not to modify the rule prop.\r\n    const newRule = deepCopy(rule);\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    newRule.metadata.rule.url = url;\r\n    newRule.metadata.rule.content_uuid = version;\r\n    newRule.metadata.rule.criticality = criticality;\r\n    updateRule(newRule);\r\n    setModified(false);\r\n  }\r\n\r\n  // 3. Return a rendering of the component.\r\n  return (\r\n    <div onMouseLeave={saveContent}>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Rule Metadata</Text>\r\n        <Box padding={1} />\r\n        <FormStandard\r\n          name=\"Full Rule Text URL\"\r\n          description={RuleSchema.metadata.rule.__url}\r\n          type=\"url\"\r\n          value={url}\r\n          onChange={(e) => {\r\n            setUrl(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n        <Box padding={1} />\r\n        <FormStandard\r\n          name=\"Rule Version\"\r\n          placeholder=\"1.0\"\r\n          description={RuleSchema.metadata.rule.__version}\r\n          value={version}\r\n          onChange={(e) => {\r\n            // TODO: Make field appear uneditable.\r\n            toast.warning(\"Don't modify this. Your changes will not be persisted.\");\r\n            setVersion(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n          name=\"Xalgo Version\"\r\n          description=\"Not in Schema\"\r\n          options={[{ value: '1.0', label: '1.0' }]}\r\n        />\r\n        <Box padding={1} />\r\n        <FormDropdown\r\n          name=\"Rule Criticality\"\r\n          description={RuleSchema.metadata.rule.__criticality}\r\n          options={[{ value: 'Experimental', label: 'Experimental' }]}\r\n          value={criticality}\r\n          onChange={(e) => {\r\n            setCriticality(e.target.value);\r\n            setModified(true);\r\n          }}\r\n        />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Metadata;\r\n","import React, { useState } from 'react';\r\nimport { RuleSchema } from 'xalgo-rule-processor';\r\nimport { Box, FormStandard, IdDisplay, Text } from '../../components';\r\n\r\nfunction Entity({ rule, updateRule, active }) {\r\n  // 0. Fill out the section name.\r\n  const sectionName = 'Rule Maintainer';\r\n  //const sectionDesc = 'Begin your rule by providing a title and concise description.';\r\n  const [modified, setModified] = useState(false);\r\n\r\n  // 1. Set a state for each element that must be filled.\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  // Don't touch this.\r\n  if (active && !modified) {\r\n    console.log(`${sectionName} section is being edited.`);\r\n\r\n    // 2. Ensure each field is set according to the current rule state.\r\n    if (name !== rule.metadata.rule.maintainers[0].name) setName(rule.metadata.rule.maintainers[0].name);\r\n    if (email !== rule.metadata.rule.maintainers[0].email) setEmail(rule.metadata.rule.maintainers[0].email);\r\n  }\r\n\r\n\r\n  /*function saveContent() {\r\n    console.log(`Saving ${sectionName} to state.`);\r\n    rule.metadata.rule.maintainers[0].name = name;\r\n    rule.metadata.rule.maintainers[0].email = email;\r\n    updateRule(rule);\r\n    setModified(false);\r\n  }*/\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Box border=\"1px solid\" borderColor=\"oline\" borderRadius=\"base\" p={3} bg=\"#fff\">\r\n        <Text variant=\"formtitle\">Rule Maker Entity</Text>\r\n        <Box p={1} />\r\n        <IdDisplay message=\"Vqp4nv8eGprI\" />\r\n              <Box padding={1} />\r\n              <FormStandard\r\n                name=\"Rule Maker Entity Name\"\r\n                description={RuleSchema.metadata.rule.maintainers[0].__name}\r\n                value={name}\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                  setModified(true);\r\n                }}\r\n              />\r\n              <Box padding={1} />\r\n              <FormStandard name=\"Rule Maker Entity URL\"\r\n                description={RuleSchema.metadata.rule.maintainers[0].__email}\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                  setModified(true);\r\n                }}\r\n              />\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Entity;\r\n","import React from 'react';\r\nimport { Stack, Box, FormStandardDouble, Text } from '..';\r\n\r\nexport function TwoFieldModule({ title, fielda, descriptiona, fieldb, descriptionb }) {\r\n    return (\r\n      <Stack gap={4}>\r\n        <Box\r\n          p={2}\r\n          m={0}\r\n          width={1}\r\n          bg=\"bg\"\r\n          border=\"1px solid\"\r\n          borderColor=\"oline\"\r\n          borderRadius=\"base\"\r\n        >\r\n          <Text variant=\"formtitle\">{title}</Text>\r\n            <Box padding={1} />\r\n          <FormStandardDouble\r\n            name={fielda}\r\n            description={descriptiona}\r\n            nameTwo={fieldb}\r\n            descriptionTwo={descriptionb}\r\n          />\r\n        </Box>\r\n        <Box padding={1} />\r\n      </Stack>\r\n    );\r\n}\r\n\r\nexport default TwoFieldModule;\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  deepCopy,\r\n  objectEmpty,\r\n  generateNewRule,\r\n  addNewCase,\r\n  addNewInputCondition,\r\n  addNewOutputAssertion,\r\n  prettyJSON,\r\n  // RuleSchema,\r\n} from 'xalgo-rule-processor';\r\nimport EditorLeft from './editor-layouts/EditorLeft';\r\nimport ColumnLabel from '../components/patterns/ColumnLabel';\r\nimport {\r\n  Box,\r\n  Text,\r\n  Flex,\r\n  Button,\r\n  Addbutton,\r\n  InputOutputRow,\r\n  FormStandard,\r\n  FormSlider,\r\n  FormStandardDropdown,\r\n  FormDropdown,\r\n  FormStandardDouble,\r\n  InvolvedParty,\r\n  SentenceEditor,\r\n  Icon,\r\n  FormDropdownDouble,\r\n} from '../components';\r\n\r\nimport { BlankRows, RuleNameSection, MetadataManagementSection } from './editor-components';\r\nimport Axios from 'axios';\r\n\r\nimport TwoFieldModule from '../components/patterns/TwoFieldModule';\r\nimport { ClockLoader } from 'react-spinners';\r\n\r\nconst alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\nconst fullheight = {\r\n  minHeight: '80vh',\r\n  minWidth: '500px',\r\n  maxWidth: '800px',\r\n  // overflowX:\r\n};\r\n\r\nconst overflowTable = {\r\n  width: '100%',\r\n  overflowX: 'scroll',\r\n};\r\n\r\nconst ruleLeft = {\r\n  borderLeft: '1px solid #E7E7E7',\r\n  padding: '1em',\r\n};\r\n\r\nconst ruleLeftalt = {\r\n  borderLeft: '1px solid #E7E7E7',\r\n  padding: '0.75em',\r\n};\r\n\r\nconst halfWidth = {\r\n  minWidth: '400px',\r\n};\r\n\r\nconst bottomLine = {\r\n  borderBottom: '1px solid #E7E7E7',\r\n};\r\n\r\nconst rowWidth = {\r\n  width: '60px',\r\n};\r\n\r\nconst fixpos = {\r\n  position: 'sticky',\r\n  top: '88px',\r\n  width: '100%',\r\n};\r\n\r\nconst modalhold = {\r\n  position: 'sticky',\r\n  height: '90vh',\r\n  background: 'rgba(255, 255, 255, .8)',\r\n  marginBottom: '-90vh',\r\n};\r\n\r\n// This empty rule is the schema without any __descriptions.\r\n// Temporarily start with three cases.\r\nconst emptyRule = generateNewRule();\r\n\r\n/**\r\n * ================\r\n * The Editor Class\r\n * ================\r\n *\r\n * The Editor component is the parent of all editing views, and is the\r\n * master source of information regarding the state of the rule.\r\n */\r\nexport default class EditorV1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rule: deepCopy(emptyRule),\r\n      sampleInvolvedParties: [1],\r\n      active: false,\r\n      modalOpen: false,\r\n      modalEditingInput: false,\r\n      modalEditingIndex: 0,\r\n    };\r\n\r\n    this.getRuleFromStorage = this.getRuleFromStorage.bind(this);\r\n    this.updateRule = this.updateRule.bind(this);\r\n\r\n    // reset delete persist\r\n    this.resetRule = this.resetRule.bind(this);\r\n    this.deleteRule = this.deleteRule.bind(this);\r\n    this.persistRuleToLocalStorage = this.persistRuleToLocalStorage.bind(this);\r\n\r\n    // Sentence editing\r\n    this.editSentence = this.editSentence.bind(this);\r\n    this.editInputCondition = this.editInputCondition.bind(this);\r\n    this.editOutputAssertion = this.editOutputAssertion.bind(this);\r\n    this.addCase = this.addCase.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(`Loading rule ${this.props.ruleUUID} editor version v0.4-1`);\r\n    Axios.get(`/rules/rule/${this.props.ruleUUID}/`, {\r\n      headers: {\r\n        'X-CSRFToken': this.props.token,\r\n      },\r\n    }).then((res) => {\r\n      Axios.get(`/rules/content/${res.data.primary_content}/`, {\r\n        headers: {\r\n          'X-CSRFToken': this.props.token,\r\n        },\r\n      }).then((res) => {\r\n        console.log('Got body:');\r\n        console.log(res.data.body);\r\n        this.updateRule(res.data.body);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ==============================================\r\n   * Class Functions, mostly for editing rule state\r\n   * ==============================================\r\n   */\r\n\r\n  getRuleFromStorage() {\r\n    console.log('Editor.jsx: Getting rule from storage...');\r\n\r\n    const storedRule = localStorage.getItem('rulev2');\r\n    const storedRuleContent = JSON.parse(storedRule);\r\n    const storedRuleEmpty = objectEmpty(storedRuleContent);\r\n\r\n    console.log(`Editor.jsx: Local stored rule is \\n\\n${storedRule}`);\r\n\r\n    if (!this.state.rule.metadata.rule.title) {\r\n      console.log('Editor.jsx: There is currently no rule stored in STATE.');\r\n      if (!storedRuleEmpty && storedRuleContent.metadata.rule.title) {\r\n        console.log('Editor.jsx: There is rule content in local storage, loading into State...');\r\n        this.updateRule(storedRuleContent);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateRule(content) {\r\n    let newRuleContent = content;\r\n    console.log(\r\n      `Editor.jsx: Updating Rule Content:\r\n      \\nContent:\\n${prettyJSON(newRuleContent)}`\r\n    );\r\n\r\n    if (newRuleContent.input_conditions.length === 0) {\r\n      newRuleContent = addNewInputCondition(newRuleContent);\r\n    }\r\n\r\n    if (newRuleContent.output_assertions.length === 0) {\r\n      newRuleContent = addNewOutputAssertion(newRuleContent);\r\n    }\r\n    // Perform checks on rule to ensure content is good.\r\n    if (newRuleContent.input_conditions[0].cases[0].case === '') {\r\n      console.log('Adding a case to the cases.');\r\n      newRuleContent.input_conditions[0].cases[0].case = alphabet.charAt(0);\r\n    }\r\n\r\n    // Finally, save.\r\n    this.setState({ active: false, rule: newRuleContent }, () => {\r\n      console.log('Editor.jsx: Updated content from local storage.');\r\n      this.setState({ active: true, modalOpen: false }, () => {\r\n        this.persistRuleToLocalStorage();\r\n      });\r\n    });\r\n  }\r\n\r\n  resetRule() {\r\n    toast.warning('Rule reset');\r\n    this.updateRule(deepCopy(emptyRule));\r\n    this.props.navigate('/editor');\r\n  }\r\n\r\n  deleteRule() {\r\n    toast.warning('Rule Delete');\r\n    this.updateRule(deepCopy(emptyRule));\r\n    this.props.navigate('/dashboard');\r\n    console.error(\"This is a toy editor, you're not deleting anything.\");\r\n  }\r\n\r\n  persistRuleToLocalStorage() {\r\n    console.log('Editor.jsx: Persisting rule to local storage...');\r\n    localStorage.setItem('rulev2', prettyJSON(this.state.rule));\r\n  }\r\n\r\n  /**\r\n   * ===========================\r\n   * Functions for Editing Cases\r\n   * ===========================\r\n   */\r\n\r\n  editInputCondition(key) {\r\n    this.editSentence(key, true);\r\n  }\r\n\r\n  editOutputAssertion(key) {\r\n    this.editSentence(key, false);\r\n  }\r\n\r\n  editSentence(key, inputConditions = false) {\r\n    this.setState({\r\n      modalOpen: true,\r\n      modalEditingInput: inputConditions,\r\n      modalEditingIndex: key,\r\n    });\r\n  }\r\n\r\n  addCase() {\r\n    this.updateRule(addNewCase(this.state.rule));\r\n  }\r\n\r\n  /**\r\n   * ==================================\r\n   * Rendering Method, end of functions\r\n   * ==================================\r\n   *\r\n   * I've tried to move as many parts of this as possible into functional\r\n   * components, which are included after this class. Those which could not\r\n   * should be moved in the future.\r\n   */\r\n\r\n  render() {\r\n    const {\r\n      rule,\r\n      sampleInvolvedParties,\r\n      active,\r\n      modalOpen,\r\n      modalEditingIndex,\r\n      modalEditingInput,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <EditorLeft\r\n          title={rule.metadata.rule.title}\r\n          description={rule.metadata.rule.description}\r\n          deleteFunction={this.deleteRule}\r\n          resetFunction={this.resetRule}\r\n        >\r\n          {this.state.active ? (\r\n            <div>\r\n              {/* Modal used by input/output tables. */}\r\n              {modalOpen ? (\r\n                <div style={fixpos}>\r\n                  <Box p={4} bg=\"#fff\">\r\n                    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n                      <div>\r\n                        <Box padding=\"0.2em\" />\r\n                        <Text variant=\"formtitle\">{rule.metadata.rule.name}</Text>\r\n                      </div>\r\n                      <Flex>\r\n                        <Text color=\"publish\">Publish</Text>\r\n                        <Box p={1} />\r\n                        <Text color=\"primary\">Save and Exit</Text>\r\n                      </Flex>\r\n                    </Flex>\r\n                  </Box>\r\n                  <div style={modalhold}>\r\n                    <Flex alignItems=\"center\" justifyContent=\"center\">\r\n                      <Box height=\"70vh\" />\r\n                      <Box\r\n                        p={2}\r\n                        m={0}\r\n                        width=\"620px\"\r\n                        bg=\"bg\"\r\n                        border=\"1px solid\"\r\n                        borderColor=\"oline\"\r\n                        borderRadius=\"base\"\r\n                      >\r\n                        <SentenceEditor\r\n                          rule={rule}\r\n                          index={modalEditingIndex}\r\n                          active={active}\r\n                          modalEditingInput={modalEditingInput}\r\n                          updateRule={this.updateRule}\r\n                        />\r\n                      </Box>\r\n                    </Flex>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n\r\n              <Box p={4}>\r\n                <div style={fullheight}>\r\n                  <Text\r\n                    variant=\"heading\"\r\n                    style={{\r\n                      fontSize: '3rem',\r\n                    }}\r\n                  >\r\n                    Prototype Editor v0.4-1\r\n                  </Text>\r\n                  <Box padding={2} />\r\n                  {/* Rule Name */}\r\n\r\n                  <RuleNameSection rule={rule} updateRule={this.updateRule} active={active} />\r\n\r\n                  {/* Metadata Management */}\r\n                  {/* Metadata Management */}\r\n                  {/* Metadata Management */}\r\n                  {/* Metadata Management */}\r\n                  {/* Metadata Management */}\r\n                  {/* Metadata Management */}\r\n\r\n                  <MetadataManagementSection\r\n                    rule={rule}\r\n                    updateRule={this.updateRule}\r\n                    active={active}\r\n                  />\r\n\r\n                  {/* Input sources */}\r\n                  {/* Input sources */}\r\n                  {/* Input sources */}\r\n                  {/* Input sources */}\r\n                  {/* Input sources */}\r\n                  {/* Input sources */}\r\n\r\n                  <Text variant=\"heading\">Input: Sources</Text>\r\n                  <Box padding={1} />\r\n                  <Box>\r\n                    <div>\r\n                      <Box\r\n                        p={2}\r\n                        m={0}\r\n                        width={1}\r\n                        bg=\"bg\"\r\n                        border=\"1px solid\"\r\n                        borderColor=\"oline\"\r\n                        borderRadius=\"base\"\r\n                      >\r\n                        <FormStandard\r\n                          name=\"Field Name\"\r\n                          description=\"hello world is asking the following things\"\r\n                        />\r\n                        <FormStandard\r\n                          name=\"Target  Value\"\r\n                          description=\"hello world is asking the following things\"\r\n                        />\r\n                        <Box padding={1} />\r\n                        <Addbutton />\r\n                        <Box padding={3} />\r\n                        <FormStandardDropdown\r\n                          name=\"Unique Identifier\"\r\n                          description=\"Text input description.\"\r\n                          nameTwo=\"Standard Role Name\"\r\n                          descriptionTwo=\"Dropdown input description.\"\r\n                          options={[\r\n                            { value: 'justice', label: 'Justice' },\r\n                            { value: 'peace', label: 'Peace' },\r\n                            { value: 'no justice', label: 'No Justice' },\r\n                            { value: 'no peace', label: 'No Peace' },\r\n                          ]}\r\n                        />\r\n                      </Box>\r\n                      <Box padding={1} />\r\n                      <Box\r\n                        p={2}\r\n                        m={0}\r\n                        width={1}\r\n                        bg=\"bg\"\r\n                        border=\"1px solid\"\r\n                        borderColor=\"oline\"\r\n                        borderRadius=\"base\"\r\n                      >\r\n                        <Addbutton />\r\n                      </Box>\r\n                      <Box padding={1} />\r\n                      <Flex justifyContent=\"flex-end\">\r\n                        <Box />\r\n                        {/* the modal button will go here */}\r\n                      </Flex>\r\n                    </div>\r\n                  </Box>\r\n                  <Box padding={2} />\r\n\r\n                  {/* Input Contexts */}\r\n                  {/* Input Contexts */}\r\n                  {/* Input Contexts */}\r\n                  {/* Input Contexts */}\r\n                  {/* Input Contexts */}\r\n                  {/* Input Contexts */}\r\n\r\n                  <Text variant=\"heading\">Input: Contexts</Text>\r\n\r\n                  <Box>\r\n                    <div>\r\n                      <Box padding={1} />\r\n                      <TwoFieldModule\r\n                        title=\"Jurisdictions\"\r\n                        fielda=\"Country Jurisdiction\"\r\n                        descriptiona=\"Detail Lorem Ipsum\"\r\n                        fieldb=\"Sub-Country Jurisdiction\"\r\n                        descriptionb=\"Detail Lorem Ipsum\"\r\n                      />\r\n                      <Box\r\n                        p={2}\r\n                        m={0}\r\n                        width={1}\r\n                        bg=\"bg\"\r\n                        border=\"1px solid\"\r\n                        borderColor=\"oline\"\r\n                        borderRadius=\"base\"\r\n                      >\r\n                        <Addbutton onClick={() => {}} content=\"Add Jurisdiction\" />\r\n                      </Box>\r\n                      <Box padding={1} />\r\n                      <FormStandardDouble\r\n                        name=\"Start Date and Time \"\r\n                        description=\"hello world is asking the following things\"\r\n                        nameTwo=\"End Date and Time\"\r\n                        descriptionTwo=\"hello world is asking the following things\"\r\n                      />\r\n                      <Box padding={1} />\r\n                      <FormDropdown\r\n                        name=\"Time Zone\"\r\n                        description=\"hello world is asking the following things\"\r\n                        options={[\r\n                          { value: 'UTC−12:00', label: 'UTC−12:00' },\r\n                          { value: 'UTC−11:00', label: 'UTC−11:00' },\r\n                          { value: 'UTC−10:00', label: 'UTC−10:00' },\r\n                          { value: 'UTC−09:30', label: 'UTC−09:30' },\r\n                          { value: 'UTC−09:00', label: 'UTC−09:00' },\r\n                          { value: 'UTC−08:00', label: 'UTC−08:00' },\r\n                          { value: 'UTC−07:00', label: 'UTC−07:00' },\r\n                          { value: 'UTC−06:00', label: 'UTC−06:00' },\r\n                          { value: 'UTC−05:00', label: 'UTC−05:00' },\r\n                          { value: 'UTC−04:00', label: 'UTC−04:00' },\r\n                          { value: 'UTC−03:30', label: 'UTC−03:30' },\r\n                          { value: 'UTC−03:00', label: 'UTC−03:00' },\r\n                          { value: 'UTC−02:00', label: 'UTC−02:00' },\r\n                          { value: 'UTC−01:00', label: 'UTC−01:00' },\r\n                          { value: 'UTC±00:00', label: 'UTC±00:00' },\r\n                          { value: 'UTC+01:00', label: 'UTC+01:00' },\r\n                          { value: 'UTC+02:00', label: 'UTC+02:00' },\r\n                          { value: 'UTC+03:00', label: 'UTC+03:00' },\r\n                          { value: 'UTC+03:30', label: 'UTC+03:30' },\r\n                          { value: 'UTC+04:00', label: 'UTC+04:00' },\r\n                          { value: 'UTC+04:30', label: 'UTC+04:30' },\r\n                          { value: 'UTC+05:00', label: 'UTC+05:00' },\r\n                          { value: 'UTC+05:30', label: 'UTC+05:30' },\r\n                          { value: 'UTC+05:45', label: 'UTC+05:45' },\r\n                          { value: 'UTC+06:00', label: 'UTC+06:00' },\r\n                          { value: 'UTC+06:30', label: 'UTC+06:30' },\r\n                          { value: 'UTC+07:00', label: 'UTC+07:00' },\r\n                          { value: 'UTC+08:00', label: 'UTC+08:00' },\r\n                          { value: 'UTC+08:45', label: 'UTC+08:45' },\r\n                          { value: 'UTC+09:00', label: 'UTC+09:00' },\r\n                          { value: 'UTC+09:30', label: 'UTC+09:30' },\r\n                          { value: 'UTC+10:00', label: 'UTC+10:00' },\r\n                          { value: 'UTC+10:30', label: 'UTC+10:30' },\r\n                          { value: 'UTC+11:00', label: 'UTC+11:00' },\r\n                          { value: 'UTC+12:00', label: 'UTC+12:00' },\r\n                          { value: 'UTC+12:45', label: 'UTC+12:45' },\r\n                          { value: 'UTC+13:00', label: 'UTC+13:00' },\r\n                          { value: 'UTC+14:00', label: 'UTC+14:00' },\r\n                        ]}\r\n                      />\r\n                      <Box padding={1} />\r\n                      <Flex justifyContent=\"flex-end\">\r\n                        <Box />\r\n                        {/* the modal button will go here */}\r\n                      </Flex>\r\n                    </div>\r\n                  </Box>\r\n                  <Box padding={2} />\r\n\r\n                  {/* Input filters */}\r\n                  {/* Input filters */}\r\n                  {/* Input filters */}\r\n                  {/* Input filters */}\r\n                  {/* Input filters */}\r\n                  {/* Input filters */}\r\n\r\n                  <Text variant=\"heading\">Input: Filters</Text>\r\n                  <Box padding={1} />\r\n                  <Box>\r\n                    <div>\r\n                      {sampleInvolvedParties.map((val, key) => (\r\n                        <InvolvedParty key={key} />\r\n                      ))}\r\n                      <Box\r\n                        p={2}\r\n                        m={0}\r\n                        width={1}\r\n                        bg=\"bg\"\r\n                        border=\"1px solid\"\r\n                        borderColor=\"oline\"\r\n                        borderRadius=\"base\"\r\n                      >\r\n                        <Addbutton\r\n                          onClick={() => {\r\n                            const parties = sampleInvolvedParties;\r\n                            const last = parties[parties.length];\r\n                            parties.push(last + 1);\r\n                            this.setState({ sampleInvolvedParties: parties });\r\n                          }}\r\n                          content=\"Add Involved Party\"\r\n                        />\r\n                      </Box>\r\n                      <Box padding={1} />\r\n                      <TwoFieldModule\r\n                        title=\"Involved Product or Service\"\r\n                        fielda=\"UNSPSC Product or Service Name\"\r\n                        descriptiona=\"Detail Lorem Ipsum\"\r\n                        fieldb=\"UNSPSC Product or Service Code\"\r\n                        descriptionb=\"Detail Lorem Ipsum\"\r\n                      />\r\n                      <Box padding={1} />\r\n                      <Box\r\n                        p={2}\r\n                        m={0}\r\n                        width={1}\r\n                        bg=\"bg\"\r\n                        border=\"1px solid\"\r\n                        borderColor=\"oline\"\r\n                        borderRadius=\"base\"\r\n                      >\r\n                        <Addbutton\r\n                          onClick={() => {\r\n                            const parties = sampleInvolvedParties;\r\n                            const last = parties[parties.length];\r\n                            parties.push(last + 1);\r\n                            this.setState({ sampleInvolvedParties: parties });\r\n                          }}\r\n                          content=\"Add Involved Party\"\r\n                        />\r\n                      </Box>\r\n                      <Box padding={1} />\r\n                      <Flex justifyContent=\"flex-end\">\r\n                        <Box />\r\n                        {/* the modal button will go here */}\r\n                      </Flex>\r\n                    </div>\r\n                  </Box>\r\n                  <Box padding={2} />\r\n\r\n                  {/* Input Output Table */}\r\n                  {/* Input Output Table */}\r\n                  {/* Input Output Table */}\r\n                  {/* Input Output Table */}\r\n                  {/* Input Output Table */}\r\n                  {/* Input Output Table */}\r\n\r\n                  <Text variant=\"heading\">Input Tables</Text>\r\n                  <Box>\r\n                    <div style={overflowTable}>\r\n                      <div style={bottomLine}>\r\n                        <Flex alignItems=\"center\">\r\n                          <div style={halfWidth}>\r\n                            <Flex>\r\n                              <Text variant=\"formtitle\">When</Text>\r\n                              <Box padding={1} />\r\n                              <Text>Input Conditions</Text>\r\n                            </Flex>\r\n                          </div>\r\n                          <Box>\r\n                            <Flex>\r\n                              {/* Input Conditions/Output Assertions Case Headings */}\r\n                              {rule.input_conditions[0].cases.map((rowValue, i) => {\r\n                                return (\r\n                                  <div style={ruleLeft} key={i}>\r\n                                    <Button\r\n                                      variant=\"invisible\"\r\n                                      onClick={() => {\r\n                                        toast('Unimplemented.');\r\n                                      }}\r\n                                    >\r\n                                      <ColumnLabel rowLabel={rowValue.case || '?'} />\r\n                                    </Button>\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                              <div style={ruleLeftalt} />\r\n                            </Flex>\r\n                          </Box>\r\n                          <div style={rowWidth}>\r\n                            <Button variant=\"invisible\" onClick={this.addCase}>\r\n                              <Icon\r\n                                name=\"additional\"\r\n                                fill=\"#345FF9\"\r\n                                size={32}\r\n                                viewbox_x={32}\r\n                                viewbox_y={32}\r\n                              />\r\n                            </Button>\r\n                          </div>\r\n                        </Flex>\r\n                      </div>\r\n\r\n                      {/* Input Conditions Data */}\r\n                      {rule.input_conditions.map((val, key) => (\r\n                        <Box key={key}>\r\n                          <InputOutputRow\r\n                            rowData={val}\r\n                            rule={rule}\r\n                            updateRule={this.updateRule}\r\n                            editRow={this.editInputCondition}\r\n                            index={key}\r\n                            inputCondition\r\n                          />\r\n                        </Box>\r\n                      ))}\r\n\r\n                      <Flex alignItems=\"center\">\r\n                        <div style={halfWidth}>\r\n                          <Addbutton\r\n                            onClick={() => {\r\n                              /* This function must add a new Input Condition */\r\n                              this.updateRule(addNewInputCondition(rule));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <BlankRows rule={rule} ruleLeft={ruleLeft} />\r\n                        <div style={rowWidth} />\r\n                      </Flex>\r\n                      <Flex alignItems=\"center\">\r\n                        <div style={halfWidth} />\r\n                        <BlankRows rule={rule} ruleLeft={ruleLeft} />\r\n                      </Flex>\r\n                      <div style={bottomLine}>\r\n                        <Flex alignItems=\"center\">\r\n                          <div style={halfWidth}>\r\n                            <Flex>\r\n                              <Text variant=\"formtitle\">Then</Text>\r\n                              <Box padding={1} />\r\n                              <Text>Output Assertions</Text>\r\n                            </Flex>\r\n                          </div>\r\n                          <BlankRows rule={rule} ruleLeft={ruleLeft} />\r\n                        </Flex>\r\n                      </div>\r\n                      {rule.output_assertions.map((val, key) => (\r\n                        <Box key={key}>\r\n                          <InputOutputRow\r\n                            rowData={val}\r\n                            rule={rule}\r\n                            updateRule={this.updateRule}\r\n                            editRow={this.editOutputAssertion}\r\n                            index={key}\r\n                            inputCondition={false}\r\n                          />\r\n                        </Box>\r\n                      ))}\r\n                      <Flex alignItems=\"center\">\r\n                        <div style={halfWidth}>\r\n                          <Addbutton\r\n                            onClick={() => {\r\n                              /* Must add a new output assertion. */\r\n                              this.updateRule(addNewOutputAssertion(rule));\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <BlankRows rule={rule} ruleLeft={ruleLeft} />\r\n                      </Flex>\r\n                      <Box padding={1} />\r\n                      <Box padding={1} />\r\n                      <Flex justifyContent=\"flex-end\">{/* the modal button will go here */}</Flex>\r\n                    </div>\r\n                  </Box>\r\n                  <Box padding={2} />\r\n\r\n                  {/* output purpose */}\r\n                  {/* output purpose */}\r\n                  {/* output purpose */}\r\n                  {/* output purpose */}\r\n                  {/* output purpose */}\r\n                  {/* output purpose */}\r\n\r\n                  <Text variant=\"heading\">Output Purpose</Text>\r\n                  <Box>\r\n                    <div>\r\n                      <FormDropdownDouble\r\n                        name=\"Who has responsibility for conformance?\"\r\n                        description=\"Who has responsibility for conformance?\"\r\n                        options={[\r\n                          { value: 'rule-maker', label: 'rule-maker' },\r\n                          { value: 'rule-taker', label: 'rule-taker' },\r\n                          { value: 'third-party', label: 'third-party' },\r\n                        ]}\r\n                        nameTwo=\"What is the primary verb?\"\r\n                        descriptionTwo=\"What is the primary normative (deontic; modal) verb?\"\r\n                        optionsTwo={[\r\n                          { valueTwo: 'must', labelTwo: 'must' },\r\n                          { valueTwo: 'may', labelTwo: 'may' },\r\n                          { valueTwo: 'should', labelTwo: 'should' },\r\n                        ]}\r\n                      />\r\n                      <Box padding={1} />\r\n                      <FormDropdownDouble\r\n                        name=\"What is the nature of the primary verb\"\r\n                        description=\"Is the primary modal verb stated in the affirmative; negative or as a question?\"\r\n                        options={[\r\n                          { value: 'affirmative', label: 'affirmative' },\r\n                          { value: 'negative', label: 'negative' },\r\n                          { value: 'interrogative', label: 'interrogative' },\r\n                        ]}\r\n                        nameTwo=\"What is the primary action verb?\"\r\n                        descriptionTwo=\"What is the primary action verb?\"\r\n                        optionsTwo={[\r\n                          { valueTwo: 'be', labelTwo: 'be' },\r\n                          { valueTwo: 'do', labelTwo: 'do' },\r\n                          { valueTwo: 'have', labelTwo: 'have' },\r\n                        ]}\r\n                      />\r\n                      <Box padding={1} />\r\n                      <FormDropdownDouble\r\n                        name=\"What is the type of philosophical rationale?\"\r\n                        description=\"What is the principal type of philosophical rationale for this rule?\"\r\n                        options={[\r\n                          { value: 'logical', label: 'logical' },\r\n                          { value: 'practical', label: 'practical' },\r\n                          { value: 'ethical', label: 'ethical' },\r\n                        ]}\r\n                        nameTwo=\"What is the nature of this rule?\"\r\n                        descriptionTwo=\"Is this a directly implemented rule, a desription of a rule to be conformed with, or an empirical\r\n                    fact about a rule?\"\r\n                        optionsTwo={[\r\n                          { valueTwo: 'imperative', labelTwo: 'imperative' },\r\n                          { valueTwo: 'declarative', labelTwo: 'declarative' },\r\n                          { valueTwo: 'empirical', labelTwo: 'empirical' },\r\n                        ]}\r\n                      />\r\n                      <Box padding={1} />\r\n                      <Flex justifyContent=\"flex-end\">{/* the modal button will go here */}</Flex>\r\n                    </div>\r\n                  </Box>\r\n                  <Box padding={2} />\r\n\r\n                  {/* Qualitative wieghts */}\r\n                  {/* Qualitative wieghts */}\r\n                  {/* Qualitative wieghts */}\r\n                  {/* Qualitative wieghts */}\r\n                  {/* Qualitative wieghts */}\r\n                  {/* Qualitative wieghts */}\r\n\r\n                  <Text variant=\"heading\">Output: Qualitative Weights</Text>\r\n\r\n                  <Box>\r\n                    <div>\r\n                      <FormDropdown\r\n                        name=\"Select the rule group that most applies.\"\r\n                        description=\"hello world is asking the following things\"\r\n                        options={[\r\n                          {\r\n                            value: 'Informal Custom or Preference',\r\n                            label: 'Informal Custom or Preference',\r\n                          },\r\n                          {\r\n                            value: 'Formal Custom Without Legal Standing',\r\n                            label: 'Formal Custom Without Legal Standing',\r\n                          },\r\n                          {\r\n                            value: 'Guideline, Instruction, or Policy',\r\n                            label: 'Guideline, Instruction, or Policy',\r\n                          },\r\n                          { value: 'Code of Conduct', label: 'Code of Conduct' },\r\n                          { value: 'Regulation or Directive', label: 'Regulation or Directive' },\r\n                          { value: 'Common Law or Case Law', label: 'Common Law or Case Law' },\r\n                          { value: 'Statute or Legislation', label: 'Statute or Legislation' },\r\n                          { value: 'International Law', label: 'International Law' },\r\n                          { value: 'Operational Patern', label: 'Operational Pattern' },\r\n                        ]}\r\n                      />\r\n                      <Box padding={2} />\r\n                      <FormSlider\r\n                        name=\"Character of this Obligation\"\r\n                        description=\"lorem ipsum\"\r\n                        labela=\"Basic Coherence\"\r\n                        labelb=\"Strongly Beneficial\"\r\n                        labelc=\"Absolutely Essential\"\r\n                      />\r\n                      <Box padding={2} />\r\n                      <FormSlider\r\n                        name=\"Enforcement Measures in Place\"\r\n                        description=\"lorem ipsum\"\r\n                        labela=\"Minor Penalties\"\r\n                        labelb=\"Significant Penalties\"\r\n                        labelc=\"Major Penalties\"\r\n                      />\r\n                      <Box padding={2} />\r\n                      <FormSlider\r\n                        name=\"Consequences of Non-Conformance \"\r\n                        description=\"lorem ipsum\"\r\n                        labela=\"Preference Only\"\r\n                        labelb=\"Significant Effects\"\r\n                        labelc=\"Enormous Impacts\"\r\n                      />\r\n                      <Box p={1} />\r\n                      <Box padding={1} />\r\n                      <Flex justifyContent=\"flex-end\">\r\n                        <Box />\r\n                        {/* the modal button will go here */}\r\n                      </Flex>\r\n                    </div>\r\n                  </Box>\r\n                  <Box padding={2} />\r\n                </div>\r\n              </Box>\r\n              {/* End of the editor */}\r\n            </div>\r\n          ) : (\r\n            <div style={{}}>\r\n              <div\r\n                style={{\r\n                  width: '100%',\r\n                  margin: '3rem 3rem',\r\n                }}\r\n              >\r\n                <ClockLoader size={50} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </EditorLeft>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\n\r\n// import { navigate } from '@reach/router';\r\n\r\nimport {\r\n  deepCopy,\r\n  generateNewRule,\r\n  addNewCase,\r\n  addNewInputCondition,\r\n  addNewOutputAssertion,\r\n} from 'xalgo-rule-processor';\r\nimport EditorLeft from './editor-layouts/EditorLeft';\r\nimport ColumnLabel from '../components/patterns/ColumnLabel';\r\nimport {\r\n  Box,\r\n  Text,\r\n  Flex,\r\n  Button,\r\n  Addbutton,\r\n  InputOutputRow,\r\n  SentenceEditor,\r\n  Icon,\r\n  Grid,\r\n} from '../components';\r\n\r\nimport {\r\n  BlankRows,\r\n  NameDescription,\r\n  Metadata,\r\n  RuleAuthor,\r\n  RuleManager,\r\n  InputSources,\r\n  RuleMaintainer,\r\n  DataSource,\r\n  Time,\r\n  StandardRoleName,\r\n  InvolvedProduct,\r\n  OutputPurpose,\r\n  QualitativeWeights,\r\n  Entity,\r\n} from './editor-components';\r\nimport { ClockLoader } from 'react-spinners';\r\nimport { enforceSchemaWithTables } from 'xalgo-rule-processor/dist/processing';\r\nimport { RuleSchema } from 'xalgo-rule-processor/dist/schema';\r\nimport { objectEmpty } from 'xalgo-rule-processor/dist/utilities';\r\n\r\nimport { downloadRule } from './Dashboard';\r\n\r\naxiosRetry(Axios, { retries: 5, retryDelay: axiosRetry.exponentialDelay });\r\n\r\nconst alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\nconst fullheight = {\r\n  minHeight: '80vh',\r\n  minWidth: '500px',\r\n  maxWidth: 'calc(100% - 90px)',\r\n  // overflowX:\r\n};\r\n\r\nconst constrainWidth = {\r\n  maxWidth: '100%',\r\n};\r\n\r\nconst overflowTable = {\r\n  width: '100%',\r\n  overflowX: 'scroll',\r\n};\r\n\r\nconst ruleLeft = {\r\n  borderLeft: '1px solid #E7E7E7',\r\n  padding: '1em',\r\n  borderBottom: '1px solid #E7E7E7',\r\n};\r\n\r\nconst ruleLeftOnly = {\r\n  borderLeft: '1px solid #E7E7E7',\r\n  padding: '1em',\r\n};\r\n\r\nconst ruleLeftalt = {\r\n  borderLeft: '1px solid #E7E7E7',\r\n  padding: '0.75em',\r\n  borderBottom: '1px solid #E7E7E7',\r\n};\r\n\r\nconst halfWidth = {\r\n  minWidth: '500px',\r\n  borderBottom: '1px solid #E7E7E7',\r\n};\r\n\r\nconst halfWidthOnly = {\r\n  minWidth: '500px',\r\n};\r\n\r\nconst rowWidth = {\r\n  width: 'auto',\r\n  borderBottom: '1px solid #E7E7E7',\r\n};\r\n\r\nconst fixpos = {\r\n  position: 'sticky',\r\n  top: '88px',\r\n  width: '100%',\r\n};\r\n\r\nconst modalhold = {\r\n  position: 'sticky',\r\n  height: '90vh',\r\n  background: 'rgba(255, 255, 255, .8)',\r\n  marginBottom: '-90vh',\r\n};\r\n\r\nconst column = {\r\n  width: '160px',\r\n};\r\n\r\nconst heightAdjust = {\r\n  height: '38px',\r\n  width: '0px',\r\n};\r\n\r\nconst topguide = {\r\n  position: 'fixed',\r\n  padding: '2em',\r\n  background: '#F9FBFE',\r\n  width: '100%',\r\n  zIndex: '1',\r\n};\r\n\r\n// This empty rule is the schema without any __descriptions.\r\n// Temporarily start with three cases.\r\nconst emptyRule = generateNewRule();\r\n/**\r\n * ================\r\n * The Editor Class\r\n * ================\r\n *\r\n * The Editor component is the parent of all editing views, and is the\r\n * master source of information regarding the state of the rule.\r\n */\r\nexport default class EditorV2 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rule: deepCopy(emptyRule),\r\n      sampleInvolvedParties: [1],\r\n      active: false,\r\n      modalOpen: false,\r\n      modalEditingInput: false,\r\n      modalEditingIndex: 0,\r\n      rule_loaded: false,\r\n      uuid: '',\r\n      primary_content_uuid: '',\r\n      collapse: false,\r\n    };\r\n\r\n    this.getRuleFromStorage = this.getRuleFromStorage.bind(this);\r\n    this.updateRule = this.updateRule.bind(this);\r\n\r\n    // reset delete persist\r\n    this.resetRule = this.resetRule.bind(this);\r\n    this.deleteRule = this.deleteRule.bind(this);\r\n    this.persistRuleToStorage = this.persistRuleToStorage.bind(this);\r\n\r\n    // Sentence editing\r\n    this.editSentence = this.editSentence.bind(this);\r\n    this.editInputCondition = this.editInputCondition.bind(this);\r\n    this.editOutputAssertion = this.editOutputAssertion.bind(this);\r\n    this.addCase = this.addCase.bind(this);\r\n\r\n    this.enforceRuleJSONSchema = this.enforceRuleJSONSchema.bind(this);\r\n\r\n    this.handleCollapse = this.handleCollapse.bind(this);\r\n    this.handleExpand = this.handleExpand.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('EditorV2::componentDidMount()');\r\n    this.getRuleFromStorage();\r\n  }\r\n\r\n  //table collapse\r\n\r\n  handleCollapse() {\r\n    console.log('EditorV2::handleCollapse()');\r\n    this.setState({ collapse: false });\r\n  }\r\n\r\n  handleExpand() {\r\n    console.log('EditorV2::handleExpand()');\r\n    this.setState({ collapse: true });\r\n  }\r\n\r\n  /**\r\n   * ==============================================\r\n   * Class Functions, mostly for editing rule state\r\n   * ==============================================\r\n   */\r\n\r\n  enforceRuleJSONSchema(new_rule_body, warn = false) {\r\n    console.log('EditorV2::enforceRuleJSONSchema()');\r\n    try {\r\n      console.log('Enforcing rule schema...');\r\n      let enforced_body = enforceSchemaWithTables(RuleSchema, new_rule_body);\r\n      return enforced_body;\r\n    } catch (e) {\r\n      if (warn) {\r\n        toast.warning('Warning: Rule did not pass schema checks.');\r\n      }\r\n      console.error(e);\r\n      return new_rule_body;\r\n    }\r\n  }\r\n\r\n  getRuleFromStorage() {\r\n    console.log('EditorV2::getRuleFromStorage()');\r\n    console.log(`Loading rule ${this.props.ruleUUID} using editor version v0.4-2`);\r\n    let rule_data = {};\r\n    let content_data = {};\r\n\r\n    function ruleDownloadError(error) {\r\n      console.log('EditorV2::ruleDownloadError()');\r\n      console.error(error);\r\n      toast.error(\r\n        'You may not have access to this rule, or it does not exist within the database.'\r\n      );\r\n    }\r\n\r\n    // Wait 100ms to ensure rule can be pulled from DB.\r\n    setTimeout(() => {\r\n      console.log('Fetching rule from backend...');\r\n\r\n      // First axios request to get UUID for rule body.\r\n      Axios.get(`/rules/rule/${this.props.ruleUUID}/`, {\r\n        headers: {\r\n          'X-CSRFToken': this.props.token,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log('Got rule from UUID:');\r\n          rule_data = res.data;\r\n          console.log(rule_data);\r\n          // Second request to get rule body (stored as primary_content in rule)\r\n          Axios.get(`/rules/content/${rule_data.primary_content}/`, {\r\n            headers: {\r\n              'X-CSRFToken': this.props.token,\r\n            },\r\n          })\r\n            .then((res) => {\r\n              content_data = res.data;\r\n              console.log('Got body from content UUID:');\r\n              console.log(content_data.body);\r\n              const keys = Object.keys(content_data.body);\r\n              console.log('Rule has keys:');\r\n              console.log(keys);\r\n\r\n              console.log('Checking rule body...');\r\n              if (objectEmpty(content_data.body)) {\r\n                toast('Body is empty, adding blank rule content.');\r\n              }\r\n\r\n              let body_enforced = this.enforceRuleJSONSchema(content_data.body);\r\n\r\n              this.setState(\r\n                { rule_loaded: true, uuid: this.props.ruleUUID, primary_content_uuid: res.data.id },\r\n                () => {\r\n                  this.updateRule(body_enforced);\r\n                }\r\n              );\r\n            })\r\n            .catch((e) => {\r\n              ruleDownloadError(e);\r\n            });\r\n        })\r\n        .catch((e) => {\r\n          ruleDownloadError(e);\r\n        });\r\n    }, 100);\r\n  }\r\n\r\n  updateRule(content, force = false) {\r\n    console.log('EditorV2::updateRule()');\r\n    if (!content) {\r\n      console.log('No content was provided to update the rule with.');\r\n      return false;\r\n    }\r\n\r\n    let newRuleContent = content;\r\n    console.log('Editor.jsx: Updating Rule Content:');\r\n    console.log(newRuleContent);\r\n\r\n    if (newRuleContent.input_conditions.length === 0)\r\n      newRuleContent = addNewInputCondition(newRuleContent);\r\n\r\n    if (newRuleContent.output_assertions.length === 0)\r\n      newRuleContent = addNewOutputAssertion(newRuleContent);\r\n\r\n    // Perform checks on rule to ensure content is good.\r\n    if (newRuleContent.input_conditions[0].cases[0].case === '') {\r\n      console.log('Adding a case to the cases.');\r\n      newRuleContent.input_conditions[0].cases[0].case = alphabet.charAt(0);\r\n    }\r\n\r\n    let body_enforced = this.enforceRuleJSONSchema(newRuleContent);\r\n\r\n    // Check if equal\r\n    if (\r\n      force ||\r\n      JSON.stringify(this.state.rule, null, 1) !== JSON.stringify(body_enforced, null, 1)\r\n    ) {\r\n      console.log('EditorV2::updateRule() -> Change in rule content detected, saving to server...');\r\n      // Finally, save.\r\n      this.setState({ active: false, rule: body_enforced }, () => {\r\n        this.setState({ active: true, modalOpen: false }, () => {\r\n          this.persistRuleToStorage();\r\n        });\r\n      });\r\n    } else {\r\n      console.log('EditorV2::updateRule() -> No change in rule content detected.');\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  resetRule() {\r\n    console.log('EditorV2::resetRule()');\r\n    if (window.confirm(`Are you sure you'd like to RESET Rule ${this.state.uuid}?`)) {\r\n      this.updateRule(deepCopy(emptyRule), true);\r\n      toast.warning('Rule reset!');\r\n      this.props.navigate(`/apps/rm/editor/${this.state.uuid}`);\r\n    }\r\n  }\r\n\r\n  deleteRule() {\r\n    console.log('EditorV2::deleteRule()');\r\n    if (window.confirm(`Are you sure you'd like to DELETE Rule ${this.state.uuid}?`)) {\r\n      toast.error('Unimplemented.');\r\n    }\r\n  }\r\n\r\n  persistRuleToStorage(showmsg = false) {\r\n    console.log('EditorV2::persistRuleToStorage()');\r\n    let body_enforced = this.enforceRuleJSONSchema(this.state.rule, showmsg);\r\n    console.log('Enforced body:');\r\n    console.log(body_enforced);\r\n    console.log('Running an AXIOS PATCH operation to update rule content...');\r\n    Axios.patch(\r\n      `/rules/content/${this.state.primary_content_uuid}/`,\r\n      {\r\n        body: body_enforced,\r\n      },\r\n      {\r\n        headers: {\r\n          'X-CSRFToken': this.props.token,\r\n        },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        console.log('Data pushed to backend successfully.');\r\n        if (showmsg) toast(`Content UUID ${res.data.id} was saved successfully.`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`The rule was not saved, please reload.`);\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * ===========================\r\n   * Functions for Editing Cases\r\n   * ===========================\r\n   */\r\n\r\n  editInputCondition(key) {\r\n    console.log('EditorV2::editInputCondition()');\r\n    this.editSentence(key, true);\r\n  }\r\n\r\n  editOutputAssertion(key) {\r\n    console.log('EditorV2::editOutputAssertion()');\r\n    this.editSentence(key, false);\r\n  }\r\n\r\n  editSentence(key, inputConditions = false) {\r\n    console.log('EditorV2::editSentence()');\r\n    this.setState({\r\n      modalOpen: true,\r\n      modalEditingInput: inputConditions,\r\n      modalEditingIndex: key,\r\n    });\r\n  }\r\n\r\n  addCase() {\r\n    console.log('EditorV2::addCase()');\r\n    this.updateRule(addNewCase(this.state.rule), true);\r\n  }\r\n\r\n  /**\r\n   * ==================================\r\n   * Rendering Method, end of functions\r\n   * ==================================\r\n   *\r\n   * I've tried to move as many parts of this as possible into functional\r\n   * components, which are included after this class. Those which could not\r\n   * should be moved in the future.\r\n   */\r\n\r\n  render() {\r\n    console.log('EditorV2::render()');\r\n    const {\r\n      rule,\r\n      //SampleInvolvedParties,\r\n      active,\r\n      modalOpen,\r\n      modalEditingIndex,\r\n      modalEditingInput,\r\n      collapse,\r\n    } = this.state;\r\n\r\n    //const collapse = true;\r\n\r\n    return (\r\n      <div>\r\n        <EditorLeft\r\n          title={rule.metadata.rule.title}\r\n          description={rule.metadata.rule.description}\r\n          deleteFunction={this.deleteRule}\r\n          resetFunction={this.resetRule}\r\n          saveFunction={this.persistRuleToStorage}\r\n          rule={rule}\r\n          downloadRule={downloadRule}\r\n          csrfToken={this.props.token}\r\n        />\r\n        <div style={topguide}>\r\n          <Flex>\r\n            {this.state.rule_loaded ? (\r\n              <Flex>\r\n                <Text variant=\"formtitle\">{rule.metadata.rule.title}</Text>\r\n                <Box p={2} />\r\n                <Text>\r\n                  <Button\r\n                    variant=\"invisible\"\r\n                    onClick={() => {\r\n                      downloadRule(rule.uuid, this.props.token);\r\n                    }}\r\n                  >\r\n                    <code>{rule.uuid}</code>\r\n                  </Button>\r\n                </Text>\r\n                <Box p={1} />\r\n              </Flex>\r\n            ) : (\r\n              <Flex>\r\n                <Text>Loading...</Text>\r\n              </Flex>\r\n            )}\r\n          </Flex>\r\n        </div>\r\n        {this.state.rule_loaded ? (\r\n          <div>\r\n            {/* Modal used by input/output tables. */}\r\n            {modalOpen ? (\r\n              <div style={fixpos}>\r\n                <Box p={4} bg=\"#fff\">\r\n                  <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <div>\r\n                      <Box padding=\"0.2em\" />\r\n                      <Text variant=\"formtitle\">{rule.metadata.rule.name}</Text>\r\n                    </div>\r\n                  </Flex>\r\n                </Box>\r\n                <div style={modalhold}>\r\n                  <Flex alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box height=\"70vh\" />\r\n                    <Box\r\n                      p={2}\r\n                      m={0}\r\n                      width=\"620px\"\r\n                      bg=\"bg\"\r\n                      border=\"1px solid\"\r\n                      borderColor=\"oline\"\r\n                      borderRadius=\"base\"\r\n                    >\r\n                      <SentenceEditor\r\n                        rule={rule}\r\n                        index={modalEditingIndex}\r\n                        active={active}\r\n                        modalEditingInput={modalEditingInput}\r\n                        updateRule={this.updateRule}\r\n                      />\r\n                    </Box>\r\n                  </Flex>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n\r\n            <Box p={4}>\r\n              {/* ================================================================ */}\r\n              {/* ================================================================ */}\r\n              {/* ================================================================ */}\r\n\r\n              <div style={fullheight}>\r\n                <div style={constrainWidth}>\r\n                  {/* ================================================================ */}\r\n                  {/* Rule Name */}\r\n                  {/* Rule Name */}\r\n                  {/* Rule Name */}\r\n                  {/* Rule Name */}\r\n\r\n                  <Box p={4}></Box>\r\n                  <Text variant=\"subtitle\">About the Rule</Text>\r\n                  <Box p={2}></Box>\r\n\r\n                  <Grid gridTemplateColumns=\"33% 33% 33%\" gridGap=\"2em\">\r\n                    <Box gridArea=\"1 / 1 / 2 / 3\">\r\n                      <NameDescription rule={rule} updateRule={this.updateRule} active={active} />\r\n                    </Box>\r\n                    <Box gridArea=\"2 / 1 / 3 / 2\">\r\n                      <Metadata rule={rule} updateRule={this.updateRule} active={active} />\r\n                    </Box>\r\n                    <Box gridArea=\"2 / 2 / 3 / 3\">\r\n                      <Entity rule={rule} updateRule={this.updateRule} active={active} />\r\n                      <Addbutton content=\"Rule Maintainer\" />\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  {/* ================================================================ */}\r\n                  {/* Rule Manager */}\r\n                  {/* Rule Manager */}\r\n                  {/* Rule Manager */}\r\n                  {/* Rule Manager */}\r\n\r\n                  <Box p={4}></Box>\r\n                  <Text variant=\"subtitle\">Management, Authorship & Maintenance</Text>\r\n                  <Box p={2}></Box>\r\n\r\n                  <Grid gridTemplateColumns=\"33% 33% 33%\" gridGap=\"2em\">\r\n                    <div>\r\n                      <RuleManager rule={rule} updateRule={this.updateRule} active={active} />\r\n                      <Addbutton content=\"Rule Manager\" />\r\n                    </div>\r\n                    <div>\r\n                      <RuleAuthor rule={rule} updateRule={this.updateRule} active={active} />\r\n                      <Addbutton content=\"Rule Author\" />\r\n                    </div>\r\n                    <div>\r\n                      <RuleMaintainer rule={rule} updateRule={this.updateRule} active={active} />\r\n                      <Addbutton content=\"Rule Maintainer\" />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  {/* ================================================================ */}\r\n                  {/* Data Sources */}\r\n                  {/* Data Sources */}\r\n                  {/* Data Sources */}\r\n                  {/* Data Sources */}\r\n\r\n                  <Box p={4}></Box>\r\n                  <Text variant=\"subtitle\">Origins of Data that this Rule Depends Upon</Text>\r\n                  <Box p={2}></Box>\r\n                  <Grid gridTemplateColumns=\"33% 33% 33%\" gridGap=\"2em\">\r\n                    <div>\r\n                      <InputSources />\r\n                      <Addbutton content=\"Input Source\" />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  {/* ================================================================ */}\r\n                  {/* Input: contexts */}\r\n                  {/* Input: contexts */}\r\n                  {/* Input: contexts */}\r\n                  {/* Input: contexts */}\r\n\r\n                  <Box p={4}></Box>\r\n                  <Text variant=\"subtitle\">\r\n                    Where and when this Rule is Asserted to be in Effect\r\n                  </Text>\r\n                  <Box p={2}></Box>\r\n                  <Grid gridTemplateColumns=\"33% 33% 33%\" gridGap=\"2em\">\r\n                    <div>\r\n                      <DataSource rule={rule} updateRule={this.updateRule} active={active} />\r\n                      <Addbutton content=\"Jurisdiction\" />\r\n                    </div>\r\n                    <Time label=\"Start Time\" />\r\n                    <Time label=\"End Time\" />\r\n                  </Grid>\r\n\r\n                  {/* ================================================================ */}\r\n                  {/* Input: filters */}\r\n                  {/* Input: filters */}\r\n                  {/* Input: filters */}\r\n                  {/* Input: filters */}\r\n\r\n                  <Box p={4}></Box>\r\n                  <Text variant=\"subtitle\">\r\n                    External Data Values for which this Rule is Deemed to be Applicable\r\n                  </Text>\r\n                  <Box p={2}></Box>\r\n                  <Grid gridTemplateColumns=\"33% 33% 33%\" gridGap=\"2em\">\r\n                    <div>\r\n                      <StandardRoleName />\r\n                      <Addbutton content=\"Standard Role Name\" />\r\n                    </div>\r\n                    <div>\r\n                      <InvolvedProduct />\r\n                      <Addbutton content=\"Involved Product or Service\" />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  {/* ================================================================ */}\r\n                  {/* Input Output Table */}\r\n                  {/* Input Output Table */}\r\n                  {/* Input Output Table */}\r\n                  {/* Input Output Table */}\r\n\r\n                  <Box p={4}></Box>\r\n                  <Text variant=\"subtitle\">Input Output Table</Text>\r\n                  <Box p={2}></Box>\r\n                  <Grid gridTemplateColumns=\"33% 33% 33%\" gridGap=\"2em\">\r\n                    <Box\r\n                      p={4}\r\n                      border=\"1px solid\"\r\n                      borderColor=\"oline\"\r\n                      borderRadius=\"base\"\r\n                      bg=\"#fff\"\r\n                      gridArea=\"1 / 1 / 2 / 4\"\r\n                    >\r\n                      {collapse ? (\r\n                        <Button onClick={this.handleCollapse}>Collapse Table</Button>\r\n                      ) : (\r\n                        <Button onClick={this.handleExpand}>Expand Table</Button>\r\n                      )}\r\n                      <Box p={2} />\r\n                      <div style={overflowTable}>\r\n                        <Flex alignItems=\"stretch\">\r\n                          <div style={halfWidth}>\r\n                            <Flex>\r\n                              <Text variant=\"formtitle\">Input Conditions</Text>\r\n                            </Flex>\r\n                          </div>\r\n                          <Box>\r\n                            <Flex>\r\n                              {/* Input Conditions/Output Assertions Case Headings */}\r\n                              {rule.input_conditions[0].cases.map((rowValue, i) => {\r\n                                return (\r\n                                  <div style={ruleLeft} key={i}>\r\n                                    <div>\r\n                                      {collapse ? (\r\n                                        <div style={column}>\r\n                                          <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n                                            <div style={heightAdjust} />\r\n                                            <Text variant=\"formtitle\">\r\n                                              Input Scenario {rowValue.case} &nbsp;\r\n                                            </Text>\r\n                                            <Button\r\n                                              variant=\"invisible\"\r\n                                              onClick={() => {\r\n                                                toast('Unimplemented.');\r\n                                              }}\r\n                                            >\r\n                                              <Icon name=\"toggle\" fill=\"#494D59\" />\r\n                                            </Button>\r\n                                          </Flex>\r\n                                        </div>\r\n                                      ) : (\r\n                                        <Button\r\n                                          variant=\"invisible\"\r\n                                          onClick={() => {\r\n                                            const col = rowValue.case.toUpperCase();\r\n                                            const msg = `Deleting column ${col}.`;\r\n                                            console.log(msg);\r\n                                            toast(msg);\r\n                                            const newRule = deepCopy(rule);\r\n\r\n                                            /* Filter ICs and OAs by letter.*/\r\n                                            newRule.input_conditions = newRule.input_conditions.map(\r\n                                              (ic) => {\r\n                                                ic.cases = ic.cases.filter(\r\n                                                  (x) => x.case.toUpperCase() !== col\r\n                                                );\r\n                                                console.log('IC Reduced:');\r\n                                                console.log(ic);\r\n                                                return ic;\r\n                                              }\r\n                                            );\r\n                                            newRule.output_assertions = newRule.output_assertions.map(\r\n                                              (ic) => {\r\n                                                ic.cases = ic.cases.filter(\r\n                                                  (x) => x.case.toUpperCase() !== col\r\n                                                );\r\n                                                console.log('OA Reduced:');\r\n                                                console.log(ic);\r\n                                                return ic;\r\n                                              }\r\n                                            );\r\n\r\n                                            this.updateRule(newRule);\r\n                                          }}\r\n                                        >\r\n                                          <ColumnLabel rowLabel={rowValue.case || '?'} />\r\n                                        </Button>\r\n                                      )}\r\n                                    </div>\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                              <div style={ruleLeftalt} />\r\n                            </Flex>\r\n                          </Box>\r\n                          <div style={rowWidth}>\r\n                            <Button variant=\"invisible\" onClick={this.addCase}>\r\n                              <Icon name=\"add\" fill=\"#A3D8BE\" />\r\n                            </Button>\r\n                          </div>\r\n                        </Flex>\r\n\r\n                        {/* Input Conditions Data */}\r\n                        {rule.input_conditions.map((val, key) => (\r\n                          <Box key={key}>\r\n                            <InputOutputRow\r\n                              rowData={val}\r\n                              rule={rule}\r\n                              updateRule={this.updateRule}\r\n                              editRow={this.editInputCondition}\r\n                              index={key}\r\n                              inputCondition\r\n                              columnState={collapse}\r\n                            />\r\n                          </Box>\r\n                        ))}\r\n\r\n                        <Flex alignItems=\"stretch\">\r\n                          <div style={halfWidthOnly}>\r\n                            <Addbutton\r\n                              content=\"Add Input Condition\"\r\n                              onClick={() => {\r\n                                /* This function must add a new Input Condition */\r\n                                this.updateRule(addNewInputCondition(rule));\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <BlankRows\r\n                            rule={rule}\r\n                            ruleLeft={ruleLeftOnly}\r\n                            columnState={collapse}\r\n                            column={column}\r\n                          />\r\n                          <div style={rowWidth} />\r\n                        </Flex>\r\n                        <Flex alignItems=\"stretch\">\r\n                          <div style={halfWidthOnly} />\r\n                          <BlankRows\r\n                            rule={rule}\r\n                            ruleLeft={ruleLeftOnly}\r\n                            columnState={collapse}\r\n                            column={column}\r\n                          />\r\n                        </Flex>\r\n                        <Flex alignItems=\"stretch\">\r\n                          <div style={halfWidth}>\r\n                            <Flex>\r\n                              <Text variant=\"formtitle\">Output Assertions</Text>\r\n                            </Flex>\r\n                          </div>\r\n                          <BlankRows\r\n                            rule={rule}\r\n                            ruleLeft={ruleLeft}\r\n                            columnState={collapse}\r\n                            column={column}\r\n                          />\r\n                        </Flex>\r\n                        {rule.output_assertions.map((val, key) => (\r\n                          <Box key={key}>\r\n                            <InputOutputRow\r\n                              rowData={val}\r\n                              rule={rule}\r\n                              updateRule={this.updateRule}\r\n                              editRow={this.editOutputAssertion}\r\n                              index={key}\r\n                              inputCondition={false}\r\n                              columnState={collapse}\r\n                            />\r\n                          </Box>\r\n                        ))}\r\n                        <Flex alignItems=\"stretch\">\r\n                          <div style={halfWidth}>\r\n                            <Addbutton\r\n                              content=\"Add Output Assertion\"\r\n                              onClick={() => {\r\n                                /* Must add a new output assertion. */\r\n                                this.updateRule(addNewOutputAssertion(rule));\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <BlankRows\r\n                            rule={rule}\r\n                            ruleLeft={ruleLeft}\r\n                            columnState={collapse}\r\n                            column={column}\r\n                          />\r\n                        </Flex>\r\n                        <Box padding={1} />\r\n                        <Box padding={1} />\r\n                        <Flex justifyContent=\"flex-end\">{/* the modal button will go here */}</Flex>\r\n                      </div>\r\n                    </Box>\r\n                  </Grid>\r\n\r\n                  {/* ================================================================ */}\r\n                  {/* output purpose */}\r\n                  {/* output purpose */}\r\n                  {/* output purpose */}\r\n                  {/* output purpose */}\r\n\r\n                  <Box p={4}></Box>\r\n                  <Text variant=\"subtitle\">Output Attributes</Text>\r\n                  <Box p={2}></Box>\r\n                  <Grid gridTemplateColumns=\"33% 33% 33%\" gridGap=\"2em\">\r\n                    <Box>\r\n                      <OutputPurpose />\r\n                    </Box>\r\n                    <Box gridArea=\"1 / 2 / 2 / 4\">\r\n                      <QualitativeWeights\r\n                        rule={rule}\r\n                        updateRule={this.updateRule}\r\n                        active={active}\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                  <Box p={2}></Box>\r\n                </div>\r\n              </div>\r\n\r\n              {/* ================================================================ */}\r\n              {/* ================================================================ */}\r\n              {/* ================================================================ */}\r\n            </Box>\r\n            {/* End of the editor */}\r\n          </div>\r\n        ) : (\r\n          <div className=\"loading-rule-data\">\r\n            <div style={{ padding: '4rem', paddingTop: '8rem' }}>\r\n              <ClockLoader size={100} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// libraries\r\nimport React from 'react';\r\nimport Grid from '../components/layout/Grid';\r\n//import { Link } from '@reach/router';\r\n\r\n// components\r\nimport ScrollUp from './components/ScrollUp';\r\n\r\n// rm-components\r\nimport Flex from '../components/layout/Flex';\r\nimport Intro from './components/Intro';\r\n\r\n// Primary Component\r\nexport default class Landing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <ScrollUp>\r\n        <Grid height=\"100vh\" gridTemplateColumns=\"500px auto\" m=\"0\" p=\"0\">\r\n          <Intro name={ user.email }/>\r\n          <Flex alignItems=\"center\" justifyContent=\"center\">\r\n          </Flex>\r\n        </Grid>\r\n      </ScrollUp>\r\n    );\r\n  }\r\n}\r\n","// libraries\r\nimport React from 'react';\r\nimport { Link } from '@reach/router';\r\nimport Box from '../components/layout/Box';\r\nimport Grid from '../components/layout/Grid';\r\nimport Button from '../components/primitives/Button';\r\n// rm-components\r\nimport Text from '../components/primitives/Text';\r\nimport ScrollUp from './components/ScrollUp';\r\nimport Flex from '../components/layout/Flex';\r\nimport Input from '../components/primitives/Input';\r\n\r\n// style\r\nconst inputHold = {\r\n  height: '90vh',\r\n};\r\n\r\nconst widthHold = {\r\n  width: '80%',\r\n};\r\n\r\n// Primary Component\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pageDescription: 'Login to the Oughtomation Engine',\r\n    };\r\n\r\n    // Bind functions\r\n    this.loginButtonOnClick = this.loginButtonOnClick.bind(this);\r\n  }\r\n\r\n  loginButtonOnClick() {\r\n    const loggedIn = this.props.authenticated;\r\n    this.props.toggleAuth();\r\n    if (loggedIn) {\r\n      // User is logging out\r\n      this.props.navigate('/');\r\n    } else {\r\n      // User is logging in\r\n      this.props.navigate('/dashboard');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ScrollUp>\r\n        <Grid gridTemplateColumns=\"50% 50%\">\r\n          <div style={inputHold}>\r\n            <Flex alignItems=\"center\" justifyContent=\"center\">\r\n              <div style={widthHold}>\r\n                <Text variant=\"subtitle\">Log In</Text>\r\n                <Box m={2} />\r\n                <Text>Email</Text>\r\n                <Box m={1} />\r\n                <Input />\r\n                <Box m={2} />\r\n                <Text>Password</Text>\r\n                <Box m={1} />\r\n                <Input />\r\n                <Box m={3} />\r\n                <Link to=\"/dashboard\">\r\n                  <Button variant=\"wide\">Log In</Button>\r\n                </Link>\r\n                <Box m={3} />\r\n                <Flex justifyContent=\"space-between\">\r\n                  <Text color=\"primary\">Create Account</Text>\r\n                  <Text color=\"primary\">Forgot Password</Text>\r\n                </Flex>\r\n              </div>\r\n              <div style={inputHold} />\r\n            </Flex>\r\n          </div>\r\n          <Box borderLeft=\"1px solid #efefef\" />\r\n        </Grid>\r\n      </ScrollUp>\r\n    );\r\n  }\r\n}\r\n","// libraries\r\nimport React from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\n// rm-components\r\nimport Box from '../../components/layout/Box';\r\nimport Grid from '../../components/layout/Grid';\r\nimport Text from '../../components/primitives/Text';\r\nimport Button from '../../components/primitives/Button';\r\nimport Flex from '../../components/layout/Flex';\r\nimport InputField from '../../components/patterns/InputField';\r\nimport Input from '../../components/primitives/Input';\r\nimport Axios from 'axios';\r\n\r\nimport { navigate } from '@reach/router';\r\nimport { generateNewRule } from 'xalgo-rule-processor/dist/rule';\r\nimport axiosRetry from 'axios-retry';\r\nimport { enforceSchemaWithTables } from 'xalgo-rule-processor/dist/processing';\r\nimport { RuleSchema } from 'xalgo-rule-processor/dist/schema';\r\n\r\naxiosRetry(Axios, { retries: 5, retryDelay: axiosRetry.exponentialDelay });\r\n\r\n// style\r\nconst inputHold = {\r\n  height: '90vh',\r\n};\r\n\r\nconst widthHold = {\r\n  width: '500px',\r\n};\r\n\r\n// Primary Component\r\nexport default class RuleName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      description: '',\r\n    };\r\n\r\n    this.saveAndRedirect = this.saveAndRedirect.bind(this);\r\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Set the local state from editor state.\r\n   */\r\n\r\n  handleNameChange(event) {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleDescriptionChange(event) {\r\n    this.setState({ description: event.target.value });\r\n  }\r\n\r\n  /**\r\n   * Persist the local state up to editor state.\r\n   */\r\n  saveAndRedirect() {\r\n    if (this.state.name && this.state.description) {\r\n      console.log(`Name: ${this.state.name}\\nDesc: ${this.state.description}`);\r\n      console.log(`Got token: ${this.props.token}`);\r\n      Axios.post(\r\n        '/rules/rule/',\r\n        {\r\n          name: this.state.name,\r\n          description: this.state.description,\r\n        },\r\n        {\r\n          headers: {\r\n            'X-CSRFToken': this.props.token,\r\n          },\r\n        }\r\n      ).then((res) => {\r\n        if (res.data && res.data.id) {\r\n          const msg = `Created rule with id ${res.data.id}`;\r\n          console.log(res.data);\r\n          const body = generateNewRule();\r\n          body.metadata.rule.title = this.state.name;\r\n          body.metadata.rule.description = this.state.description;\r\n          body.metadata.rule.version = res.data.primary_content;\r\n          body.path = res.data.id;\r\n          let body_enforced = body;\r\n          try {\r\n            body_enforced = enforceSchemaWithTables(RuleSchema, body);\r\n          } catch (e) {\r\n            toast.error('Rule did not pass schema checks.');\r\n            body_enforced = body;\r\n          }\r\n          toast(msg);\r\n          Axios.patch(\r\n            `/rules/content/${res.data.primary_content}/`,\r\n            {\r\n              body: body_enforced,\r\n            },\r\n            {\r\n              headers: {\r\n                'X-CSRFToken': this.props.token,\r\n              },\r\n            }\r\n          ).then((res) => {\r\n            if (res.data && res.data.id) {\r\n              const msg = `Created rule content version with id ${res.data.id}`;\r\n              console.log(res.data);\r\n              toast(msg);\r\n              navigate(`/apps/rm/dashboard/`);\r\n            } else {\r\n              toast.error('Failed to create rule content.');\r\n            }\r\n          });\r\n        } else {\r\n          toast.error('Failed to create rule.');\r\n        }\r\n      });\r\n    } else {\r\n      toast.error('Please enter a valid name and description for the rule.');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid gridTemplateColumns=\"100% 0\">\r\n        <div style={inputHold}>\r\n          <Flex alignItems=\"center\" justifyContent=\"center\">\r\n            <div style={widthHold}>\r\n              <Text variant=\"formtitle\">Every rule begins with a name. </Text>\r\n              <Box m={1} />\r\n              <Text color=\"textb\">\r\n                Use this space to give your rule a name. After that, describe in a simple factual way a summary of this rule, what data this rule requires, and what\r\n                assertions it will make.\r\n              </Text>\r\n              <Box m={2} />\r\n              <Text>Rule Name</Text>\r\n              <Box m={1} />\r\n              <Input\r\n                value={this.state.name}\r\n                onChange={this.handleNameChange}\r\n                placeholder=\"A short and self-explanatory title\"\r\n              />\r\n              <Box m={2} />\r\n              <Text>Rule Description</Text>\r\n              <Box m={1} />\r\n              <InputField\r\n                value={this.state.description}\r\n                onChange={this.handleDescriptionChange}\r\n                placeholder=\"A brief description of the new rule's purpose and outputs\"\r\n              />\r\n              <Box m={3} />\r\n              <Button variant=\"blue\" onClick={this.saveAndRedirect}>\r\n                Start\r\n              </Button>\r\n            </div>\r\n            <div style={inputHold} />\r\n          </Flex>\r\n        </div>\r\n        <Box borderLeft=\"1px solid #efefef\" />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","// libraries\r\nimport React from 'react';\r\nimport Grid from '../components/layout/Grid';\r\nimport RuleName from './editor-layouts/RuleName';\r\nimport Intro from './components/Intro';\r\n\r\n// components\r\nimport ScrollUp from './components/ScrollUp';\r\n\r\n// Primary Component\r\nexport default class NewRule extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { user, token } = this.props;\r\n    return (\r\n      <ScrollUp>\r\n        <Grid height=\"100vh\" gridTemplateColumns=\"500px auto\">\r\n          <Intro name={ user.email }/>\r\n          <RuleName user={user} token={token} />\r\n        </Grid>\r\n      </ScrollUp>\r\n    );\r\n  }\r\n}\r\n","// libraries\r\nimport React from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\n// rm-components\r\nimport Text from '../../components/primitives/Text';\r\nimport Flex from '../../components/layout/Flex';\r\nimport Icon from '../../components/icons/Icon';\r\nimport Grid from '../../components/layout/Grid';\r\nimport Box from '../../components/layout/Box';\r\nimport Button from '../../components/primitives/Button';\r\n\r\n// styles\r\nconst styleHold = {\r\n  position: 'fixed',\r\n  width: '100%',\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: '5',\r\n  background: '#1E2033',\r\n};\r\n\r\nconst styleNavlink = {\r\n  fontSize: '1.05em',\r\n  paddingRight: '2em',\r\n  textDecoration: 'none',\r\n  color: '#fff',\r\n};\r\n\r\nconst svghold = {\r\n  width: '22px',\r\n  height: '22px',\r\n  marginRight: '0px',\r\n  paddingTop: '3px',\r\n};\r\n\r\n// Primary Component\r\nexport default class Navigation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isToggleOn: false,\r\n      isToggleAccount: false,\r\n    };\r\n    this.handleModal = this.handleModal.bind(this);\r\n    this.handleAccount = this.handleAccount.bind(this);\r\n  }\r\n\r\n  handleModal() {\r\n    this.setState((state) => ({\r\n      isToggleOn: !state.isToggleOn,\r\n    }));\r\n  }\r\n\r\n  handleAccount() {\r\n    this.setState((state) => ({\r\n      isToggleAccount: !state.isToggleAccount,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { authenticated } = this.props;\r\n    return (\r\n      <div style={styleHold}>\r\n        <Grid\r\n          gridTemplateColumns=\"400px auto 400px\"\r\n          alignItems=\"center\"\r\n          paddingLeft={3}\r\n          paddingRight={4}\r\n          paddingTop={3}\r\n          paddingBottom={3}\r\n        >\r\n          <Box>\r\n            <Flex alignItems=\"center\">\r\n              <Link to=\"/apps/rm\" style={styleNavlink}>\r\n                <Text variant=\"formtitle\" marginLeft=\"8px\" color=\"#fff\">\r\n                  XRM\r\n                </Text>\r\n              </Link>\r\n            </Flex>\r\n          </Box>\r\n          <Box>\r\n          </Box>\r\n          <Box justifySelf=\"end\">\r\n            <Flex>\r\n              {authenticated ? (\r\n                <Link to=\"/apps/rm/editor\" style={styleNavlink}>\r\n                  <Flex alignItems=\"center\">\r\n                    <div style={svghold}>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\">\r\n                        <title>i-edit-black-small</title>\r\n                        <path\r\n                          fill=\"#fff\"\r\n                          d=\"M14.52,7.87,10.35,3.71,11.86,2.2a2,2,0,0,1,1.41-.58h0a2,2,0,0,1,1.42.58L16,3.53a2,2,0,0,1,0,2.83ZM11.77,3.71l2.75,2.74.8-.79a1,1,0,0,0,0-1.42L14,2.91a1,1,0,0,0-.71-.29h0a1,1,0,0,0-.7.29Z\"\r\n                          transform=\"translate(-0.1 -1.62)\"\r\n                        />\r\n                        <path\r\n                          fill=\"#fff\"\r\n                          d=\"M4.23,18.18H.1V14L9.73,4.38l4.15,4.15Zm-3.13-1H3.81l8.66-8.65L9.73,5.79,1.1,14.39Z\"\r\n                          transform=\"translate(-0.1 -1.62)\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                    <Text>Editor</Text>\r\n                  </Flex>\r\n                </Link>\r\n              ) : null}\r\n              {authenticated ? (\r\n                <Link to=\"/apps/rm/dashboard\" style={styleNavlink}>\r\n                  <Flex alignItems=\"center\">\r\n                    <div style={svghold}>\r\n                      <Icon name=\"dash\" fill=\"#fff\" />\r\n                    </div>\r\n                    <Text>Dashboard</Text>\r\n                  </Flex>\r\n                </Link>\r\n              ) : null}\r\n\r\n              <Flex alignItems=\"center\">\r\n                <Button variant=\"invisible\">\r\n                  <Text color=\"#fff\">Log Out</Text>\r\n                </Button>\r\n              </Flex>\r\n            </Flex>\r\n          </Box>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Input, Flex, Icon, Box, Button } from '..';\r\n\r\nfunction Search() {\r\n  return (\r\n    <Box m={0} width={1} bg=\"bg\">\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Button variant=\"invisible\">\r\n          <Flex alignItems=\"center\" marginTop=\"4px\">\r\n            <Icon name=\"search\" fill=\"#000\" />\r\n          </Flex>\r\n        </Button>\r\n        <Input variant=\"search\" type=\"text\" m={2} />\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","// libraries\r\nimport React from 'react';\r\nimport Box from '../components/layout/Box';\r\nimport Grid from '../components/layout/Grid';\r\nimport Card from '../components/patterns/Card';\r\n// rm-components\r\nimport ScrollUp from './components/ScrollUp';\r\nimport Search from '../components/patterns/Search';\r\nimport Rule from '../components/primitives/Rule';\r\nimport Flex from '../components/layout/Flex';\r\n\r\n// Primary Component\r\nexport default class Query extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pageDescription: 'Query the Rule Database',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    //const { pageDescription } = this.state;\r\n    return (\r\n      <ScrollUp>\r\n        <Box m={4}>\r\n          <Flex>\r\n            <Search />\r\n          </Flex>\r\n        </Box>\r\n        <Rule />\r\n        <Grid height=\"80vh\" gridTemplateColumns=\"400px auto\">\r\n          <Box borderRight=\"1px solid #efefef\">\r\n            <Box p={4}>\r\n              <Card />\r\n              <Card />\r\n              <Card />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </ScrollUp>\r\n    );\r\n  }\r\n}\r\n","// libraries\r\nimport React from 'react';\r\n\r\n// rm-components\r\nimport Text from '../../components/primitives/Text';\r\nimport Flex from '../../components/layout/Flex';\r\nimport Icon from '../../components/icons/Icon';\r\nimport Grid from '../../components/layout/Grid';\r\nimport Box from '../../components/layout/Box';\r\nimport Button from '../../components/primitives/Button';\r\n\r\nconst cc = {\r\n  backgroundColor: \"#494D59\",\r\n  padding: '12px 2em 12px 2em',\r\n}\r\n\r\nconst smalltext = {\r\n  fontSize: '0.55rem',\r\n  color: '#fff',\r\n}\r\n\r\nconst footer = {\r\n  position: 'relative',\r\n  zIndex: '5',\r\n}\r\n\r\n// Primary Component\r\nexport default class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={footer}>\r\n        <Box px={4} py={2} backgroundColor=\"#439D72\">\r\n          <Grid gridTemplateColumns=\"auto 180px\" gridGap=\"2.5%\">\r\n            <Flex alignItems=\"center\">\r\n              <Icon name=\"info\" fill=\"#D0F3E2\"/>\r\n              <Text color=\"#D0F3E2\">This prototype is under construction.</Text>\r\n            </Flex>\r\n                <a\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  href=\"https://github.com/RyanFleck/Xalgo-System-Prototype/issues\"\r\n                >\r\n                  <Button variant=\"error\">\r\n                          Provide Feedback\r\n                  </Button>\r\n                </a>\r\n\r\n          </Grid>\r\n        </Box>\r\n        <Box p={4} backgroundColor=\"#1E2033\">\r\n          <Grid gridTemplateColumns=\"auto 180px 180px\" gridGap=\"2.5%\">\r\n            <div>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"https://xalgorithms.org/\"\r\n              >\r\n                <Text color=\"oline\">\r\n                  Xalgorithms Foundation\r\n                </Text>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <Text color=\"oline\">\r\n                Privacy Policy\r\n              </Text>\r\n              <Text color=\"oline\">\r\n                Terms of Service\r\n              </Text>\r\n            </div>\r\n            <div>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"https://github.com/RyanFleck/Xalgo-System-Prototype\"\r\n              >\r\n                <Text color=\"oline\">\r\n                  Source Code\r\n                </Text>\r\n              </a>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"https://development.xalgorithms.org/\"\r\n              >\r\n                <Text color=\"oline\">\r\n                  Developer Docs\r\n                </Text>\r\n              </a>\r\n            </div>\r\n          </Grid>\r\n          <Box p={4}></Box>\r\n        </Box>\r\n        <div style={cc}>\r\n          <Grid gridTemplateColumns=\"auto 180px\" gridGap=\"2.5%\">\r\n            <p style={smalltext}>\r\n            CC BY-SA 4.0 2020 Xalgorithms Foundation\r\n            </p>\r\n            <p style={smalltext}>\r\n            50 Hines Road, Suite 240,\r\n            <br />\r\n            Ottawa, Ontario, Canada K2K 2M5\r\n            </p>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// libraries\r\nimport { Router } from '@reach/router';\r\nimport React from 'react';\r\n\r\n// rm-components\r\nimport Box from '../components/layout/Box';\r\n\r\n// Pages\r\nimport Browse from './Browse';\r\nimport Dashboard from './Dashboard';\r\nimport EditorV1 from './EditorV1';\r\nimport EditorV2 from './EditorV2';\r\nimport Landing from './Landing';\r\nimport Login from './Login';\r\nimport Theme from '../components/patterns/Theme';\r\nimport NewRule from './NewRule';\r\n\r\n// other components\r\nimport ScrollUp from './components/ScrollUp';\r\n\r\n// layouts\r\nimport Navigation from './components/Navigation';\r\nimport Query from './Query';\r\nimport Footer from './components/Footer';\r\n\r\n// Styling\r\n\r\nconst baseBoxStyle = {\r\n  minHeight: '100vh',\r\n  marginTop: '73px',\r\n  left: '0px',\r\n  width: '100%',\r\n  background: '#F9FBFE',\r\n};\r\n\r\n// Primary Component\r\nexport default class Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      authenticated: true,\r\n      userInfo: {\r\n        name: 'Aaron Anon',\r\n        solidUsername: 'https://anon.solid.community/profile/card#me',\r\n      },\r\n      userRules: [\r\n        {\r\n          name: 'Quebec Gas Station Tax',\r\n          path: 'anon.gas-tax',\r\n        },\r\n        {\r\n          name: 'Singapore Property Tax',\r\n          path: 'anon.property-tax-sg',\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Bind functions\r\n    this.toggleLoggedin = this.toggleLoggedin.bind(this);\r\n  }\r\n\r\n  toggleLoggedin() {\r\n    const { authenticated } = this.state;\r\n    this.setState({ authenticated: !authenticated });\r\n  }\r\n\r\n  render() {\r\n    const { username, user, token, refresh } = this.props;\r\n    const { authenticated, userRules, userInfo } = this.state;\r\n    return (\r\n      <ScrollUp>\r\n        <Theme>\r\n          <Navigation authenticated={authenticated} username={username} user={user} />\r\n          <Box style={baseBoxStyle}>\r\n            <Router primary={false} basepath=\"/apps/rm\">\r\n              <Landing\r\n                path=\"/\"\r\n                authenticated={authenticated}\r\n                userRules={userRules}\r\n                userInfo={userInfo}\r\n                toggleAuth={this.toggleLoggedin}\r\n                username={username}\r\n                user={user}\r\n                token={token}\r\n                refresh={refresh}\r\n              />\r\n              <Browse\r\n                path=\"/browse\"\r\n                authenticated={authenticated}\r\n                userRules={userRules}\r\n                userInfo={userInfo}\r\n                toggleAuth={this.toggleLoggedin}\r\n                username={username}\r\n                user={user}\r\n                token={token}\r\n                refresh={refresh}\r\n              />\r\n              <EditorV1\r\n                path=\"/editor/v1/:ruleUUID\"\r\n                authenticated={authenticated}\r\n                userRules={userRules}\r\n                userInfo={userInfo}\r\n                toggleAuth={this.toggleLoggedin}\r\n                username={username}\r\n                user={user}\r\n                token={token}\r\n                refresh={refresh}\r\n              />\r\n              <EditorV2\r\n                path=\"/editor/:ruleUUID\"\r\n                authenticated={authenticated}\r\n                userRules={userRules}\r\n                userInfo={userInfo}\r\n                toggleAuth={this.toggleLoggedin}\r\n                username={username}\r\n                user={user}\r\n                token={token}\r\n                refresh={refresh}\r\n              />\r\n              <NewRule\r\n                path=\"/editor\"\r\n                authenticated={authenticated}\r\n                userRules={userRules}\r\n                userInfo={userInfo}\r\n                toggleAuth={this.toggleLoggedin}\r\n                username={username}\r\n                user={user}\r\n                token={token}\r\n                refresh={refresh}\r\n              />\r\n              <Login\r\n                path=\"/login\"\r\n                authenticated={authenticated}\r\n                userRules={userRules}\r\n                userInfo={userInfo}\r\n                toggleAuth={this.toggleLoggedin}\r\n                username={username}\r\n                user={user}\r\n                token={token}\r\n                refresh={refresh}\r\n              />\r\n              <Query\r\n                path=\"/query\"\r\n                authenticated={authenticated}\r\n                userRules={userRules}\r\n                userInfo={userInfo}\r\n                toggleAuth={this.toggleLoggedin}\r\n                username={username}\r\n                user={user}\r\n                token={token}\r\n                refresh={refresh}\r\n              />\r\n              <Dashboard\r\n                path=\"/dashboard\"\r\n                authenticated={authenticated}\r\n                userRules={userRules}\r\n                userInfo={userInfo}\r\n                toggleAuth={this.toggleLoggedin}\r\n                username={username}\r\n                user={user}\r\n                token={token}\r\n                refresh={refresh}\r\n              />\r\n            </Router>\r\n          </Box>\r\n          <Footer />\r\n        </Theme>\r\n      </ScrollUp>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Application from './layouts/Application';\r\nimport { ToastContainer, Slide } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction XalgoRM({ user, username, token, refresh }) {\r\n  return (\r\n    <div className=\"XalgoRM\">\r\n      <Application user={user} username={username} token={token} refresh={refresh} />\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        transition={Slide}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable={false}\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default XalgoRM;\r\n","import React, { useEffect, useState } from 'react';\r\nimport GridLoader from 'react-spinners/GridLoader';\r\nimport Axios from 'axios';\r\nimport XalgoRM from './XalgoRM';\r\n\r\nAxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\r\nAxios.defaults.xsrfCookieName = 'XCSRF-TOKEN';\r\n\r\nif (!process.env.HEROKU) {\r\n  console.log('Deployed locally, use :8000 proxy.');\r\n  // Axios.defaults.baseURL = 'http://localhost:8000';\r\n}\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [ready, setReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      Axios.get('/rest-auth/user')\r\n        .then((res) => {\r\n          setUser(res.data);\r\n          setUsername(res.data.username);\r\n          Axios.get('/apps/token/')\r\n            .then((res) => {\r\n              setToken(res.data.token);\r\n              setReady(true);\r\n            })\r\n            .catch((err) => {\r\n              if (err.response && err.response.hasOwnProperty('status')) {\r\n                const status = err.response.status;\r\n                if (status === 403) {\r\n                  console.log(`Failed to get token ${status}`);\r\n                } else {\r\n                  console.log(`Error while getting token: ${status}`);\r\n                }\r\n                setReady(true);\r\n              }\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          if (err.response && err.response.hasOwnProperty('status')) {\r\n            const status = err.response.status;\r\n            if (status === 403) {\r\n              console.log(`Failed to authenticate user: ${status}`);\r\n            } else {\r\n              console.log(`Error while getting user info: ${status}`);\r\n            }\r\n            setReady(true);\r\n          }\r\n        });\r\n    }, 50);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"application-wrapper\">\r\n      {!ready ? (\r\n        <div className=\"loading-wrapper\">\r\n          <div className=\"grid-loader\">\r\n            <GridLoader size={20} margin={15} className=\"grid-loader-spinner\" />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"signed-in\">\r\n          {username === null ? (\r\n            <div>\r\n              <h1>\r\n                <b>428</b> Precondition Required: Log In.\r\n              </h1>\r\n              <p>\r\n                <a className=\"App-link\" href=\"/accounts/login\">\r\n                  Please Log In.\r\n                </a>\r\n                {' If using the development React build, go to '}\r\n                <a className=\"App-link\" href=\"http://localhost:8000/accounts/login\">\r\n                  localhost:8000/accounts/login\r\n                </a>\r\n                {' instead.'}\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <XalgoRM user={user} username={username} token={token} refresh={''} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}